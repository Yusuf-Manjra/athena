2015-12-14  Peter Sherwood  <sherwood@lxplus0065.cern.ch>

	* AlgFactory.py (AlgFactory.hlt_hypo_tla):
	Fix units bug for TLA mass window (GeV=>MeV)
2015-12-11  Peter Sherwood  <sherwood@lxplus0110.cern.ch>

	* AlgFactory.py (AlgFactory.jetrec_triggertowers): 
	Fix unit error: pT cut is in MeV. Numerical value is now 20.0

2015-12-10  Peter Sherwood  <sherwood@lxplus0110.cern.ch>

	* generateJetChainDefs.py (generateChainDefs): add
	debug to dump non JetDef chains.

	* AlgFactory.py (AlgFactory.jetrec_triggertowers): 
	set the pt cut for trigger towers to 20 MeV to 
	prevent the jet algorithm from seeing a large number of
	empty inputs

2015-07-31   Peter Sherwood  <peter@localhost>

	* Changes to jetDefInstantiator, AlgFactory, JetSequenceBuilder and
	test modules to create study TT chains.

	M       python/jet/JetDef_test.py
	M       python/jet/ChainConfigMaker_test.py
	M       python/jet/AlgFactory.py
	M       python/jet/jetDefInstantiator.py
	M       python/jet/test_dicts.py
	M       python/jet/JetSequencesBuilder.py


2015-05-27   Peter Sherwood  <peter@localhost>

	* JetSequencesBuilder.py (JetSequencesBuilder.make_ps): 
	For the SuperROI Algorithm, we are building sequences
	with differerntly SuperROI instances, but with the same te_out.
	This means the te_out no longer uniquely identifies the sequence.
	Resolve by adding the seed (also used for the instance name to the
	AlgList alias.

	* jetDefInstantiator.py: removed unused imports as part of
	a wider code clean-up operation.

2015-05-22   Peter Sherwood  <peter@localhost>

	* JetDef.py (_make_start_te): for non full scan chains set the input 
	TE name to the return value of getInputTEfromL1Item(chain_config.seed)

2015-05-04   Peter Sherwood  <peter@macbookpro-c8e0eb1928f3.fritz.box>

	* hypo_factory_test.py: add test for new hypo alg classes.

	* ChainConfigMaker_test.py: rationalize tests, add to test suite.

	* hypo_factory.py: add more hypo algs classes for 
	various configuration combinations of TrigHLTJetHypo.

2015-05-03   Peter Sherwood  <peter@localhost>

	* ChainConfigMaker.py: add flag to signal 
	if muliple eta regions are requested.

	* JetSequencesBuilder.py (JetSequencesBuilder.make_jh): 
	run the maximum bipartite algorithm if more than one
	eta region is requested. This is currently done
	by manipulating the test flags.


2015-04-30   Peter Sherwood  <peter@localhost>

	* jetDefInstantiator.py: add import of TrigHLTJetHypo

	* ChainConfig.py (ChainConfig): rename self.test to
	self.run_rtt_diags, as "test" isnow used with different meanings.

	* JetSequencesBuilder.py (JetSequencesBuilder.make_jh): 
	improve handling of the test1, 2 3 flags

	* AlgFactory.py (AlgFactory.hlt_hypo_test1,2,3): 
	new method that uses the test1 flag for development

2015-04-29   Peter Sherwood  <peter@localhost>

	* ChainConfig.py (ChainConfig.__init__):
	add support for the test flags that
	can appear in the 'extra' field of the input dictionary.

	* ChainConfigMaker.py: add support for the test flags that
	can appear in the 'extra' field of the input dictionary.

	* AlgFactory.py (AlgFactory.cellMaker_superPS_topo):
	add the  C++ class name to the instance  name
	(AlgFactory.cellMaker_fullcalo_topo):
	add the  C++ class name to the instance  name


2015-03-25   Peter Sherwood  <peter@localhost>

	* AlgFactory.py (AlgFactory.ht_hypo): make HT hypo cuts
	for jets and Sum ET in MEV rather than GeV.

2015-03-19   Peter Sherwood  <peter@localhost>

	* AlgFactory.py (AlgFactory.ht_hypo): have the instance 
	name include the return if hypo_params.attributes_to_string()
	

	* hypo_factory.py (HTHypoAlg.attributes_to_string): 
	new method to help coordinate te and Alg instance names
	to prevent duplicate te names.

	* AlgFactory.py (AlgFactory.ht_hypo): add in cut on jet
	Et.

	* ChainConfigMaker.py (ChainConfigMaker): Add support
	for jet et cut for the HT hypo.

	* JetSequencesBuilder.py (JetSequencesBuilder.make_jh): 
	Stop treating single and multiple jets differently. They
	were being hadled by different python classes that controlled
	the same C++ class. 'Single' and 'Multi' refer to the
	number of thresholds. The single jet case is not handled by 
	with a threshold vector which contains one entry.

	* AlgFactory.py (AlgFactory.jr_hypo_single): removed method
	(AlgFactory.jr_hypo_multi): renamed method to jr_hypo.
	The python class setup in thei method controls the same C++
	path that setup by the now-removed method jr_hypo_single method.
	This is the start of a rationalization of the jet hypo (C++ and
	python) process.

	* ChainConfigMaker.py (ChainConfigMaker.process_part): 
	Add in fex_alg_name. Lead to incorrect evaluation of hypo parameters.
	(ChainConfigMaker._check_part): Abort chain construction if
	pileup sibtraction is requested together with the partial scan.

2015-03-18   Peter Sherwood  <peter@localhost>

	* hypo_factory.py (JetRecHypoAlg.jet_attributes_tostring): 
	improved the doc string.

	* AlgFactory.py (AlgFactory.jr_hypo_multi): remove unused local
	variable "mult".

	* ChainConfigMaker.py (ChainConfigMaker.__call__): Add
	merge paramter and jet calib to the recluster_paramters object.

2015-03-12   Peter Sherwood  <peter@pb-d-128-141-171-232.cern.ch>

	* AlgFactory.py (AlgFactory.__init__): remove attribute
	hypo_sequence_alias
	(AlgFactory.roiDiagnostics): add chain name back into the instance name
	Add chain name back into the alg instance names for diagnositcs
	algorithms

	* jetDefInstantiator.py: remove import of obsolete
	TrigHLTJetRec_param

2015-03-08   Peter Sherwood  <peter@localhost>

	* generateJetChainDefs.py: route HT chain processing to JetDef.py

	* JetSequencesBuilder.py: add HT hypo support

	* JetDef.py: remame function _debug to dump_chaindef (allows import
	from outside the module).
	* add HT hypo support.

	* jetDefInstantiator.py: remove some dead (commented out) code, 
	add import fo EFHT.

	* ChainConfigMaker.py (ChainConfigMaker.process_part): add
	support for the HT hypo.

	* eta_string_conversions.py: new module. Helper fucntions
	to decode the eta string (eg 0eta320)

	* ChainConfig.py (ChainConfig): add new variable hypo_type. Now
	there are two possible hypo Algs (standard, HT), need a way 
	to distinguish them.

	* hypo_factory.py (HTHypoAlg): new class
	some code restructing.

	* hypo_factory_test.py: rationlize code. add in test for the HT
	hypo.

	* AlgFactory.py (AlgFactory.ht_hypo): add method to produce a
	hypo alg proxy.

	* AlgFactory_test.py (TestAlgFactory.make_algfactory_singlejet): 
	add in an eta range to the hypo test variables.

2015-03-05   Peter Sherwood  <peter@localhost>

	* SequenceTree.py (SequenceTree._make_sequences): 
	Shorten the te_out name by replacing the sequence
	history part of the name by a hash.

	* JetDef.py (_make_start_te): handle the special case of
	deteriming first input te name then the lower chain name is
	of the form L1_TAUXXX

	* add support for TrigHLTJetDebug

	* JetSequencesBuilder.py (JetSequencesBuilder.make_fexd): 
	add TrigHLTJetDebug to the diagnostics sequence.

	* jetDefInstantiator.py: add in import of TrigHLTJetDebug

	* AlgFactory.py (AlgFactory.jetRecDebug): new config function
	for Debug Algorithm

	* SequenceTree.py (_update_if_diagnostic_sequence.select): 
	bug fix to seting the te_out for diagnositics sequences

	M       SequenceTree.py
	M       AlgFactory.py
	M       ChangeLog
	M       jetDefInstantiator.py
	M       JetSequencesBuilder.py

2015-03-04   Peter Sherwood  <peter@localhost>

	* JetDef.py: rename function _debug to dump_chain_def

2015-03-03   Peter Sherwood  <peter@localhost>

	* AlgFactory.py (AlgFactory.__init__): bug fix:
	attribute self.hypo_sequence_alias was plced in the wrong class.

2015-02-23   Peter Sherwood  <peter@localhost>

	* JetDef.py (_check_chainpart_consistency.remove_hypodata): 
	remove 'topo' from the chainPArt entries tested for consistency
	ATR-9250

2015-02-13   Peter Sherwood  <peter@pb-d-128-141-184-24.cern.ch>

	* JetSequencesBuilder.py (JetSequencesBuilder.make_fexd): 
	fix bug setting up diagnostics alg list.

2015-02-16   Peter Sherwood  <peter@localhost>

	* JetDef_test.py (TestJetDef.setUp): reduce output to screen.

	* JetDef.py: turn off logging: messages do not make it to the 
	job log file, and it obfuscates the test suite.

	* run_testsuite.py: add module JetDef_test2.

	* Add test module JetDef_test2.py to check for errors in
	setting up all chains including diagnostics chains.


2015-02-05   Peter Sherwood  <peter@localhost>

	* JetDef.py (_check_chainpart_consistency.remove_hypodata): 
	remove btag entries in ChainParts dict before checking
	chain part equality

	* Add in data scouting changes from C Doglioni
	* Return types for the AlgFactory methods are now lists.
	* Update JobSequencesBuilder.py to accomadate for this change
	* Update Algfactory_test.py for these changes

2015-01-28   Peter Sherwood  <peter@localhost>

	* Reintate configuration of reclustered hjet chains - which
	has stopped working.
	M       JetSequencesBuilder.py

2015-01-26   Peter Sherwood  <peter@localhost>

	* Change Hypo names to reflect hypo and jet reco params rather
	than the chainname (coarser granularity of hypo hists).
	* Avoid usin gthe chain name in the final te name.

	D       fex_factory.py
	D       fex_factory_test.py

	M       AlgFactory_test.py
	M       fexparams_factory_test.py
	M       ChainConfigMaker.py
	M       SequenceTree.py
	M       AlgFactory.py
	M       clusterparams_factory.py
	M       fexparams_factory.py


2015-01-20   Peter Sherwood  <peter@localhost>

	* AlgFactory.py (AlgFactory.clusterDiagnostics): 
	The instance name constains the chain name for all the diagnostics
	routines. Gaudi does not allow instance names with '.'
	Replace '.' by '_' in the string used to name the instances.

2015-01-14   Peter Sherwood  <peter@localhost>

	* added config changes for JetDefFromJets (jet reclustering)

	* JetDef_test.py (TestJetDef._test_3): remove _test2
	- depended on 'bad' dictionaries, but tests are noq
	done on real menu files

2014-11-22   Peter Sherwood  <peter@peter-8.fritz.box>

	* SequenceTree.py (SequenceTree._make_sequences): add the
	intput te name to the output te name.

	* JetSequenceRouter.py (_make_cmfs): added Energy density
	alg to Cell and Cluster sequence.
	(_make_cm): as for _make_cmfs.

	* algFactories.py: increase modularity by adding '_' to 
	ffactory function names (provents them from being importable),
	updated the dispatch table accordingly. Added support for 
	EnergyDensity algs.

	* jetDefInstantiator.py: remove dead imports. Add imports for
	EnergyDensity algs. Improve error reporting.

	* algFactories_test.py (make_menu_data): add support for
	testing EnergyDensity algo creation.

	* JetDef.py (usage): add help message for 'python JetDef.py -h'

	* JetDef_test.py (TestJetDef.test_0): add to print out
	what is a real error rather than an intentionally test
	triggered error.

2014-11-21   Peter Sherwood  <peter@peter-8.fritz.box>

	* algFactories.py (_dataScoutingAlg1, _dataScoutingAlg1):
	supplied missing argument to Algorithm

	* add support for data scouting. Fixed bug in algFactories that
	prevented diagnostics from running.

2014-10-24   Peter Sherwood  <peter@peter-8.local>

	* JetSequenceRouter.py (_make_cmfs): mods to handle
	TrigClusterMaker parameters.
	(_make_cm)  mods to handle TrigClusterMaker parameters.
	(_make_jr): switch to using a single config class which
	takes parameters rather tahn many parameter free classes.
	(_make_jh): adjust for changes of variable names in MenuData.

	* algFactories.py: route TrigJetRec requests to a single
	funtion that takes arguments rather than many functions
	that take no arguments.

	* JetDef.py: convert 'calib' input to bool flags for
	controlling TrigHLTJetRec and TrigClusterMaker.
	Setup debug flags with envoronment variables. update
	test dictionaries in run_strawman_test(). Write
	error minders to log.

	* jetDefInstantiator.py: use new  TrigHLTJetRec config classes.

	* MenuData.py: rename variables for increased clarity.
	add cluster_params to configure TrigClusterMaker

	* SequenceTree.py: Add new class SequenceLinear.
	This checks that a tree is of the simple form
	of being a sequence of sequences. Sets the last te_out
	name to 'EF_jets_'<chain_name>.

	* fex_factory.py: remove the calculation of the fex_key.
	This was used to identify the python configuration class
	for JetRec. With the proliferation of parameters, having
	a configuration class for each parameter class became
	inwildy. Now a single parameter-accepting class is used.

	* ChainConfig.py (ChainConfig): add comments.rename variable
	"name" to "chain_name" for clarity.

	* ChainConfigMaker.py: remove the use of chain_part name
	and replace with chain_name. This is used to biuld final TE
	element names. Use cluster_maker to handle cluster making
	arguments

	* cluster_factory.py: new module for handling cluster maling
	arguments

2014-09-02   Peter Sherwood  <peter@pb-d-128-141-165-197.cern.ch>

	* The presence of the string 'perf' in the chain parts dictionaries
	signals that the jet hypo should not be run.

	* JetSequenceRouter.py (_make_sequence_list): ensure hypo
	is run only if the 'run_hypo' flag is set.

	* ChainConfigMaker.py (ChainConfigMaker.__call__): add the 
	'run_hypo' flag in ChainConfig.

	* ChainConfig.py (ChainConfig.__init__): add a flag to turn
	off running the jet hypo (hypo is not run if 'perf'
	occurs in the 'addInfi' list of the chain part dictionary.

	* JetDef.py (_check_input): ensure all chain parts have an
	'addInfo' key.
	(_check_chainpart_consistency.remove_hypodata): check that
	the presence or absence of 'addInfo' is consistant across all
	chain_parts

2014-07-31   Peter Sherwood  <peter@pb-d-128-141-165-159.cern.ch>

	* algFactories.py (jr_hypo_multi): fixed bug setting 
	eta limits
	* Removed dead code.

	* Tag was rolled back. After many SVN trials, copied 
	files from TriggerMenu-00-02-97 to a working copy of trunk
	if the number of lines differed, or if any line was different.

	copied files:
	M       JetDef_test.py
	M       hypo_factory_test.py
	M       hypo_factory.py
	M       ChainConfigMaker.py
	M       ChangeLog
	M       jetDefInstantiator.py
	M       JetDef.py
	M       algFactories.py
	M       Sequence_test.py
	M       Sequence.py
	M       JetSequenceRouter.py


2014-07-25   Peter Sherwood  <peter@peter-8.home>

	* JetSequenceRouter.py (_make_jh): allow the Hypo object to return
	the sequence alias rather than calculating it explicitly.

	* algFactories.py (jr_hypo_single): use python class EFJetHypo
	and no longer EFCentJetHypo, EFFwdJetHypo

	* hypo_factory.py: Allow eta range rather than 'j' or 'fj'

2014-07-24   Peter Sherwood  <peter@peter-8.home>

	* JetDef.py (_make_chaindef): remove the decoding of
	the incoming eta region string to 'j' or 'fj'

	* ChainConfigMaker.py (ChainConfigMaker.process_part): 
	decode the eta range input to float values, rather than 'j'
	or 'fj'
	
	* jetDefInstantiator.py: add import of EFJetHypo, remove 
	imports of EFCentJetHypo, EFFwdJetHypo

2014-07-23   Peter Sherwood  <peter@peter-8.home>

	* fex_factory_test.py (Test_fex_factory): new test module.

2014-07-08   Peter Sherwood  <peter@peter-8.home>

	* JetSequenceRouter.py: more inline documentation.
	removes unused AlgList factory functions.

2014-07-03   Peter Sherwood  <peter@peter-8.home>

	* add support for different for mote than one 
	(multiplicity, threshold) for the JetHypo, eg for
	the chain j175_bmedium_j60_bmedium

014-07-01   Peter Sherwood  <peter@peter-8.home>

	* jetDefInstantiator_test.py: new unit test module

	* hypo_factory_test.py: new unit test module

2014-06-29   Peter Sherwood  <peter@peter-8.home>

	* algFactories_test.py (make_menu_data): take into acount
	name change  jetDiagonistics -> jetRecDiagnostics in algFactories.py

2014-06-18   Peter Sherwood  <peter@peter-8.home>

	* JetSequenceRouter.py: grouped fex diagnositics into a single sequence.

	* algFactories.py: renamed obscure
	dispatch table keys. Removed a number of unused factory functions.
	* algFactories_test.py: adjusted to changed in algFactories.py 

	* JetDef.py: Split of ChainConfig creation to a new module.
	* JetDef_test.py  adjust for the changes to JetDef.

	* ChainConfigMaker new module - due to increasing
	complexity of incoming dictionary. New checks on input
	ditionary consistency, added a new chain to strawman menu
	exerciser

	* jetDefInstantiator.py: Code refactor - bring together
	imports from the same module. Remove import of L2 classes.

2014-06-13   Peter Sherwood  <peter@pb-d-128-141-242-112.cern.ch>

	* Added support for partial scan
	(jetDefInstantiator.py, algFactories.py, JetSequenceRouter.py)
	* Added support for TrigHLTHypoDiagnostics, TrigHLTRoIDiagnostics
	(jetDefInstantiator.py, algFactories.py, JetSequenceRouter.py

	* jetDefAlgToString.py (JetDefAlgToStringInstantiator.__call__): 
	returns alg.asString() rather than alf.factory to make the arguments
	visible

2014-06-12   Peter Sherwood  <peter@pb-d-128-141-242-112.cern.ch>

	* JetDef.py (run_strawman_test): add arguments and default values
	use_atlas_config=True, debug=True

2014-06-10   Peter Sherwood  <peter@peter-8.home>

	* generateJetChainDefs.py (generateChainDefs): 

	reinstating HT chains

2014-06-02   Peter Sherwood  <peter@peter-8.home>

	* Added in diagnostics algorithms.

2014-05-22   Peter Sherwood  <peter@peter-8.home>

	* JetDef.py (_make_sequences): remove '.' from trigger element names

	* jetDefInstantiator.py (Instantiator.__call__): improved
	error message when Algorithm instantiation fails.

2014-05-19   Peter Sherwood  <peter@peter-8.home>

	* JetDef_test.py:  adjust to change in incomming etaRange format.
	* JetDef.py (_fix_incoming_dict): adjust to change in incomming
	etaRange format.


2014-05-16   Peter Sherwood  <peter@peter-8.home>

	* Updates to take into account the changes in the input dictionary.

2014-05-12   Peter Sherwood  <peter@peter-8.home>

	* More unit tests
	* added run_coverage.py to help run coverage
	* replace in trigger element namesd '::' as a sequence separator with '.'
	* documentation_design.pdf: new design document

	M       JetDef_test.py
	M       JetDef.py
	M       algFactories.py
	M       JetSequenceRouter_test.py
	M       JetSequenceRouter.py
	A       run_coverage.py
	A       documentation_design.pdf

2014-05-10   Peter Sherwood  <peter@peter-8.home>

	* simplified the code by assuming that we can use the TT
	recoType, and therefore do not need to add  TT sequence info by hand.
	KnownChains and ChainSpecifics are no longer needed.
	Removed TEotu_aliases - lead to trouble when new sequences were
	added early on in the sequence structure. Now supply an alias to
	alg lists when these are created in JetSequenceRouter. New class
	AlgList maintains the association of the alias and the actual list.

	* Added new helper class files that were present in ChainSpecifics

	* removed failing (and unused) imports from jetDefInstantiator
	
	A       MenuData.py
	A       hypo_factory.py
	A       ChainConfig.py
	A       fex_factory.py

	D       TEout_aliases.py
	D       ChainSpecifics.py
	D       KnownChains.py

	M       JetDef_test.py
	M       ChangeLog
	M       JetDef.py
	M       jetDefInstantiator.py
	M       JetSequenceRouter.py
	M       run_testsuite.py

	

2014-05-09   Peter Sherwood  <peter@pb-d-128-141-163-236.cern.ch>

	* JetDef.py (_check_input): allow for up to 2 chain parts
	with recoType 'TT' and 'tc'

2014-05-09   Peter Sherwood  <peter@pb-d-128-141-242-20.cern.ch>

	* ChainSpecifics.py (chainSpecifics): add fullscan flag

	* algFactories.py: rationalised some names

	* JetSequenceRouter.py (JetSequenceRouter): added a sequence
	for making a fullRoI sequence.

	* JetDef.py (_decode): add in fullscan flag for multijets.
	This is temporary while waiting for partial scan.

	M       ChangeLog
	M       JetDef.py
	M       algFactories.py
	M       ChainSpecifics.py
	M       JetSequenceRouter.py

2014-05-04   Peter Sherwood  <peter@peter-8.home>

	* TEout_aliases.py: New c
