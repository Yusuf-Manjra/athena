# Copyright (C) 2002-2017 CERN for the benefit of the ATLAS collaboration

from TopoOutput import TopoOutput
from AthenaCommon.Logging import logging
log = logging.getLogger("TriggerMenu.l1topo.L1TopoMenu")

class L1TopoMenu:

    def __init__(self, menuName):
        self.menuName = menuName
        # algorithms and their output location
        self.topoOutput = []

        self.globalConfig = dict()

    def __iter__(self):
        return self.topoOutput.__iter__()

    def __call__(self):
        return self.topoOutput
        
    def algoNames(self):
        return [x.algoname for x in self.topoOutput]         

    def __len__(self):
        return len(self.topoOutput)

    def addTopoLine(self, topoline):
        self.topoOutput += topoline

    def __iadd__(self, topoline):
        if topoline is not None:
            self.topoOutput += [ topoline ]
        return self

    def addGlobalConfig(self, name, value):
        self.globalConfig[name]=str(value)

    def xml(self, ind=1, step=2):
        s  = '<?xml version="1.0" ?>\n'
        s += '<TOPO_MENU menu_name="Topo_pp_vX" menu_version="1">\n' # % (self.menuName.replace("Physics_pp_","").replace("MC_pp_",""))
        s += '  <!--File is generated by TriggerMenu-->\n'
        s += '  <!--No. L1Topo algos defined: %i-->\n' % len(self.topoOutput)
        s += '  <OutputList>\n'
        for output in self.topoOutput:  # (Setup for module, fpga, firstbit, clock should be modified in more flexible way.)
            s += output.xml(ind+1,step)
        s += '  </OutputList>\n\n'
        s += '  <TopoConfig>\n'

        for gPar in sorted(self.globalConfig.keys()):
            s += '    <Entry name="%s" value="%s"/>\n' % (gPar, self.globalConfig[gPar])
        s += '  </TopoConfig>\n\n'

        allSortAlgs = set()
        for output in self.topoOutput:
            allSortAlgs.update(output.sortingAlgos)
        for sortAlg in sorted(allSortAlgs):
            s += sortAlg.xml()+"\n"

        for output in self.topoOutput:
            s += output.algo.xml()+"\n"

        s += '</TOPO_MENU>\n'
        return s




    def readMenuFromXML(self,inputFile):
        from XMLMenuReader import readMenuFromXML
        readMenuFromXML(self, inputFile)
        
    def checkL1Topo(self):
        """

        All other checks should be implemented in TrigConfStorage/src/CheckConsistency.cxx

        This method is only for quick solutions but should be intermediate
        """
        return True

