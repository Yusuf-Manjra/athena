/*
  Copyright (C) 2002-2019 CERN for the benefit of the ATLAS collaboration
*/

#ifndef TRIGT1RESULTBYTESTREAM_RECROIBRESULTBYTESTREAMCNV_ICC
#define TRIGT1RESULTBYTESTREAM_RECROIBRESULTBYTESTREAMCNV_ICC

// Trigger includes
#include "TrigT1Result/RecRoIBResult.h"

// Athena includes
#include "ByteStreamCnvSvc/ByteStreamCnvSvc.h"
#include "AthenaKernel/StorableConversions.h"

/**
 * The constructor sets up the ToolHandle object(s) and initialises the
 * base class in the correct way.
 */
template< class ROBF >
RecRoIBResultByteStreamCnv< ROBF >::RecRoIBResultByteStreamCnv( ISvcLocator* svcloc )
  : Converter( storageType(), classID(), svcloc ),
    AthMessaging( msgSvc(), "RecRoIBResultByteStreamCnv" ),
    m_tool( "RecRoIBResultByteStreamTool" ),
    m_robDataProviderSvc( "ROBDataProviderSvc", "RoIBResultByteStreamCnv" ) {

}

/**
 * Function telling the framework the Class ID of the object that this converter
 * is for (RecRoIBResult).
 */
template< class ROBF >
const CLID& RecRoIBResultByteStreamCnv< ROBF >::classID() {

  return ClassID_traits<ROIB::RecRoIBResult>::ID();

}

template< class ROBF >
long RecRoIBResultByteStreamCnv< ROBF >::storageType() {
  return ByteStreamAddress::storageType();
}

/**
 * Init method gets all necessary services etc.
 */
template< class ROBF >
StatusCode RecRoIBResultByteStreamCnv< ROBF >::initialize() {
  //
  // Initialise the base class:
  //
  ATH_CHECK(  Converter::initialize() );
  ATH_MSG_DEBUG("In initialize()");

  //
  // Get ROBDataProviderSvc:
  //
  ATH_CHECK( m_robDataProviderSvc.retrieve() );
  ATH_MSG_DEBUG("Retrieved ROBDataProviderSvc");

  //
  // Get RecRoIBResultByteStreamTool:
  //
  ATH_CHECK( m_tool.retrieve() );
  ATH_MSG_DEBUG("Retrieved RecRoIBResultByteStreamTool");

  return StatusCode::SUCCESS;

}

/**
 * This function creates the RecRoIBResult object from the BS data. It collects all the
 * ROB fragments coming from the RoI Builder and gives them to RecRoIBResultByteStreamTool
 * for conversion.
 */
template< class ROBF >
StatusCode RecRoIBResultByteStreamCnv< ROBF >::createObj( IOpaqueAddress* /*pAddr*/, DataObject*& pObj ) {
  ATH_MSG_DEBUG("createObj() called");

  ROIB::RecRoIBResult* result = new ROIB::RecRoIBResult;

  IROBDataProviderSvc::VROBFRAG vrobf;
  m_robDataProviderSvc->getROBData(m_tool->configuredROBIds(), vrobf, "RecRoIBResultByteStreamCnv");

  // Convert to Object
  ATH_CHECK( m_tool->convert( vrobf, *result ) );

  ATH_MSG_DEBUG("Conversion done");

  pObj = SG::asStorable( result );
  return StatusCode::SUCCESS;

}

#endif // TRIGT1RESULTBYTESTREAM_RECROIBRESULTBYTESTREAMCNV_ICC
