#!/bin/python

# Copyright (C) 2002-2017 CERN for the benefit of the ATLAS collaboration
##-----------------------------------------------------------
##
## runSkim.py
##
## Configuration script for TriggerJpsiAnalysis
## Creates ROOT macro with desired configuration,
##
## author: Daniel Scheirich <scheiric@cern.ch>
## Part of TriggerJpsiAnalysis in TrigBphysValidation package
##
##-----------------------------------------------------------
import string, os

##-----------------------------------------------------------
## Basic settings
##-----------------------------------------------------------

skimL2       = False

outputLevel  = "INFO"                 # output level: "DEBUG", "INFO", "WARNING", "ERROR"
execute      = True                   # execute macro

##-----------------------------------------------------------
## More settings
##-----------------------------------------------------------

chains = []
settings    = ''

settings +=  ' Level1(EF_mu0_NoAlg) '         # Level-1 trigger
settings +=  ' PassThrough(_mu4_,_MU4_) '     #pass-through chains, coma separated list. Only part of the name can be specified, e.g. _mu4_,_MU4_

#settings +=  ' GRL(data10_7TeV.periodD.158045-159224_LBSUMM_DetStatus-v03-pass1-analysis-2010D-RPCloose_data_muon_7TeV.xml) '   # GRL
#settings +=  ' GRL(data10_7TeV.periodE.160387-161948_LBSUMM_DetStatus-v03-pass1-analysis-2010E_data_muon_7TeV.xml) '   # GRL
#settings +=  ' GRL(data10_7TeV.periodF.162347-162882_LBSUMM_DetStatus-v03-pass1-analysis-2010F_data_muon_7TeV.xml) '   # GRL
settings +=  ' GRL(data10_7TeV.periodG.165591-166383_LBSUMM_DetStatus-v03-pass1-analysis-2010G_muon_7TeV.xml) '

if skimL2 :

  settings += ' OutFileName=\\"skimL2.root\\" '

  chains += [ "L2_MU4_DiMu" ]
  chains += [ "L2_MU4_DiMu_FS" ]
  chains += [ "L2_MU4_DiMu_SiTrk_FS" ]
  chains += [ "L2_mu4_DiMu" ]
  chains += [ "L2_mu4_DiMu_FS" ]
  chains += [ "L2_mu4_DiMu_SiTrk_FS" ]

  chains += [ "L2_mu4_Jpsimumu"]
  chains += [ "L2_mu4_Upsimumu_FS" ]


  chains += [ "L2_2mu4" ]
  chains += [ "L2_2mu4_DiMu" ]
  chains += [ "L2_2mu4_DiMu_noVtx" ]
  chains += [ "L2_2mu4_Jpsimumu" ]
  chains += [ "L2_2mu4_Upsimumu" ]


else :

  settings +=  ' UseEFPassThrough '            # selection based on EF pass-through instead of L2
  settings += ' OutFileName=\\"skimEF.root\\" '

  chains += [ "EF_MU4_DiMu" ]
  chains += [ "EF_MU4_DiMu_FS" ]
  chains += [ "EF_MU4_DiMu_SiTrk_FS" ]

  chains += [ "EF_mu4_DiMu" ]
  chains += [ "EF_mu4_DiMu_FS" ]
  chains += [ "EF_mu4_DiMu_SiTrk_FS" ]

  chains += [ "EF_mu4_Jpsimumu"]
  chains += [ "EF_mu4_Upsimumu_FS" ]

  chains += [ "EF_2mu4" ]
  chains += [ "EF_2mu4_DiMu" ]
  chains += [ "EF_2mu4_DiMu_noVtx" ]
  chains += [ "EF_2mu4_Jpsimumu" ]
  chains += [ "EF_2mu4_Upsimumu" ]



##-----------------------------------------------------------
## Input files
##-----------------------------------------------------------
## You can either specify list of files explicitly using inFileNames
## or you can load entire directory using dirPath vatiable

## list of input files created by TriggerJpsiAnalysis algorithm
#inFileNames  = [ ]

#inFileNames += [ "/net/s3_datac/scheiric/data/output_TriggerJpsiAnalysis/2010-10-13/user.scheiric.01.data10_7TeV_Muons_DetStatus-v03-pass1-analysis-2010F.periodF.TrigJpsiAnalysis.101012111203/user.scheiric.001618.EXT0._00002.bphys.root" ]
#inFileNames += [ "/net/s3_data_home/scheiric/workdir/TriggerValidation/AtlasOffline-15.8.0/WorkArea/run/bphys.04.root" ]

#inFileNames += [ "/net/s3_datac/scheiric/data/output_TriggerJpsiAnalysis/2010-10-13/rootfiles/user.scheiric.001618.EXT0._00002.bphys.root" ]


## directory containing root files created by TriggerJpsiAnalysis algorithm
#dirPath       = "/net/s3_datac/scheiric/data/output_TriggerJpsiAnalysis/2010-10-13/rootfiles/"

##-----------------------------------------
## Main script -- DO NOT EDIT !
##-----------------------------------------

## generate root macro

macro   = ""
macro   += "// Generated by runSkim.py\n"
macro   += "#include <vector>\n"
macro   += "#include <string>\n"
macro   += "#include \"Log.h\"\n"
macro   += "void runSkim() {\n"
macro   += "  gSystem->Load(\"libGoodRunsLists.so\");\n"
macro   += "  gSystem->Load(\"SkimTrigNtuples_cpp.so\");\n"
if('dirPath' in dir()):
  macro   += "  SkimTrigNtuples analysis(" + outputLevel + ", \"" + dirPath + "\");\n"

else:
  macro   += "  std::vector<std::string> files;\n"
  for file in inFileNames :
    macro += "  files.push_back( \"" + file + "\" );\n"
  macro   += "  SkimTrigNtuples analysis(" + outputLevel + ", files);\n"

macro   += "  std::vector<std::string> chains;\n"
for chain in chains :
  macro += "  chains.push_back( \"" + chain + "\" );\n"


macro   += "  analysis.skim(\""+ settings +"\", chains);\n"
macro   += "}\n"

## create macro
f = open("runSkim.C","w")
f.write(macro)
f.close()

## execute root macro
if(execute) :
  os.system( "root -b -q runSkim.C" )

## end of script



