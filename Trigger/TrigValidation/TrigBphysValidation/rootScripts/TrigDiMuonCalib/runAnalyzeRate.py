#!/bin/python

# Copyright (C) 2002-2017 CERN for the benefit of the ATLAS collaboration
##-----------------------------------------------------------
##
## runAnalyzeRate.py
##
## Configuration script for TriggerJpsiAnalysis
## Creates ROOT macro with desired configuration,
##
## author: Daniel Scheirich <scheiric@cern.ch>
## Part of TriggerJpsiAnalysis in TrigBphysValidation package
##
##-----------------------------------------------------------
import string, os

##-----------------------------------------------------------
## Basic settings
##-----------------------------------------------------------

chain        = "L2_MU4_DiMu_FS"  # name of the chain that should be analyzed
outputLevel  = "INFO"            # output level: "DEBUG", "INFO", "WARNING", "ERROR"
execute      = True              # execute macro

##-----------------------------------------------------------
## More settings
##-----------------------------------------------------------
## add flags to the settings string to activate features

settings = ""
settings += " massBinLo=8 massBinHi=13 "
settings += ' ConstantsFile=\\"constants_final.py\\" '
settings += ' CutConeFile=\\"cut_cone_final.py\\" '
settings += ' NEvents=31879 '

## performance study cuts

perfCuts    = [ ]
perfCuts   += [ "HypoNMuHits(3)"          ]      # no. of associated hits requested in Hypo step
#perfCuts   += [ "HypoChi2(30)"          ]      # no. of associated hits requested in Hypo step
#perfCuts   += [ "HypoMass(2500,4000)" ]      # TrigL2Bphys invariant mass cut

if "_noOS" not in chain :
  perfCuts += [ "HypoCheckOS(1)" ]    # check that track have opposite sign


##-----------------------------------------------------------
## Input files
##-----------------------------------------------------------
## You can either specify list of files explicitly using inFileNames
## or you can load entire directory using dirPath vatiable

## list of input files created by TriggerJpsiAnalysis algorithm
inFileNames  = [ ]
inFileNames += [ chain+".09.root" ]


## directory containing root files created by TriggerJpsiAnalysis algorithm
#dirPath       = ""

##-----------------------------------------
## Main script -- DO NOT EDIT !
##-----------------------------------------
## Jpsi selection cuts
import jpsiCuts

## create cuts string

cutStr = ""
for cut in perfCuts:
  cutStr += cut + " "

for cut in jpsiCuts.cuts:
  cutStr += cut + " "

## generate root macro

macro   = ""
macro   += "// Generated by runAnalyzeRate.py\n"
macro   += "#include <vector>\n"
macro   += "#include <string>\n"
macro   += "#include \"Log.h\"\n"
macro   += "void runAnalyzeRate() {\n"
macro   += "  gSystem->Load(\"TrigDiMuonRootCalib_cpp.so\");\n"
if('dirPath' in dir()):
  macro   += "  TrigDiMuonRootCalib analysis(" + outputLevel + ", \"" + dirPath + "\");\n"

else:
  macro   += "  std::vector<std::string> files;\n"
  for file in inFileNames :
    macro += "  files.push_back( \"" + file + "\" );\n"
  macro   += "  TrigDiMuonRootCalib analysis(" + outputLevel + ", files);\n"

macro   += "  analysis.analyzeRate(\""+ chain +"\", \""+ settings +"\", \""+ cutStr +"\");\n"
macro   += "}\n"

## create macro
f = open("runAnalyzeRate.C","w")
f.write(macro)
f.close()

## execute root macro
if(execute) :
  os.system( "root -l runAnalyzeRate.C" )

## end of script



