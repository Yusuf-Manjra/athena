#!/bin/python

# Copyright (C) 2002-2017 CERN for the benefit of the ATLAS collaboration
##-----------------------------------------------------------
##
## runAnalyzeRate.py
##
## Configuration script for TriggerJpsiAnalysis
## Creates ROOT macro with desired configuration,
##
## author: Daniel Scheirich <scheiric@cern.ch>
## Part of TriggerJpsiAnalysis in TrigBphysValidation package
##
##-----------------------------------------------------------
import string, os

##-----------------------------------------------------------
## Basic settings
##-----------------------------------------------------------

chain        = "L2_MU4_DiMu_FS_noRoI"  # name of the chain that should be analyzed

#chain        = "EF_MU4_Trk_Jpsi_loose_FS"  # name of the chain that should be analyzed

outputLevel  = "INFO"                 # output level: "DEBUG", "INFO", "WARNING", "ERROR"
execute      = True                   # execute macro
doSimple     = True                   # performs simple analysis using Trigger Decision only

##-----------------------------------------------------------
## More settings
##-----------------------------------------------------------
## add flags to the settings string to activate features

settings    = ''
#settings    += ' TrackCollName=\\"MuidMuonCollectionTracks\\" '
#settings    += ' MuonCollName=\\"MuidMuonCollection\\" '

## performance study cuts

perfCuts    = [ ]
perfCuts   += [ "HypoNMuHits(3)"          ]      # no. of associated hits requested in Hypo step
#perfCuts   += [ "TrigTrkPt(3000)"     ]      # trigger tracks pT cut (tracks from TrigL2Bphys are taken, thus this cut will project to FEX efficiency)
#perfCuts   += [ "HypoMass(2500,4000)" ]      # TrigL2Bphys invariant mass cut

if "L2_" in chain :
  ## analyze level2 chains

  if "_DiMu" in chain :
    ## TrigDiMuon chains
    perfCuts += [ "HypoNMuHits(3)"   ]    # no. of associated muon hits requested in Hypo step
    perfCuts += [ "DoNMuHitsScan(1)" ]    # perform number-of-hits scan (only for TrigDiMuon)
    perfCuts += [ "DoChi2Scan(1)"    ]    # perform chi2 scan
    #perfCuts += [ "HypoMass(2500,4000)" ]  # TrigL2Bphys invariant mass cut

    if "_noOS" not in chain :
      perfCuts += [ "HypoCheckOS(1)" ]    # check that track have opposite sign


  if "_Trk_Jpsi" in chain :
    ## Muon+Track chains

    perfCuts += [ "DoChi2Scan(1)"    ]    # perform chi2 scan

##-----------------------------------------------------------
## Input files
##-----------------------------------------------------------
## You can either specify list of files explicitly using inFileNames
## or you can load entire directory using dirPath vatiable

## list of input files created by TriggerJpsiAnalysis algorithm
inFileNames  = [ ]
inFileNames += [ "../../run/TrigJpsi.01.bphys.root" ]
#inFileNames += [ "/net/s3_datac/scheiric/data/output_TrigDiMuonCalib/2010-06-22/rootfiles/user.scheiric.13.data10_7TeV_MuonswBeam.00155228.TrigDiMuonCalib.bphys.root" ]
#inFileNames += [ "/net/s3_datac/scheiric/data/output_TriggerJpsiAnalysis/2010-05-11/rootfiles/user10.DanielScheirich.07.data10_7TeV_MuonswBeam.00154810.TriggerJpsiAnalysis.bphys.root" ]
#inFileNames += [ "/net/s3_datac/scheiric/data/output_TrigDiMuonCalib/2010-06-25/rootfiles/user.scheiric.14.data10_7TeV_MuonswBeam.00154810.TrigDiMuonCalib.bphys.root" ]

## directory containing root files created by TriggerJpsiAnalysis algorithm
#dirPath       = "/net/s3_datac/scheiric/data/output_TriggerJpsiAnalysis/2010-05-07/rootfiles"   ## min bias stream
#dirPath       = "/net/s3_datac/scheiric/data/output_TriggerJpsiAnalysis/2010-05-08/rootfiles"   ## muon stream
#dirPath       = "/net/s3_datac/scheiric/data/output_TriggerJpsiAnalysis/2010-05-10/rootfiles"   ## muon stream 2 runs with all events
#dirPath       = "/net/s3_datac/scheiric/data/output_TriggerJpsiAnalysis/2010-05-27/rootfiles"   ## muon stream, fixed TrigDecisionToolBug
#dirPath       = "/net/s3_datac/scheiric/data/output_TrigDiMuonCalib/2010-06-25/rootfiles/"

##-----------------------------------------
## Main script -- DO NOT EDIT !
##-----------------------------------------
## Jpsi selection cuts
import jpsiCuts

## create cuts string

cutStr = ""
for cut in perfCuts:
  cutStr += cut + " "

for cut in jpsiCuts.cuts:
  cutStr += cut + " "

## generate root macro

macro   = ""
macro   += "// Generated by runAnalyzeRate.py\n"
macro   += "#include <vector>\n"
macro   += "#include <string>\n"
macro   += "#include \"Log.h\"\n"
macro   += "void runAnalyzeRate() {\n"
macro   += "  gSystem->Load(\"TrigJpsiRootAnalysis_cpp.so\");\n"
if('dirPath' in dir()):
  macro   += "  TrigJpsiRootAnalysis analysis(" + outputLevel + ", \"" + dirPath + "\");\n"

else:
  macro   += "  std::vector<std::string> files;\n"
  for file in inFileNames :
    macro += "  files.push_back( \"" + file + "\" );\n"
  macro   += "  TrigJpsiRootAnalysis analysis(" + outputLevel + ", files);\n"

if doSimple :
  macro   += "  analysis.analyzeRateSimple(\""+ chain +"\", \""+ settings +"\", \""+ cutStr +"\");\n"
else :
  macro   += "  analysis.analyzeRate(\""+ chain +"\", \""+ settings +"\", \""+ cutStr +"\");\n"

macro   += "}\n"

## create macro
f = open("runAnalyzeRate.C","w")
f.write(macro)
f.close()

## execute root macro
if(execute) :
  os.system( "root -l runAnalyzeRate.C" )

## end of script



