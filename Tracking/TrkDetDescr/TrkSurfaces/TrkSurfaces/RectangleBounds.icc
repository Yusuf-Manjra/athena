/*
  Copyright (C) 2002-2021 CERN for the benefit of the ATLAS collaboration
*/

namespace Trk {
inline RectangleBounds*
RectangleBounds::clone() const
{
  return new RectangleBounds(*this);
}

inline bool
RectangleBounds::inside(const Amg::Vector2D& locpo,
                        double tol1,
                        double tol2) const
{
  return (
    (fabs(locpo[locX]) < m_boundValues[RectangleBounds::bv_halfX] + tol1) &&
    (fabs(locpo[locY]) < m_boundValues[RectangleBounds::bv_halfY] + tol2));
}

inline bool
RectangleBounds::insideLoc1(const Amg::Vector2D& locpo, double tol1) const
{
  return (fabs(locpo[locX]) < m_boundValues[RectangleBounds::bv_halfX] + tol1);
}

inline bool
RectangleBounds::insideLoc2(const Amg::Vector2D& locpo, double tol2) const
{
  return (fabs(locpo[locY]) < m_boundValues[RectangleBounds::bv_halfY] + tol2);
}

inline double
RectangleBounds::halflengthPhi() const
{
  return this->halflengthX();
}

inline double
RectangleBounds::halflengthEta() const
{
  return this->halflengthY();
}

inline double
RectangleBounds::halflengthX() const
{
  return m_boundValues[RectangleBounds::bv_halfX];
}

inline double
RectangleBounds::halflengthY() const
{
  return m_boundValues[RectangleBounds::bv_halfY];
}

inline double
RectangleBounds::r() const
{
  return sqrt(m_boundValues[RectangleBounds::bv_halfX] *
                m_boundValues[RectangleBounds::bv_halfX] +
              m_boundValues[RectangleBounds::bv_halfY] *
                m_boundValues[RectangleBounds::bv_halfY]);
}

} // end of namespace

