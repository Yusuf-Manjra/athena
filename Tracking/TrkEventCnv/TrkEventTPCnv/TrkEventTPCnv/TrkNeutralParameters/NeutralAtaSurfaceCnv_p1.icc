/*
  Copyright (C) 2002-2017 CERN for the benefit of the ATLAS collaboration
*/

//-----------------------------------------------------------------------------
//
// file:   NeutralAtaSurfaceCnv_p1.icc
//
//-----------------------------------------------------------------------------

template< class SURFACE_CNV, class ATA_SURFACE >
void
NeutralAtaSurfaceCnv_p1< SURFACE_CNV, ATA_SURFACE >::
persToTrans( const Trk::AtaSurface_p1 *persObj, ATA_SURFACE *transObj, MsgStream &log )
{
   this->fillTransFromPStore( &m_paramCnv, persObj->m_parameters, transObj, log );
   transObj->m_surface = this->createTransFromPStore( &m_surfaceCnv, persObj->m_assocSurface, log );
   ITPConverterFor<Trk::Surface>* surfaceCnv=0;
   const Trk::Surface* temp = this->createTransFromPStore( &surfaceCnv, persObj->m_assocSurface, log );
   
   DetElementSurfaceCnv_p1* detElCnv = dynamic_cast<DetElementSurfaceCnv_p1*>(surfaceCnv); 
   if (detElCnv) {
       // have a DetElementSurface
       temp = detElCnv->createSurface(log);
   }
   
   transObj->m_surface = dynamic_cast<const typename SURFACE_CNV::Trans_t*>(temp);
   
    if (transObj->m_surface!=NULL) {
       if (transObj->m_parameters[Trk::qOverP] < 0.) transObj->m_chargeDefinition.flipSign();
       // fill momentum & then position using the surface
       double qop=transObj->m_parameters[Trk::qOverP];
       
       double p = qop != 0. ? (static_cast<double>(transObj->m_chargeDefinition))/qop : 1.;
       double phi = transObj->m_parameters[Trk::phi];
       double theta = transObj->m_parameters[Trk::theta];

       transObj->m_momentum = Amg::Vector3D(p*cos(phi)*sin(theta),
                                                         p*sin(phi)*sin(theta),
                                                         p*cos(theta));
       transObj->m_surface->localToGlobal(transObj->localPosition(),
                                transObj->m_momentum,
                                transObj->m_position);  
   }
}

template< class SURFACE_CNV, class ATA_SURFACE >
void
NeutralAtaSurfaceCnv_p1< SURFACE_CNV, ATA_SURFACE >::
transToPers( const ATA_SURFACE * /**transObj*/, Trk::AtaSurface_p1 * /**persObj*/, MsgStream & /**log*/ )
{
  throw std::runtime_error("NeutralAtaSurfaceCnv_p1::transToPers is deprecated!");
}

