#-- start of application

$(bin)${CONSTITUENT}${application_suffix} :: ${OBJS} $(use_stamps) $(${CONSTITUENT}_stamps) $(${CONSTITUENT}stamps) $(use_requirements)
	$(link_echo) "application $@"
	$(link_silent) ${LINKMACRO} -o $(@).new ${OBJS} $(cmt_installarea_linkopts) $(${CONSTITUENT}_use_linkopts) $(${CONSTITUENT}linkopts) && mv -f $(@).new $(@)
ifneq (${SEPARATEDEBUG},)
	$(echo) stripping dbg symbols into separate file $@$(debuginfosuffix)
	$(link_silent) objcopy --only-keep-debug $@ $@$(debuginfosuffix)
	$(link_silent) objcopy --strip-debug $@
	$(link_silent) cd $(@D) && objcopy --add-gnu-debuglink=$(@F)$(debuginfosuffix) $(@F)
endif

ifneq ($(strip $(use_stamps)),)
# Work around Make errors if stamps files do not exist
$(use_stamps) :
endif

#-----------------------------------------------------------------
#
#  New section for automatic installation
#
#-----------------------------------------------------------------

install_dir = ${CMTINSTALLAREA}/$(tag)/bin
${CONSTITUENT}installname = ${CONSTITUENT}${application_suffix}

${CONSTITUENT} :: ${CONSTITUENT}install ;

install :: ${CONSTITUENT}install ;

${CONSTITUENT}install :: $(install_dir)/$(${CONSTITUENT}installname)
ifdef CMTINSTALLAREA
	$(echo) "installation done"
endif

$(install_dir)/$(${CONSTITUENT}installname) :: $(bin)$(${CONSTITUENT}installname)
ifdef CMTINSTALLAREA
	$(install_silent) $(cmt_install_action) \
	    -source "`(cd $(bin); pwd)`" \
	    -name "$(${CONSTITUENT}installname)" \
	    -out "$(install_dir)" \
	    -cmd "$(cmt_installarea_command)" \
	    -cmtpath "$($(package)_cmtpath)"
endif

##${CONSTITUENT}clean :: ${CONSTITUENT}uninstall

uninstall :: ${CONSTITUENT}uninstall ;

${CONSTITUENT}uninstall ::
ifdef CMTINSTALLAREA
	$(cleanup_silent) $(cmt_uninstall_action) \
	    -source "`(cd $(bin); pwd)`" \
	    -name "$(${CONSTITUENT}installname)" \
	    -out "$(install_dir)" \
	    -cmtpath "$($(package)_cmtpath)"
endif

#	@echo "------> (${CONSTITUENT}.make) Removing installed files"
#-- end of application
