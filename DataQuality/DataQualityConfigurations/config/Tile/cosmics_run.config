# **********************************************************************
# $Id: cosmics_run.config 655181 2015-03-18 18:18:24Z harkusha $
# **********************************************************************

############################################################
# TileCal
############################################################


reference TileDigiErrorsLB {
  file = /afs/cern.ch/user/a/atlasdqm/dqmdisk/tier0/han_references/Collisions/TileDigiErrorsReference_20120907.root
  name = TileDigiErrorsLB
}

reference TileDigiErrorsEB {
  file = /afs/cern.ch/user/a/atlasdqm/dqmdisk/tier0/han_references/Collisions/TileDigiErrorsReference_20120907.root
  name = TileDigiErrorsEB
}

reference TileDigiErrorsEB_special {
  file = /afs/cern.ch/user/a/atlasdqm/dqmdisk/tier0/han_references/Collisions/TileDigiErrorsReference_20120907.root
  name = TileDigiErrorsEB_special
}


reference TileReference {
  file = /afs/cern.ch/user/a/atlasdqm/dqmdisk/tier0/han_references/Collisions/data12_cos.00214303.express_express.merge.HIST.f487_m1252_harkusha_20141116._0001.1.root
  path = run_214303
  name = same_name
}



#############
# Output
#############

output top_level {
  output TileCal {
    output Cell {
      output AnyPhysTrig {
        output AllPart {
        }
        output EBA {
        }
        output EBC {
        }
        output LBA {
        }
        output LBC {
        }
        output CaloMon {
        }
      }
      output bit0_RNDM {
        output AllPart {
        }
        output EBA {
        }
        output EBC {
        }
        output LBA {
        }
        output LBC {
        }
      }
    }
    output Cluster {
      output AnyPhysTrig {
        output AllPart {
        }
        output EBA {
        }
        output EBC {
        }
        output LBA {
        }
        output LBC {
        }
      }
      output bit0_RNDM {
        output AllPart {
        }
        output EBA {
        }
        output EBC {
        }
        output LBA {
        }
        output LBC {
        }
      }
    }
    output Muid {
      output AnyPhysTrig {
      }
    }
    output L2Muon {
      output AnyPhysTrig {
      }
    }
    output Muonfit {
      output AnyPhysTrig {
      }
    }
    output Tower {
      output AnyPhysTrig {
        output AllPart {
        }
        output EBA {
        }
        output EBC {
        }
        output LBA {
        }
        output LBC {
        }
      }
      output bit0_RNDM {
        output AllPart {
        }
        output EBA {
        }
        output EBC {
        }
        output LBA {
        }
        output LBC {
        }
      }
    }
    output ROD {
      output AnyPhysTrig {
        output Summary {
        }
        output Details {
        }
      }
      output bit2_L1CAL {
        output Summary {
        }
      }
      output bit6_COSM {
        output Summary {
        }
      }
    }
    output Data_Corruption {
      output LBA {
      }
      output LBC {
      }
      output EBA {
      }
      output EBC {
      }
    }

  }
}

#######################
# Histogram Assessments
#######################

dir Tile {
  algorithm = Tile_GatherData
  reference = TileReference
  dir Cell {
    hist tileBadCell {
      output = TileCal/Cell
    }
    hist tileCellStatfromDB_LBA_LG {
      output = TileCal/Cell
      display = SetGridx,SetGridy,SetGridStyle(1)
    }
    hist tileCellStatfromDB_LBA_HG {
      output = TileCal/Cell
      display = SetGridx,SetGridy,SetGridStyle(1)
    }
    hist tileCellStatfromDB_LBC_LG {
      output = TileCal/Cell
      display = SetGridx,SetGridy,SetGridStyle(1)
    }
    hist tileCellStatfromDB_LBC_HG {
      output = TileCal/Cell
      display = SetGridx,SetGridy,SetGridStyle(1)
    }
    hist tileCellStatfromDB_EBA_LG {
      output = TileCal/Cell
      display = SetGridx,SetGridy,SetGridStyle(1)
    }
    hist tileCellStatfromDB_EBA_HG {
      output = TileCal/Cell
      display = SetGridx,SetGridy,SetGridStyle(1)
    }
    hist tileCellStatfromDB_EBC_LG {
      output = TileCal/Cell
      display = SetGridx,SetGridy,SetGridStyle(1)
    }
    hist tileCellStatfromDB_EBC_HG {
      output = TileCal/Cell
      display = SetGridx,SetGridy,SetGridStyle(1)
    }
    dir AnyPhysTrig {
      output = TileCal/Cell/AnyPhysTrig
      hist tileCellSynchAnyPhysTrig {
        algorithm = TileSynch_CheckMeanX
      }
      hist all_in_dir {
      }
      dir AllPart {
        output = TileCal/Cell/AnyPhysTrig/AllPart
        hist tileCellEneDiffSampAAllPartAnyPhysTrig {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneDiffSampBAllPartAnyPhysTrig {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneDiffSampDAllPartAnyPhysTrig {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneRatSampAAllPartAnyPhysTrig {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellEneRatSampBAllPartAnyPhysTrig {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellEneRatSampDAllPartAnyPhysTrig {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellTimeDiffSampAAllPartAnyPhysTrig {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellTimeDiffSampBAllPartAnyPhysTrig {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellTimeDiffSampDAllPartAnyPhysTrig {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist all_in_dir {
        }
      }
      dir EBA {
        output = TileCal/Cell/AnyPhysTrig/EBA
        hist tileCellEneDiffSampAEBAAnyPhysTrig {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneDiffSampBEBAAnyPhysTrig {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneDiffSampDEBAAnyPhysTrig {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneRatSampAEBAAnyPhysTrig {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellEneRatSampBEBAAnyPhysTrig {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellEneRatSampDEBAAnyPhysTrig {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellTimeEBAAnyPhysTrig {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffSampAEBAAnyPhysTrig {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellTimeDiffSampBEBAAnyPhysTrig {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellTimeDiffSampDEBAAnyPhysTrig {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellDetailOccMap_EBAAnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapOvThr_EBAAnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_EBAAnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        #        hist tileCellDigTimEBAAnyPhysTrig {
        #        }
        hist all_in_dir {
        }
      }
      dir EBC {
        output = TileCal/Cell/AnyPhysTrig/EBC
        hist tileCellEneDiffSampAEBCAnyPhysTrig {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneDiffSampBEBCAnyPhysTrig {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneDiffSampDEBCAnyPhysTrig {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneRatSampAEBCAnyPhysTrig {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellEneRatSampBEBCAnyPhysTrig {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellEneRatSampDEBCAnyPhysTrig {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellTimeEBCAnyPhysTrig {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffSampAEBCAnyPhysTrig {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellTimeDiffSampBEBCAnyPhysTrig {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellTimeDiffSampDEBCAnyPhysTrig {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellDetailOccMap_EBCAnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapOvThr_EBCAnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_EBCAnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        #        hist tileCellDigTimEBCAnyPhysTrig {
        #        }
        hist all_in_dir {
        }
      }
      dir LBA {
        output = TileCal/Cell/AnyPhysTrig/LBA
        hist tileCellEneDiffSampALBAAnyPhysTrig {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneDiffSampBLBAAnyPhysTrig {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneDiffSampDLBAAnyPhysTrig {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneRatSampALBAAnyPhysTrig {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellEneRatSampBLBAAnyPhysTrig {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellEneRatSampDLBAAnyPhysTrig {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellTimeLBAAnyPhysTrig {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffSampALBAAnyPhysTrig {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellTimeDiffSampBLBAAnyPhysTrig {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellTimeDiffSampDLBAAnyPhysTrig {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellDetailOccMap_LBAAnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapOvThr_LBAAnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_LBAAnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        #        hist tileCellDigTimLBAAnyPhysTrig {
        #        }
        hist all_in_dir {
        }
      }
      dir LBC {
        output = TileCal/Cell/AnyPhysTrig/LBC
        hist tileCellEneDiffSampALBCAnyPhysTrig {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneDiffSampBLBCAnyPhysTrig {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneDiffSampDLBCAnyPhysTrig {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneRatSampALBCAnyPhysTrig {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellEneRatSampBLBCAnyPhysTrig {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellEneRatSampDLBCAnyPhysTrig {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellTimeLBCAnyPhysTrig {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffSampALBCAnyPhysTrig {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellTimeDiffSampBLBCAnyPhysTrig {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellTimeDiffSampDLBCAnyPhysTrig {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellDetailOccMap_LBCAnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapOvThr_LBCAnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_LBCAnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        #        hist tileCellDigTimLBCAnyPhysTrig {
        #        }
        hist all_in_dir {
        }
      }
    }
    dir bit0_RNDM {
      output = TileCal/Cell/bit0_RNDM
      hist tileCellSynchbit0_RNDM {
        algorithm = TileSynch_CheckMeanX
      }
      hist all_in_dir {
      }
      dir AllPart {
        output = TileCal/Cell/bit0_RNDM/AllPart
        hist tileCellEneDiffSampAAllPartbit0_RNDM {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneDiffSampBAllPartbit0_RNDM {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneDiffSampDAllPartbit0_RNDM {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneRatSampAAllPartbit0_RNDM {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellEneRatSampBAllPartbit0_RNDM {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellEneRatSampDAllPartbit0_RNDM {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellTimeDiffSampAAllPartbit0_RNDM {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellTimeDiffSampBAllPartbit0_RNDM {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellTimeDiffSampDAllPartbit0_RNDM {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist all_in_dir {
        }
      }
      dir EBA {
        output = TileCal/Cell/bit0_RNDM/EBA
        hist tileCellEneDiffSampAAllPartEBAbit0_RNDM {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneDiffSampBEBAbit0_RNDM {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneDiffSampDEBAbit0_RNDM {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneRatSampAEBAbit0_RNDM {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellEneRatSampBEBAbit0_RNDM {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellEneRatSampDEBAbit0_RNDM {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellTimeEBAbit0_RNDM {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffSampAEBAbit0_RNDM {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellTimeDiffSampBEBAbit0_RNDM {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellTimeDiffSampDEBAbit0_RNDM {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellDetailOccMap_EBAbit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapOvThr_EBAbit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_EBAbit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        #        hist tileCellDigTimEBAbit0_RNDM {
        #        }
        hist all_in_dir {
        }
      }
      dir EBC {
        output = TileCal/Cell/bit0_RNDM/EBC
        hist tileCellEneDiffSampAEBCbit0_RNDM {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneDiffSampBEBCbit0_RNDM {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneDiffSampDEBCbit0_RNDM {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneRatSampAEBCbit0_RNDM {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellEneRatSampBEBCbit0_RNDM {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellEneRatSampDEBCbit0_RNDM {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellTimeEBCbit0_RNDM {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffSampAEBCbit0_RNDM {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellTimeDiffSampBEBCbit0_RNDM {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellTimeDiffSampDEBCbit0_RNDM {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellDetailOccMap_EBCbit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapOvThr_EBCbit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_EBCbit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        #        hist tileCellDigTimEBCbit0_RNDM {
        #        }
        hist all_in_dir {
        }
      }
      dir LBA {
        output = TileCal/Cell/bit0_RNDM/LBA
        hist tileCellEneDiffSampALBAbit0_RNDM {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneDiffSampBLBAbit0_RNDM {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneDiffSampDLBAbit0_RNDM {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneRatSampALBAbit0_RNDM {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellEneRatSampBLBAbit0_RNDM {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellEneRatSampDLBAbit0_RNDM {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellTimeLBAbit0_RNDM {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffSampALBAbit0_RNDM {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellTimeDiffSampBLBAbit0_RNDM {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellTimeDiffSampDLBAbit0_RNDM {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellDetailOccMap_LBAbit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapOvThr_LBAbit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_LBAbit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        #        hist tileCellDigTimLBAbit0_RNDM {
        #        }
        hist all_in_dir {
        }
      }
      dir LBC {
        output = TileCal/Cell/bit0_RNDM/LBC
        hist tileCellEneDiffSampALBCbit0_RNDM {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneDiffSampBLBCbit0_RNDM {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneDiffSampDLBCbit0_RNDM {
          algorithm = TileCheckRMSCellEneDiff
        }
        hist tileCellEneRatSampALBCbit0_RNDM {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellEneRatSampBLBCbit0_RNDM {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellEneRatSampDLBCbit0_RNDM {
          algorithm = TileCheckMeanCellEneRat
        }
        hist tileCellTimeLBCbit0_RNDM {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffSampALBCbit0_RNDM {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellTimeDiffSampBLBCbit0_RNDM {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellTimeDiffSampDLBCbit0_RNDM {
          algorithm = TileCheckMeanCellTimeDiff
        }
        hist tileCellDetailOccMap_LBCbit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapOvThr_LBCbit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_LBCbit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        #        hist tileCellDigTimLBCbit0_RNDM {
        #        }
        hist all_in_dir {
        }
      }
    }



  }
  dir Cluster {
    dir AnyPhysTrig {
      output = TileCal/Cluster/AnyPhysTrig
      hist tileClusterEtaPhiDiffAnyPhysTrig {
        output = TileCal/Cluster/AnyPhysTrig
        algorithm = TileCluster_CheckMeanX
      }
      hist all_in_dir {
      }
      dir AllPart {
        output = TileCal/Cluster/AnyPhysTrig/AllPart
        hist all_in_dir {
        }
      }
      dir EBA {
        output = TileCal/Cluster/AnyPhysTrig/EBA
        hist all_in_dir {
        }
      }
      dir EBC {
        output = TileCal/Cluster/AnyPhysTrig/EBC
        hist all_in_dir {
        }
      }
      dir LBA {
        output = TileCal/Cluster/AnyPhysTrig/LBA
        hist all_in_dir {
        }
      }
      dir LBC {
        output = TileCal/Cluster/AnyPhysTrig/LBC
        hist all_in_dir {
        }
      }
    }
    dir bit0_RNDM {
      output = TileCal/Cluster/bit0_RNDM
      hist tileClusterEtaPhiDiffbit0_RNDM {
        output = TileCal/Cluster/bit0_RNDM
        algorithm = TileCluster_CheckMeanX
      }
      hist all_in_dir {
      }
      dir AllPart {
        output = TileCal/Cluster/bit0_RNDM/AllPart
        hist all_in_dir {
        }
      }
      dir EBA {
        output = TileCal/Cluster/bit0_RNDM/EBA
        hist all_in_dir {
        }
      }
      dir EBC {
        output = TileCal/Cluster/bit0_RNDM/EBC
        hist all_in_dir {
        }
      }
      dir LBA {
        output = TileCal/Cluster/bit0_RNDM/LBA
        hist all_in_dir {
        }
      }
      dir LBC {
        output = TileCal/Cluster/bit0_RNDM/LBC
        hist all_in_dir {
        }
      }
    }

  }
  dir Muid {
    dir AnyPhysTrig {
      output = TileCal/Muid/AnyPhysTrig
      hist all_in_dir {
      }
    }
  }
  dir L2Muon {
    dir AnyPhysTrig {
      output = TileCal/L2Muon/AnyPhysTrig
      hist tileL2DeltaEnergyAnyPhysTrig {
        algorithm = TileCheckMeanL2DeltaEnergy
        display = LogY
      }
      hist all_in_dir {
      }
    }
  }
  dir Muonfit {
    output = TileCal/Muonfit
    hist tileMuonTimePartLVL1EBA {
      display = TCanvas(1100,980)
    }
    hist tileMuonTimePartLVL1LBA {
      display = TCanvas(1100,980)
    }
    hist tileMuonTimePartLVL1LBC {
      display = TCanvas(1100,980)
    }
    hist tileMuonTimePartLVL1EBC {
      display = TCanvas(1100,980)
    }
    dir AnyPhysTrig {
      output = TileCal/Muonfit/AnyPhysTrig
      hist tileMuonEnergyDensityAnyPhysTrig {
        algorithm = TilelandauMuonEnergyDensity
      }
      hist tileMuonFitDirAnyPhysTrig {
        algorithm = TileCheckMeanMuonFitDir
      }
      hist tileMuonFitDir2AnyPhysTrig {
        algorithm = TileCheckMeanMuonFitDir2
      }
      hist tileMuonTimeAnyPhysTrig {
        algorithm = TileCheckMeanMuonTime
      }
      hist all_in_dir {
      }
    }
  }
  dir Tower {
    dir AnyPhysTrig {
      output = TileCal/Tower/AnyPhysTrig
      hist all_in_dir {
      }
      dir AllPart {
        output = TileCal/Tower/AnyPhysTrig/AllPart
        hist all_in_dir {
        }
      }
      dir EBA {
        output = TileCal/Tower/AnyPhysTrig/EBA
        hist all_in_dir {
        }
      }
      dir EBC {
        output = TileCal/Tower/AnyPhysTrig/EBC
        hist all_in_dir {
        }
      }
      dir LBA {
        output = TileCal/Tower/AnyPhysTrig/LBA
        hist all_in_dir {
        }
      }
      dir LBC {
        output = TileCal/Tower/AnyPhysTrig/LBC
        hist all_in_dir {
        }
      }
    }
    dir bit0_RNDM {
      output = TileCal/Tower/bit0_RNDM
      hist all_in_dir {
      }
      dir AllPart {
        output = TileCal/Tower/bit0_RNDM/AllPart
        hist all_in_dir {
        }
      }
      dir EBA {
        output = TileCal/Tower/bit0_RNDM/EBA
        hist all_in_dir {
        }
      }
      dir EBC {
        output = TileCal/Tower/bit0_RNDM/EBC
        hist all_in_dir {
        }
      }
      dir LBA {
        output = TileCal/Tower/bit0_RNDM/LBA
        hist all_in_dir {
        }
      }
      dir LBC {
        output = TileCal/Tower/bit0_RNDM/LBC
        hist all_in_dir {
        }
      }
    }


  }
  dir ROD {
    dir AnyPhysTrig {
      dir Details {
        output = TileCal/ROD/AnyPhysTrig/Details
        hist all_in_dir {
        }
      }
      dir Summary {
        output = TileCal/ROD/AnyPhysTrig/Summary
        hist TileAvgDspRefEn_LBA_AnyPhysTrig {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefEn_LBC_AnyPhysTrig {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefEn_EBA_AnyPhysTrig {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefEn_EBC_AnyPhysTrig {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefTim_LBA_AnyPhysTrig {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileAvgDspRefTim_LBC_AnyPhysTrig {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileAvgDspRefTim_EBA_AnyPhysTrig {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileAvgDspRefTim_EBC_AnyPhysTrig {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileDspRefEn_Summary_AnyPhysTrig {
          #  algorithm = TileROD_compare_DspRefEnMeanY
        }
        hist TileDspRefTim_Summary_AnyPhysTrig {
          #  algorithm = TileROD_compare_DspRefTimMeanY
        }
        hist all_in_dir {
        }
      }
    }
    dir bit2_L1CAL {
      dir Summary {
        output = TileCal/ROD/bit2_L1CAL/Summary
        hist TileAvgDspRefEn_LBA_bit2_L1CAL {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefEn_LBC_bit2_L1CAL {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefEn_EBA_bit2_L1CAL {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefEn_EBC_bit2_L1CAL {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefTim_LBA_bit2_L1CAL {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileAvgDspRefTim_LBC_bit2_L1CAL {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileAvgDspRefTim_EBA_bit2_L1CAL {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileAvgDspRefTim_EBC_bit2_L1CAL {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileDspRefEn_Summary_bit2_L1CAL {
          #  algorithm = TileROD_compare_DspRefEnMeanY
        }
        hist TileDspRefTim_Summary_bit2_L1CAL {
          #  algorithm = TileROD_compare_DspRefTimMeanY
        }
        hist all_in_dir {
        }
      }
    }
    dir bit6_COSM {
      dir Summary {
        output = TileCal/ROD/bit6_COSM/Summary
        hist TileAvgDspRefEn_LBA_bit6_COSM {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefEn_LBC_bit6_COSM {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefEn_EBA_bit6_COSM {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefEn_EBC_bit6_COSM {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefTim_LBA_bit6_COSM {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileAvgDspRefTim_LBC_bit6_COSM {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileAvgDspRefTim_EBA_bit6_COSM {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileAvgDspRefTim_EBC_bit6_COSM {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileDspRefEn_Summary_bit6_COSM {
          #  algorithm = TileROD_compare_DspRefEnMeanY
        }
        hist TileDspRefTim_Summary_bit6_COSM {
          #  algorithm = TileROD_compare_DspRefTimMeanY
        }
        hist all_in_dir {
        }
      }
    }
  }
  dir DMUErrors {
    algorithm = Tile_GatherData
    hist LBAsummaryOfErrors {
      algorithm = Tile_GatherData
      output = TileCal/Data_Corruption
      display = LogY
    }
    hist LBCsummaryOfErrors {
      algorithm = Tile_GatherData
      output = TileCal/Data_Corruption
      display = LogY
    }
    hist EBAsummaryOfErrors {
      algorithm = Tile_GatherData
      output = TileCal/Data_Corruption
      display = LogY
    }
    hist EBCsummaryOfErrors {
      algorithm = Tile_GatherData
      output = TileCal/Data_Corruption
      display = LogY
    }
    hist TileGlobalCRC_errors_bottom {
      algorithm = Tile_GatherData
      output = TileCal/Data_Corruption
    }
    hist TileGlobalCRC_errors_top {
      algorithm = Tile_GatherData
      output = TileCal/Data_Corruption
    }
  
    hist TileDigiErrorsLBA\d{2} {
      regex = 1
      algorithm = DMU_alg/LB
      output = TileCal/Data_Corruption/LBA
      display = Draw=TEXTCOLZ
    }

    hist TileDigiErrorsLBC\d{2} {
      regex = 1
      algorithm = DMU_alg/LB
      output = TileCal/Data_Corruption/LBC
      display = Draw=TEXTCOLZ
    }

    hist (?!.*15$)TileDigiErrorsEBA\d{2} {
      regex = 1
      algorithm = DMU_alg/EB
      output = TileCal/Data_Corruption/EBA
      display = Draw=TEXTCOLZ
    }

    hist TileDigiErrorsEBA15 {
      algorithm = DMU_alg/EB_special
      output = TileCal/Data_Corruption/EBA
      display = Draw=TEXTCOLZ
    }

    hist (?!.*18$)TileDigiErrorsEBC\d{2} {
      regex = 1
      algorithm = DMU_alg/EB
      output = TileCal/Data_Corruption/EBC
      display = Draw=TEXTCOLZ
    }

    hist TileDigiErrorsEBC18 {
      algorithm = DMU_alg/EB_special
      output = TileCal/Data_Corruption/EBC
      display = Draw=TEXTCOLZ
    }



#       hist all_in_dir {
#          reference = TileReference
#       }

  } # end DMUErrors
} # end Tile

# TileCal cells from CaloMonitoring package
dir CaloMonitoring {
  algorithm = TileCaloMon_GatherData
  reference = TileReference

  dir TileCellMon_NoTrigSel {

    dir General {

      hist CellsXN {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }

      hist CellsXE {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }

      hist CellsNoiseTile {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox,gaus(-6.,6.),LogY
      }

      hist CellsXEta {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }

      hist CellsXPhi {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }

      hist CellsXEtaVSPhi {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }

      hist CellsXModuleS1 {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }

      hist CellsXModuleS2 {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }

      hist CellsXModuleS3 {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }

      hist CellsXModuleS4 {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }

      hist CellsXTower {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }

      hist CellsNoiseXEta {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }

      hist CellsNoiseXPhi {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }

      hist CellsRMSXEta {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }

      hist CellsRMSXPhi {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }

      hist CellsNoiseXEtaVSPhi {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }

      hist CellsNoiseXEtaVSPhiAcells {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }

      hist CellsNoiseXEtaVSPhiBCcells {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }

      hist CellsNoiseXEtaVSPhiDcells {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }

      hist CellsRMSXEta_divNoiseDB {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }

      hist CellsRMSXPhi_divNoiseDB {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }
      hist CellsXNoiseXHash {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = LogY
      }

    } # end General
  } # end TileCellMon_NoTrigSel
} # end CaloMonitoring package


#############
# Algorithms
#############

algorithm Tile_GatherData {
  libname = libdqm_algorithms.so
  name = GatherData
  reference = TileReference
}

algorithm TileCaloMon_GatherData {
  libname = libdqm_algorithms.so
  name = GatherData
  reference = TileReference
}

algorithm TileSynch_CheckMeanX {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = TileSynch_thMeanX
}

algorithm TileCluster_CheckMeanX {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = TileCluster_thMeanX
}

algorithm TileCheckRMSCellEneDiff {
  libname = libdqm_algorithms.so
  name = CheckHisto_RMS
  thresholds = TileCheckRMSCellEneDiffThr
}

algorithm TileCheckMeanCellEneRat {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = TileCheckMeanCellEneRatThr
}

algorithm TileCheckMeanCellTime {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = TileCheckMeanCellTimeThr
}

algorithm TileCheckMeanCellTimeDiff {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = TileCheckMeanCellTimeDiffThr
}

algorithm TilelandauMuonEnergyDensity {
  libname = libdqm_algorithms.so
  name = Simple_landau_Fit
  thresholds = TilelandauMuonEnergyDensityThr
}

algorithm TileCheckMeanMuonEnergyRebin {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = TileCheckMeanMuonEnergyRebinThr
}

algorithm TileCheckMeanMuonFitDir {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = TileCheckMeanMuonFitDirThr
}

algorithm TileCheckMeanMuonFitDir2 {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = TileCheckMeanMuonFitDir2Thr
}

algorithm TileCheckMeanMuonTime {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = TileCheckMeanMuonTimeThr
}

algorithm TileCheckMeanL2DeltaEnergy {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = TileCheckMeanL2DeltaEnergyThr
}

algorithm TileROD_check_DspRefEnMeanY {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = TileROD_DspRefEnMeanY
}

algorithm TileROD_compare_DspRefEnMeanY {
  libname = libdqm_algorithms.so
  name = BinContentComp
  NSigma = 1
  reference = TileReference
  thresholds = TileROD_compare_DspRefEnMeanY_thresholds
}

algorithm TileROD_compare_DspRefTimMeanY {
  libname = libdqm_algorithms.so
  name = BinContentComp
  NSigma = 1
  reference = TileReference
  thresholds = TileROD_compare_DspRefTimMeanY_thresholds
}

algorithm TileROD_check_DspRefTimMeanY {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = TileROD_DspRefTimMeanY
}



algorithm DMU_alg {
  libname = libdqm_algorithms.so
  name = MaskedBinRow
  OkBin = 1
  MaskedBin = 13
  TestRows = 0
  thresholds = DMU_thr
  DoRate = 1
  algorithm LB {
    reference = TileDigiErrorsLB
  }
  algorithm EB {
    reference = TileDigiErrorsEB
  }
  algorithm EB_special {
    reference = TileDigiErrorsEB_special
  }
}



#############
# Thresholds
#############

thresholds TileSynch_thMeanX {
  limits XMean {
    warning = -40.
    error = -80.
  }
}

thresholds TileCluster_thMeanX {
  limits AbsXMean {
    warning = 0.1
    error = 0.2
  }
}

thresholds TileROD_DspRefEnMeanY {
  limits AbsYMean {
    warning = 0.005
    error = 0.01
  }
}

thresholds TileROD_DspRefTimMeanY {
  limits AbsYMean {
    warning = 1.00
    error = 5.00
  }
}

thresholds TileCheckRMSCellEneDiffThr {
  limits XRMS {
    warning = 400
    error = 600
  }
}

thresholds TileCheckMeanCellEneRatThr {
  limits AbsXMean {
    warning = 0.15
    error = 0.3
  }
}

thresholds TileCheckMeanCellTimeThr {
  limits AbsXMean {
    warning = 25
    error = 50
  }
}

thresholds TileCheckMeanCellTimeDiffThr {
  limits AbsXMean {
    warning = 1.5
    error = 3
  }
}

thresholds TilelandauMuonEnergyDensityThr {
  limits MPV {
    warning = 0.5
    error = 0.2
  }
  limits MPV {
    warning = 3
    error = 5
  }
}

thresholds TileCheckMeanMuonEnergyRebinThr {
  limits XMean {
    warning = 8000
    error = 10000
  }
}

thresholds TileCheckMeanMuonFitDirThr {
  limits XMean {
    warning = 0.8
    error = 0.6
  }
}

thresholds TileCheckMeanMuonFitDir2Thr {
  limits XMean {
    warning = -0.6
    error = -0.2
  }
}

thresholds TileCheckMeanMuonTimeThr {
  limits AbsXMean {
    warning = 25
    error = 50
  }
}

thresholds TileCheckMeanL2DeltaEnergyThr {
  limits AbsXMean {
    warning = 0.015
    error = 0.15
  }
}

thresholds TileROD_compare_DspRefEnMeanY_thresholds {
  limits NBins {
    warning = 3
    error = 10
  }
}

thresholds TileROD_compare_DspRefTimMeanY_thresholds {
  limits NBins {
    warning = 3
    error = 10
  }
}

thresholds DMU_thr {
  limits BinThreshold {
    warning = 0.001
    error = 0.01
  }
}
