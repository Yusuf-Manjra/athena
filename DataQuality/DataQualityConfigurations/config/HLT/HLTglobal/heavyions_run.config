# **********************************************************************
# $Id: heavyions_run.config 516887 2012-09-09 22:34:18Z vogel $
# **********************************************************************

#######################
# HLT
#######################

#######################
# Output
#######################

output top_level {

    output HLT {
       output TRHLT {
          output AllChains {
          }
          output Electrons {
          }
          output Gamma {
          }
          output Muons {
          }
          output MinBias {
          }
          output MissingET {
          }
          output Taus {
          }
          output Jets {
          }
       }
    }
}

#######################
# Histogram Assessments
#######################

dir HLT {
   algorithm = HLT_Histogram_Not_Empty&GatherData

   dir ResultMon {
       output = HLT/TRHLT
       
       hist ConfigConsistency_EF {
         algorithm = HLT_Histogram_Empty
	 reference = CentrallyManagedReferences
       }

       hist ConfigConsistency_L2 {
         algorithm = HLT_Histogram_Empty
	 reference = CentrallyManagedReferences
       }

       hist all_in_dir { 
         algorithm = HLT_Histogram_Not_Empty&GatherData
         reference = CentrallyManagedReferences
       }
		
       dir AllChains {
 	output = HLT/TRHLT/AllChains
        hist L2.* {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist EF.*P[ST] {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist [^L].*R[oA][IW].* {
	  regex = 1
	  algorithm = HLT_Histogram_Not_Empty&GatherData
	}
       }

       dir Electrons {
 	output = HLT/TRHLT/Electrons
        hist L2.* {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist EF.*P[ST] {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist [^L].*R[oA][IW].* {
	  regex = 1
	  algorithm = HLT_Histogram_Not_Empty&GatherData
	}
       }

       dir Gamma {
 	output = HLT/TRHLT/Gamma
               hist L2.* {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist EF.*P[ST] {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist [^L].*R[oA][IW].* {
	  regex = 1
	  algorithm = HLT_Histogram_Not_Empty&GatherData
	}
       }

       dir Muons {
 	output = HLT/TRHLT/Muons
        hist L2.* {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist EF.*P[ST] {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist [^L].*R[oA][IW].* {
	  regex = 1
	  algorithm = HLT_Histogram_Not_Empty&GatherData
	}
       }

       dir MinBias {
 	output = HLT/TRHLT/MinBias
        hist L2.* {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist EF.*P[ST] {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist [^L].*R[A][W].* {		# only check EF..RAW, not RoIs for now
	  regex = 1
	  algorithm = HLT_Histogram_Not_Empty&GatherData
	}
	hist .*RoIs {			# have RoIs just pass for now since they are empty
	  regex = 1
	  algorithm = HLT_PassInput
	}
       }

       dir MissingET {
 	output = HLT/TRHLT/MissingET
        hist L2.* {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist EF.*P[ST] {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist [^L].*R[A][W].* {
	  regex = 1
	  algorithm = HLT_Histogram_Not_Empty&GatherData
	}
       }

       dir Taus {
 	output = HLT/TRHLT/Taus
        hist L2.* {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist EF.*P[ST] {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist [^L].*R[oA][IW].* {
	  regex = 1
	  algorithm = HLT_Histogram_Not_Empty&GatherData
	}
       }

       dir Jets {
 	output = HLT/TRHLT/Jets
        hist L2.* {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist EF.*P[ST] {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist [^L].*R[oA][IW].* {
	  regex = 1
	  algorithm = HLT_Histogram_Not_Empty&GatherData
	}
       }
   }
}


##############







# Algorithms
##############

compositeAlgorithm HLT_Histogram_Not_Empty&GatherData {
  subalgs = GatherData,Histogram_Not_Empty
  libnames = libdqm_algorithms.so
}

algorithm HLT_Histogram_Not_Empty&GatherData {
  name = HLT_Histogram_Not_Empty&GatherData
}

algorithm HLT_PassInput {
  libname = libdqm_algorithms.so
  name = PassInput
}

algorithm HLT_Histogram_Empty {
  libname = libdqm_algorithms.so
  name = Histogram_Empty
}

###############
# Thresholds
###############
