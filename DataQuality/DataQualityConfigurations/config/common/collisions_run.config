# **********************************************************************
# $Id: collisions_run.config 606780 2014-07-16 13:18:10Z ponyisi $
# **********************************************************************

#######################
# References
#######################

reference CentrallyManagedReferences {
  file = root://eosatlas//eos/atlas/atlasdatadisk/rucio/data12_8TeV/04/13/data12_8TeV.00214160.express_express.merge.HIST.f486_m1252._0001.1
  path = run_214160
  name = same_name
}

reference CentrallyManagedReferences_JetTauEtmiss {
  file = root://eosatlas//eos/atlas/atlasdatadisk/rucio/data12_8TeV/ef/82/data12_8TeV.00214160.physics_JetTauEtmiss.merge.HIST.f486_m1252._0001.1
  path = run_214160
  name = same_name
}

reference CentrallyManagedReferences_Egamma {
  file = root://eosatlas//eos/atlas/atlasdatadisk/rucio/data12_8TeV/2b/0f/data12_8TeV.00214160.physics_Egamma.merge.HIST.f486_m1252._0001.1
  path = run_214160
  name = same_name
}

reference CentrallyManagedReferences_Muons {
  file = root://eosatlas//eos/atlas/atlasdatadisk/rucio/data12_8TeV/4a/a1/data12_8TeV.00214160.physics_Muons.merge.HIST.f486_m1252._0001.1
  path = run_214160
  name = same_name
}

reference CentrallyManagedReferences_JetCalibDelayed {
  # This should be replaced with a good run from JetCalibDelayed as soon as we have identified one. The JetTauEtmiss CMR should be good enough to get started, though.
  file = root://eosatlas//eos/atlas/atlasdatadisk/rucio/data12_8TeV/ef/82/data12_8TeV.00214160.physics_JetTauEtmiss.merge.HIST.f486_m1252._0001.1
  path = run_214160
  name = same_name
}

####################
# Common Algorithms
####################

algorithm WorstCaseSummary {
  libname = libdqm_summaries.so
  name = WorstCaseSummary
}

algorithm Histogram_Empty {
  libname = libdqm_algorithms.so
  name = Histogram_Empty
}

algorithm Histogram_Effective_Empty {
  libname = libdqm_algorithms.so
  name = Histogram_Effective_Empty
}

algorithm Histogram_Not_Empty {
  libname = libdqm_algorithms.so
  name = Histogram_Not_Empty
}

algorithm No_UnderFlows {
  libname = libdqm_algorithms.so
  name = No_UnderFlows
}

algorithm No_OverFlows {
  libname = libdqm_algorithms.so
  name = No_OverFlows
}

algorithm All_Bins_Filled {
  libname = libdqm_algorithms.so
  name = All_Bins_Filled
}

algorithm GatherData {
  libname = libdqm_algorithms.so
  name = GatherData
}

compositeAlgorithm CheckRMS&Histogram_Not_Empty {
  subalgs = CheckHisto_RMS,Histogram_Not_Empty
  libname = libdqm_algorithms.so
}

compositeAlgorithm CheckMean&Histogram_Not_Empty {
  subalgs = CheckHisto_Mean,Histogram_Not_Empty
  libname = libdqm_algorithms.so
}

compositeAlgorithm BinsNotThreshold&Histogram_Not_Empty {
  subalgs = Bins_NotEqual_Threshold,Histogram_Not_Empty
  libname = libdqm_algorithms.so
}

compositeAlgorithm Histogram_Not_Empty&GatherData {
  subalgs = GatherData,Histogram_Not_Empty
  libnames = libdqm_algorithms.so
}

compositeAlgorithm CheckHisto_Mean&GatherData {
  subalgs = GatherData,CheckHisto_Mean
  libnames = libdqm_algorithms.so
}

compositeAlgorithm GatherData&Chi2NDF {
  libnames = libdqm_algorithms.so
  subalgs = GatherData,Chi2Test_Chi2_per_NDF
}

#############
# Output
#############

output top_level {
  algorithm = WorstCaseSummary
}
