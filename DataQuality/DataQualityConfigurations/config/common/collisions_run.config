# **********************************************************************
# $Id: collisions_run.config 778145 2016-10-12 22:16:13Z jfrost $
# **********************************************************************

#######################
# References
#######################

reference CentrallyManagedReferences {
  #file = /afs/cern.ch/user/a/atlasdqm/maxidisk/Run2_references/data16_13TeV.00302347.express_express.merge.HIST.f711_h144._0001.1
  file = /afs/cern.ch/user/a/atlasdqm/maxidisk/Run2_references/data16_13TeV.00304008.express_express.merge.HIST.f716_h151._0001.1
  path = run_304008
  name = same_name
}

reference CentrallyManagedReferences_Main {

  #file = /afs/cern.ch/user/a/atlasdqm/maxidisk/Run2_references/data16_13TeV.00302347.physics_Main.merge.HIST.f711_h144._0001.1
  file = /afs/cern.ch/user/a/atlasdqm/maxidisk/Run2_references/data16_13TeV.00304008.physics_Main.merge.HIST.f716_h151._0001.1
  path = run_304008
  name = same_name
}

reference CentrallyManagedReferences_Trigger {
  file = /afs/cern.ch/user/a/atlasdqm/maxidisk/Run2_references/data16_13TeV.00309759.express_express.merge.HIST.f750_h174._0001.1
  path = run_309759
  name = same_name
}

reference CentrallyManagedReferences_TriggerMain {
  file = /afs/cern.ch/user/a/atlasdqm/maxidisk/Run2_references/data16_13TeV.00309759.physics_Main.merge.HIST.f750_h174._0001.1
  path = run_309759
  name = same_name
}


####################
# Common Algorithms
####################

algorithm WorstCaseSummary {
  libname = libdqm_summaries.so
  name = WorstCaseSummary
}

algorithm Histogram_Empty {
  libname = libdqm_algorithms.so
  name = Histogram_Empty
}

algorithm Histogram_Effective_Empty {
  libname = libdqm_algorithms.so
  name = Histogram_Effective_Empty
}

algorithm Histogram_Not_Empty {
  libname = libdqm_algorithms.so
  name = Histogram_Not_Empty
}

algorithm No_UnderFlows {
  libname = libdqm_algorithms.so
  name = No_UnderFlows
}

algorithm No_OverFlows {
  libname = libdqm_algorithms.so
  name = No_OverFlows
}

algorithm All_Bins_Filled {
  libname = libdqm_algorithms.so
  name = All_Bins_Filled
}

algorithm GatherData {
  libname = libdqm_algorithms.so
  name = GatherData
}

compositeAlgorithm CheckRMS&Histogram_Not_Empty {
  subalgs = CheckHisto_RMS,Histogram_Not_Empty
  libname = libdqm_algorithms.so
}

compositeAlgorithm CheckMean&Histogram_Not_Empty {
  subalgs = CheckHisto_Mean,Histogram_Not_Empty
  libname = libdqm_algorithms.so
}

compositeAlgorithm BinsNotThreshold&Histogram_Not_Empty {
  subalgs = Bins_NotEqual_Threshold,Histogram_Not_Empty
  libname = libdqm_algorithms.so
}

compositeAlgorithm Histogram_Not_Empty&GatherData {
  subalgs = GatherData,Histogram_Not_Empty
  libnames = libdqm_algorithms.so
}

compositeAlgorithm CheckHisto_Mean&GatherData {
  subalgs = GatherData,CheckHisto_Mean
  libnames = libdqm_algorithms.so
}

compositeAlgorithm GatherData&Chi2NDF {
  libnames = libdqm_algorithms.so
  subalgs = GatherData,Chi2Test_Chi2_per_NDF
}

#############
# Output
#############

output top_level {
  algorithm = WorstCaseSummary
}
