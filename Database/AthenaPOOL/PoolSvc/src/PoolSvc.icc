/*
  Copyright (C) 2002-2017 CERN for the benefit of the ATLAS collaboration
*/

/** @file PoolSvc.icc
 *  @brief This file contains the implementation for the templated PoolSvc functions.
 *  @author Peter van Gemmeren <gemmeren@anl.gov>
 **/

#include "PersistencySvc/IContainer.h"
#include "PersistencySvc/IDatabase.h"
#include "PersistencySvc/ISession.h"
#include "PersistencySvc/ITechnologySpecificAttributes.h"

//__________________________________________________________________________
template<class T>
T PoolSvc::getDomAttribute(const std::string& optName,
	pool::ISession* const sesH,
	long tech) const {
   T data = sesH->technologySpecificAttributes(tech).template attribute<T>(optName);
   ATH_MSG_INFO("Domain attribute [" << optName << "]" << ": " << data);
   return(data);
}
//__________________________________________________________________________
template<class T>
T PoolSvc::getDbAttribute(const std::string& optName, pool::IDatabase* const dbH) const {
   T data = dbH->technologySpecificAttributes().template attribute<T>(optName);
   ATH_MSG_INFO("Database (" << dbH->pfn() << ") attribute [" << optName << "]" << ": " << data);
   return(data);
}
//__________________________________________________________________________
template<class T>
T PoolSvc::getContAttribute(const std::string& optName,
	const std::string& contName,
	pool::IContainer* const contH,
	const std::string& brName) const {
   T data = contH->technologySpecificAttributes().template attribute<T>(optName, brName);
   ATH_MSG_INFO("Container attribute [" << contName << "." << optName << "]: " << data);
   return(data);
}
