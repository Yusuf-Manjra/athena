#!/bin/bash 
# 
# $Id: athenarun_test.sh.in 740489 2016-04-15 09:17:00Z krasznaa $ 
# 
# This script template is used to create the scripts for the package that 
# executes its integration tests. 
# 
 
# Transmit errors: 
set -e 
 
# Execute the job: 
@toExecute@ |
	# For now drop some configurable warnings, they are not mine...
	grep -v "^Py:PropertyProxy " |\
	grep -v "^removing: " |\
	grep -v "using release" |\
	grep -v "Warning in <TEnvRec::ChangeValue>:" |\
	grep -v "Error in <TCint::AutoLoad>: failure loading library " |\
	grep -v "Error in <TCint::AutoLoadCallback>: failure loading library " |\
	grep -v "Welcome to ApplicationMgr " |\
	grep -v "running on " |\
	grep -v "Skipping" |\
	grep -v "Debug endTransaction:" |\
	# Py:Athena will be Athena
	sed -e 's/^.*Py:Athena /Athena    /g' |\
	# Pointer addresses (mark 0)
	sed -e 's/0x0\{8\}/0x!!!!/g' |\
	sed -e 's/0x[0-9a-f]\{8\}/0x????/g' |\
	sed -e 's/0x0\{7\}/0x!!!!/g' |\
	sed -e 's/0x[0-9a-f]\{7\}/0x????/g' |\
	# Rounding error etc
	#sed -e 's/\.\([0-9]\{2\}\)[0-9]*/.\1/g' |\
	#sed -e 's/ nan / inf /g' |\
	# POOL id
	sed -e 's/0\{8\}-0\{4\}-0\{4\}-0\{4\}-0\{12\}/!!!!/g' |\
	sed -e 's/[0-9A-F]\{8\}-[0-9A-F]\{4\}-[0-9A-F]\{4\}-[0-9A-F]\{4\}-[0-9A-F]\{12\}/????/g' |\
	sed -e 's/TTree [0-9]\{3\}[0-9]*/TTree ????/g' |\
	sed -e 's/Bytes: [0-9]\{3\}[0-9]*/Bytes: ????/g' |\
	# 64 bit offsets
	sed -e 's/fffffffff/f/g' |\
	sed -e 's/000000000/0/g' |\
	# package names e.g. Package-00-00-00
	sed -e 's/-r[0-9]\{6\}/-??-??-??/g' |\
	sed -e 's/-[0-9]\{2\}-[0-9]\{2\}-[0-9]\{2\}/-??-??-??/g' |\
	# pool attributes values
	sed -e 's/\[BYTES_READ\]: 0/\[BYTES_READ\]: !!!!/g' |\
	sed -e 's/\[BYTES_READ\]: [1-9][0-9]*/\[BYTES_READ\]: ????/g' |\
	# ignore UnixTimestamp printouts
	egrep -a -v 'ReadData             INFO CollectionMetadata, key = UnixTimestamp, value = ' |\
	# ignore cpu usage printouts
	egrep -a -v 'ChronoStatSvc +INFO Time' |\
	egrep -a -v 'Time left.+ Seconds' |\
	egrep -a -v 'Timeleft.+ sec' |\
	egrep -a -v 'INFO Time User' |\
	# ignore date and release
	egrep -a -v '[Mon|Tue|Wed|Thu|Fri|Sat|Sun] [[:alpha:]]{3} +[[:digit:]]+ [[:digit:]]{2}:[[:digit:]]{2}:[[:digit:]]{2}' |\
	# Collection MetaData
	sed -e 's/Metadata TTree 0/Metadata TTree !!!/g' |\
	sed -e 's/Metadata TTree [0-9]\{3\}/Metadata TTree ???/g' |\
	# Remove Archive Prefix
	sed -e 's/root:\/\/castoratlas\/\/castor\/cern.ch\/user\/g\/gemmeren\/ArchiveFile.zip#EmptyPoolFile/EmptyPoolFile/g' |\
	sed -e 's/root:\/\/castoratlas\/\/castor\/cern.ch\/user\/g\/gemmeren\/ArchiveFile.zip#SimplePoolFile/SimplePoolFile/g' |\
	sed -e 's/ArchiveFile.zip#EmptyPoolFile/EmptyPoolFile/g' |\
	sed -e 's/ArchiveFile.zip#SimplePoolFile/SimplePoolFile/g' |\
	# Stream wildcard
	sed -e 's/INFO CLID = 222376821, key = Stream[12]/INFO CLID = 222376821, key = StreamX/g' |\
	grep -v "^Stream[1-9]             DEBUG Wild card in key: begining part -  ending part -" |\
	grep -v "^PluginMgr            INFO loaded plugin info for [0-9]* components" |\
	grep -v "^Py:PropertyProxy     INFO Read module info for [0-9]* configurables from [0-9]* rootmap files" |\
	grep -v "^DllClassManager      INFO readPluginInfo: loaded plugin info for" |\
	grep -v "^Py:ConfigurableDb    INFO Read module info for" |\
	grep -v "^DetDescrCnvSvc       INFO " |\
	grep -v "^EventPersistenc...   INFO Added successfully Conversion service:DetDescrCnvSvc" |\
	sed -e "s/ 'DetDescrCnvSvc' ,//g" |\
	# HistorySvc
	grep -v "^HistorySvc" |\
	# ExampleHit Streamer for new object.
	grep -v "Found unknown streamer checksum" |\
	# CLHEP Streamer.
	grep -v "AthenaRootStrea...   INFO   - Streamer name:" |\
	grep -v "AthenaRootStrea...   INFO ROOT Streamer for" |\
	grep -v "AthenaRootStrea...   INFO Adopted streamer for class" |\
	grep -v "DBReplicaSvc         INFO " |\
	# lib maps
	grep -v "^map " |\
	grep -v "^value " |\
	# ROOT file version
	grep -v "Root file version:" |\
	grep -v "File version:" |\
	# ClassIDSvc and ServiceManager messages
	grep -v "^ClassIDSvc" |\
	grep -v "^ServiceManager" |\
	grep -v "^CoreDumpSvc          INFO Handling signals" |\
	grep -v "Initializing AddressRemappingSvc" |\
	grep -v "SG::HiveMgrSvc" |\
	# Strange Chars from ApplicationMgr
	sed -e "s/^..*ApplicationMgr/ApplicationMgr/" |\
        # Ordering sensitivities
	egrep -v "Deaccess DbContainer|RootDatabase.close Debug I/O|Database being retired" |\
	# Empty lines
	grep -v '^$'
