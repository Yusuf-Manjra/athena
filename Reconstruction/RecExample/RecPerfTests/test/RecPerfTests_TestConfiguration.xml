<?xml version="1.0"?>
<!DOCTYPE unifiedTestConfiguration SYSTEM "http://www.hep.ucl.ac.uk/atlas/AtlasTesting/DTD/unifiedTestConfiguration.dtd">

<unifiedTestConfiguration>
  <atn>
  </atn>
  <kv>
  </kv>

  <rtt xmlns="http://www.hep.ucl.ac.uk/atlas/AtlasTesting/rtt">

    <rttContactPerson>Antonio Limosani (antonio.limosani@sydney.edu.au)</rttContactPerson>
    <refRelease>15.5.0</refRelease>

    <jobList>
      
      <classification>
        <displayClass>OfflineValidation</displayClass>
        <displayProcess>Reco</displayProcess>
        <displayComponent>Det-Combined</displayComponent>
      </classification>



  <jobTransform userJobId="system_reco_mc15_ttbar_valid_13tev_25ns_mu00_to_mu40">
	<doc>Reco_tf runs on 13TeV collision mc ttbar 25 ns</doc>
	<jobTransformJobName>system_reco_mc15_ttbar_valid_13tev_25ns_mu00_to_mu40</jobTransformJobName>
	<jobTransformCmd>
	  export TRF_ECHO=1; Reco_tf.py --inputRDOFile root://eosatlas//eos/atlas/user/a/atlaspmb/mc/valid1.110401.PowhegPythia_P2012_ttbar_nonallhad.recon.RDO.e3099_s2578_r6220_tid05191878_00/RDO.05191878._000121.pool.root.1 --maxEvents 100 --outputESDFile myESD.pool.root --outputAODFile myAOD.pool.root --preExec='from PerfMonComps.PerfMonFlags import jobproperties as pmjp;pmjp.PerfMonFlags.doPostProcessing=True;pmjp.PerfMonFlags.doSemiDetailedMonitoringFullPrint=True;rec.doTrigger=False;rec.doForwardDet=False;rec.doInDet=True;rec.doMuon=True;rec.doCalo=True;rec.doEgamma=False;rec.doMuonCombined=False;rec.doJetMissingETTag=False;rec.doTau=False;from RecExConfig.RecAlgsFlags import recAlgs;recAlgs.doMuonSpShower=False;rec.doBTagging=False;recAlgs.doEFlow=False;recAlgs.doEFlowJet=False;recAlgs.doMissingET=False;recAlgs.doMissingETSig=False; from JetRec.JetRecFlags import jetFlags;jetFlags.Enabled=False;' --conditionsTag "default:OFLCOND-RUN12-SDR-31" | tee  __log.txt; 
	  echo $? &gt;  __exitcode ; 
	  touch __done ;
	  grep  -i "Reco_tf" jobReport.txt  | head -n1 | awk -F\" '{print $2}' &gt; __command.sh;
	  for f in ntuple*.pmon.gz; do if [ -f "$f" ]; then tar xf $f "*.pmonsd.*" ; fi; done ; 
	  checkxAOD.py myESD.pool.root &gt; myESD.pool.root.checkfile.txt ; 
	  checkxAOD.py myAOD.pool.root &gt; myAOD.pool.root.checkfile.txt ;  
	  export userJobId="system_reco_mc15_ttbar_valid_13tev_25ns_mu00_to_mu40"; 
	  export headDir="/afs/cern.ch/atlas/project/pmb/new_pmb/archive/custom";
	  export OutputDestination=${headDir}/`date +'%d/%m/%Y'`/`basename ${ATLAS_RELEASE_BASE}`/`basename $ROOTSYS`/${userJobId}; 
	  gzip *txt; 
	  mkdir -p                       ${OutputDestination} ; 
	  rsync -avz ntuple*             ${OutputDestination}/. ; 
	  rsync -avz __*                 ${OutputDestination}/. ; 
	  rsync -avz *.checkfile.txt.gz  ${OutputDestination}/. ; 
	</jobTransformCmd>
	<group>TrfRecPerf</group>
	<queue>atlasrttperf</queue>
      </jobTransform>

      <jobTransform userJobId="combined_reco_mc15_ttbar_valid_13tev_25ns_mu00_to_mu40">
	<doc>Reco_tf runs on 13TeV collision mc ttbar 25 ns</doc>
	<jobTransformJobName>combined_reco_mc15_ttbar_valid_13tev_25ns_mu00_to_mu40</jobTransformJobName>
	<jobTransformCmd>
	  export TRF_ECHO=1; Reco_tf.py --inputRDOFile root://eosatlas//eos/atlas/user/a/atlaspmb/mc/valid1.110401.PowhegPythia_P2012_ttbar_nonallhad.recon.RDO.e3099_s2578_r6220_tid05191878_00/RDO.05191878._000121.pool.root.1 --maxEvents 100 --outputESDFile myESD.pool.root --outputAODFile myAOD.pool.root --preExec='from PerfMonComps.PerfMonFlags import jobproperties as pmjp;pmjp.PerfMonFlags.doPostProcessing=True;pmjp.PerfMonFlags.doSemiDetailedMonitoringFullPrint=True;rec.doTrigger=False;'  --conditionsTag "default:OFLCOND-RUN12-SDR-31" | tee  __log.txt; 
	  echo $? &gt;  __exitcode ; 
	  touch __done ;
	  grep  -i "Reco_tf" jobReport.txt  | head -n1 | awk -F\" '{print $2}' &gt; __command.sh;
	  for f in ntuple*.pmon.gz; do if [ -f "$f" ]; then tar xf $f "*.pmonsd.*" ; fi; done ; 
	  checkxAOD.py myESD.pool.root &gt; myESD.pool.root.checkfile.txt ; 
	  checkxAOD.py myAOD.pool.root &gt; myAOD.pool.root.checkfile.txt ;  
	  export userJobId="combined_reco_mc15_ttbar_valid_13tev_25ns_mu00_to_mu40"; 
	  export headDir="/afs/cern.ch/atlas/project/pmb/new_pmb/archive/custom";
	  export OutputDestination=${headDir}/`date +'%d/%m/%Y'`/`basename ${ATLAS_RELEASE_BASE}`/`basename $ROOTSYS`/${userJobId}; 
	  gzip *txt; 
	  mkdir -p                       ${OutputDestination} ; 
	  rsync -avz ntuple*             ${OutputDestination}/. ; 
	  rsync -avz __*                 ${OutputDestination}/. ; 
	  rsync -avz *.checkfile.txt.gz  ${OutputDestination}/. ; 
	</jobTransformCmd>
	<group>TrfRecPerf</group>
	<queue>atlasrttperf</queue>
      </jobTransform>


      <jobTransform userJobId="monitoring_reco_mc15_ttbar_valid_13tev_25ns_mu00_to_mu40">
	<doc>Reco_tf runs on 13TeV collision mc ttbar 25 ns</doc>
	<jobTransformJobName>monitoring_reco_mc15_ttbar_valid_13tev_25ns_mu00_to_mu40</jobTransformJobName>
	<jobTransformCmd>
	  export TRF_ECHO=1; Reco_tf.py --inputRDOFile root://eosatlas//eos/atlas/user/a/atlaspmb/mc/valid1.110401.PowhegPythia_P2012_ttbar_nonallhad.recon.RDO.e3099_s2578_r6220_tid05191878_00/RDO.05191878._000121.pool.root.1 --maxEvents 100 --outputESDFile myESD.pool.root  --outputAODFile myAOD.pool.root --preExec='rec.doTrigger=False;rec.doMonitoring=True;from PerfMonComps.PerfMonFlags import jobproperties as pmjp;pmjp.PerfMonFlags.doPostProcessing=True;pmjp.PerfMonFlags.doSemiDetailedMonitoringFullPrint=True;' --conditionsTag "default:OFLCOND-RUN12-SDR-31" | tee  __log.txt; 
	  echo $? &gt;  __exitcode ; 
	  touch __done ;
	  grep  -i "Reco_tf" jobReport.txt  | head -n1 | awk -F\" '{print $2}' &gt; __command.sh;
	  for f in ntuple*.pmon.gz; do if [ -f "$f" ]; then tar xf $f "*.pmonsd.*" ; fi; done ; 
	  checkxAOD.py myESD.pool.root &gt; myESD.pool.root.checkfile.txt ; 
	  checkxAOD.py myAOD.pool.root &gt; myAOD.pool.root.checkfile.txt ;  
	  export userJobId="monitoring_reco_mc15_ttbar_valid_13tev_25ns_mu00_to_mu40"; 
	  export headDir="/afs/cern.ch/atlas/project/pmb/new_pmb/archive/custom";
	  export OutputDestination=${headDir}/`date +'%d/%m/%Y'`/`basename ${ATLAS_RELEASE_BASE}`/`basename $ROOTSYS`/${userJobId}; 
	  gzip *txt; 
	  mkdir -p                       ${OutputDestination} ; 
	  rsync -avz ntuple*             ${OutputDestination}/. ; 
	  rsync -avz __*                 ${OutputDestination}/. ; 
	  rsync -avz *.checkfile.txt.gz  ${OutputDestination}/. ; 
	</jobTransformCmd>
	<group>TrfRecPerf</group>
	<queue>atlasrttperf</queue>
      </jobTransform>


      <jobTransform userJobId="monitoring_reco_data15_main">
	<doc>Reco_tf runs on 13TeV collision data from the mainxf stream</doc>
	<jobTransformJobName>monitoring_reco_data15_main</jobTransformJobName>
	<jobTransformCmd>
	  export TRF_ECHO=1; Reco_tf.py --inputBSFile root://eosatlas//eos/atlas/user/a/atlaspmb/data15_13TeV/data15_13TeV.00284484.physics_Main.daq.RAW._lb0037._SFO-1._0001.data  --outputESDFile myESD.pool.root --outputAODFile myAOD.pool.root --AMI q431 --maxEvent 150 --athenaopts='--pmon=sdmonfp' | tee  __log.txt; 
	  echo $? &gt;  __exitcode ; 
	  touch __done ;
	  grep  -i "Reco_tf" jobReport.txt  | head -n1 | awk -F\" '{print $2}' &gt; __command.sh;
	  for f in ntuple*.pmon.gz; do if [ -f "$f" ]; then tar xf $f "*.pmonsd.*" ; fi; done ; 
	  checkxAOD.py myESD.pool.root &gt; myESD.pool.root.checkfile.txt ; 
	  checkxAOD.py myAOD.pool.root &gt; myAOD.pool.root.checkfile.txt ;  
	  export userJobId="monitoring_reco_data15_main"; 
	  export headDir="/afs/cern.ch/atlas/project/pmb/new_pmb/archive/custom";
	  export OutputDestination=${headDir}/`date +'%d/%m/%Y'`/`basename ${ATLAS_RELEASE_BASE}`/`basename $ROOTSYS`/${userJobId}; 
	  gzip *txt; 
	  mkdir -p                       ${OutputDestination} ; 
	  rsync -avz ntuple*             ${OutputDestination}/. ; 
	  rsync -avz __*                 ${OutputDestination}/. ; 
	  rsync -avz *.checkfile.txt.gz  ${OutputDestination}/. ; 
	</jobTransformCmd>
	<group>TrfRecPerf</group>
	<queue>atlasrttperf</queue>
      </jobTransform>


      <jobTransform userJobId="trigger_reco_mc15_ttbar_valid_13tev_25ns_mu00_to_mu40">
	<doc>Reco_tf runs on 13TeV collision mc ttbar 25 ns</doc>
	<jobTransformJobName>trigger_reco_mc15_ttbar_valid_13tev_25ns_mu00_to_mu40</jobTransformJobName>
	<jobTransformCmd>
	  export TRF_ECHO=1; Reco_tf.py --inputRDOFile root://eosatlas//eos/atlas/user/a/atlaspmb/mc/valid1.110401.PowhegPythia_P2012_ttbar_nonallhad.recon.RDO.e3099_s2578_r6220_tid05191878_00/RDO.05191878._000121.pool.root.1 --maxEvents 100 --outputESDFile myESD.pool.root  --outputAODFile myAOD.pool.root --preExec='rec.doTrigger=True;rec.doMonitoring=True;from PerfMonComps.PerfMonFlags import jobproperties as pmjp;pmjp.PerfMonFlags.doPostProcessing=True;pmjp.PerfMonFlags.doSemiDetailedMonitoringFullPrint=True;' --conditionsTag "default:OFLCOND-RUN12-SDR-31" | tee  __log.txt; 
	  echo $? &gt;  __exitcode ;
	  touch __done ;
	  grep  -i "Reco_tf" jobReport.txt  | head -n1 | awk -F\" '{print $2}' &gt; __command.sh;
	  for f in ntuple*.pmon.gz; do if [ -f "$f" ]; then tar xf $f "*.pmonsd.*" ; fi; done ; 
	  checkxAOD.py myESD.pool.root &gt; myESD.pool.root.checkfile.txt ; 
	  checkxAOD.py myAOD.pool.root &gt; myAOD.pool.root.checkfile.txt ;  
	  export userJobId="trigger_reco_mc15_ttbar_valid_13tev_25ns_mu00_to_mu40"; 
	  export headDir="/afs/cern.ch/atlas/project/pmb/new_pmb/archive/custom";
	  export OutputDestination=${headDir}/`date +'%d/%m/%Y'`/`basename ${ATLAS_RELEASE_BASE}`/`basename $ROOTSYS`/${userJobId}; 
	  gzip *txt; 
	  mkdir -p                       ${OutputDestination} ; 
	  rsync -avz ntuple*             ${OutputDestination}/. ; 
	  rsync -avz __*                 ${OutputDestination}/. ; 
	  rsync -avz *.checkfile.txt.gz  ${OutputDestination}/. ; 
	</jobTransformCmd>
	<group>TrfRecPerf</group>
	<queue>atlasrttperf</queue>
      </jobTransform>



      <jobTransform userJobId="fullsim_mc15_ttbar_valid_13tev_25ns_mu00_to_mu40">
	<doc>Full Geant4 simulation (MC15 production setup, based on AMI tag s2745 )</doc>
	<jobTransformJobName>fullsim_mc15_ttbar_valid_13tev_25ns_mu00_to_mu40</jobTransformJobName>
	<jobTransformCmd>
	  export TRF_ECHO=1; 
	  Sim_tf.py --conditionsTag 'default:OFLCOND-RUN12-SDR-19' --physicsList 'FTFP_BERT' --truthStrategy 'MC15aPlus' --simulator 'FullG4' --postInclude 'default:RecJobTransforms/UseFrontier.py' --preInclude 'EVNTtoHITS:SimulationJobOptions/preInclude.BeamPipeKill.py,SimulationJobOptions/preInclude.FrozenShowersFCalOnly.py' --DataRunNumber '222525' --geometryVersion 'default:ATLAS-R2-2015-03-01-00_VALIDATION' --inputEVNTFile "/afs/cern.ch/atlas/groups/Simulation/EVNT_files/mc12_valid.110401.PowhegPythia_P2012_ttbar_nonallhad.evgen.EVNT.e3099.01517252._000001.pool.root.1" --outputHITSFile "Hits.pool.root" --maxEvents 20 --preExec='from PerfMonComps.PerfMonFlags import jobproperties as pmjp;pmjp.PerfMonFlags.doPostProcessing=True;pmjp.PerfMonFlags.doSemiDetailedMonitoringFullPrint=True;' | tee  __log.txt; 
	  echo $? &gt;  __exitcode ; 
	  touch __done ;
	  grep  -i "Sim_tf" jobReport.txt  | head -n1 | awk -F\" '{print $2}' &gt; __command.sh;
	  for f in ntuple*.pmon.gz; do if [ -f "$f" ]; then tar xf $f "*.pmonsd.*" ; fi; done ; 
	  export userJobId="fullsim_mc15_ttbar_valid_13tev_25ns_mu00_to_mu40"; 
	  export headDir="/afs/cern.ch/atlas/project/pmb/new_pmb/archive/custom";
	  export OutputDestination=${headDir}/`date +'%d/%m/%Y'`/`basename ${ATLAS_RELEASE_BASE}`/`basename $ROOTSYS`/${userJobId}; 
	  gzip *txt; 
	  mkdir -p                       ${OutputDestination} ; 
	  rsync -avz ntuple*             ${OutputDestination}/. ; 
	  rsync -avz __*                 ${OutputDestination}/. ; 
	  rsync -avz *.checkfile.txt.gz  ${OutputDestination}/. ; 
	</jobTransformCmd>
	<group>TrfRecPerf</group>
	<queue>atlasrttperf</queue>
      </jobTransform>

      <jobTransform userJobId="fastsim_mc15_ttbar_valid_13tev_25ns_mu00_to_mu40">
	<doc>ATLFASTII simulation (MC15 production setup)</doc>
	<jobTransformJobName>fastsim_mc15_ttbar_valid_13tev_25ns_mu00_to_mu40</jobTransformJobName>
	<jobTransformCmd>
	  export TRF_ECHO=1; 
	  Sim_tf.py --conditionsTag 'default:OFLCOND-RUN12-SDR-19' --physicsList 'FTFP_BERT' --truthStrategy 'MC12' --simulator 'ATLFASTII' --postInclude 'default:RecJobTransforms/UseFrontier.py' --preInclude 'EVNTtoHITS:SimulationJobOptions/preInclude.BeamPipeKill.py' --DataRunNumber '222525' --geometryVersion 'default:ATLAS-R2-2015-03-01-00_VALIDATION' --inputEVNTFile "/afs/cern.ch/atlas/groups/Simulation/EVNT_files/mc12_valid.110401.PowhegPythia_P2012_ttbar_nonallhad.evgen.EVNT.e3099.01517252._000001.pool.root.1" --outputHITSFile "Hits.pool.root" --maxEvents 20 --maxEvents 20 --preExec='from PerfMonComps.PerfMonFlags import jobproperties as pmjp;pmjp.PerfMonFlags.doPostProcessing=True;pmjp.PerfMonFlags.doSemiDetailedMonitoringFullPrint=True;' | tee  __log.txt; 
	  echo $? &gt;  __exitcode ; 
	  touch __done ;
	  grep  -i "Sim_tf" jobReport.txt  | head -n1 | awk -F\" '{print $2}' &gt; __command.sh;
	  for f in ntuple*.pmon.gz; do if [ -f "$f" ]; then tar xf $f "*.pmonsd.*" ; fi; done ; 
	  export userJobId="fastsim_mc15_ttbar_valid_13tev_25ns_mu00_to_mu40"; 
	  export headDir="/afs/cern.ch/atlas/project/pmb/new_pmb/archive/custom";
	  export OutputDestination=${headDir}/`date +'%d/%m/%Y'`/`basename ${ATLAS_RELEASE_BASE}`/`basename $ROOTSYS`/${userJobId}; 
	  gzip *txt; 
	  mkdir -p                       ${OutputDestination} ; 
	  rsync -avz ntuple*             ${OutputDestination}/. ; 
	  rsync -avz __*                 ${OutputDestination}/. ; 
	  rsync -avz *.checkfile.txt.gz  ${OutputDestination}/. ; 
	</jobTransformCmd>
	<group>TrfRecPerf</group>
	<queue>atlasrttperf</queue>
      </jobTransform>


      <jobTransform userJobId="digi_mc15_ttbar_valid_13tev_25ns_mu00_to_mu40">
	<doc>Digitization (MC15 production setup)</doc>
	<jobTransformJobName>digi_mc15_ttbar_valid_13tev_25ns_mu00_to_mu40</jobTransformJobName>
	<jobTransformCmd>
	  export TRF_ECHO=1; xrdcp root://eosatlas//eos/atlas/atlascerngroupdisk/proj-sit/digitization/RTT/ReferenceFiles/$DigitizationTestsVersion/$CMTCONFIG/$DigitizationTestsCompFile DiffPool_Comp.pool.root; xrdcp root://eosatlas//eos/atlas/atlascerngroupdisk/proj-sit/digitization/RTT/mc15a/valid1.110401.PowhegPythia_P2012_ttbar_nonallhad.simul.HITS.e3099_s2578_tid04919495_00/HITS.04919495._001041.pool.root.1 HITS.04919495._001041.pool.root.1; LowPtMinbiasHitsFile="/eos/atlas/atlascerngroupdisk/proj-sit/digitization/RTT/mc15a/mc15_valid.361034.Pythia8EvtGen_A2MSTW2008LO_minbias_inelastic_low.merge.HITS.e3581_s2578_s2169_tid05098374_00/"; for file in `eos ls $LowPtMinbiasHitsFile`; do  xrdcp root://eosatlas/$LowPtMinbiasHitsFile/$file $file ; done; HighPtMinbiasHitsFile="/eos/atlas/atlascerngroupdisk/proj-sit/digitization/RTT/mc15a/mc15_valid.361035.Pythia8EvtGen_A2MSTW2008LO_minbias_inelastic_high.merge.HITS.e3581_s2578_s2169_tid05098387_00/"; for file in `eos ls $HighPtMinbiasHitsFile | grep 00067`; do  xrdcp root://eosatlas/$HighPtMinbiasHitsFile/$file $file ; done; Digi_tf.py --inputHITSFile HITS.04919495.*.pool.root.? --conditionsTag default:OFLCOND-RUN12-SDR-25 --digiSeedOffset1 170 --digiSeedOffset2 170 --geometryVersion ATLAS-R2-2015-03-01-00 --inputHighPtMinbiasHitsFile HITS.05098387.*.pool.root.? --inputLowPtMinbiasHitsFile HITS.05098374.*.pool.root.? --jobNumber 1 --maxEvents 25 --numberOfCavernBkg 0 --numberOfHighPtMinBias 0.12268057 --numberOfLowPtMinBias 39.8773194 --outputRDOFile mc15_2015_ttbar.RDO.pool.root --postExec 'all:CfgMgr.MessageSvc().setError+=["HepMcParticleLink"]' 'HITtoRDO:from AthenaCommon.CfgGetter import getPublicTool;getPublicTool("MergeMcEventCollTool").OnlySaveSignalTruth=True;ToolSvc.LArAutoCorrTotalToolDefault.deltaBunch=1' --postInclude 'default:PyJobTransforms/UseFrontier.py' --pileupFinalBunch 6 --preExec 'all:from AthenaCommon.BeamFlags import jobproperties;jobproperties.Beam.numberOfCollisions.set_Value_and_Lock(20.0);from LArROD.LArRODFlags import larRODFlags;larRODFlags.NumberOfCollisions.set_Value_and_Lock(20);larRODFlags.nSamples.set_Value_and_Lock(4);larRODFlags.doOFCPileupOptimization.set_Value_and_Lock(True);larRODFlags.firstSample.set_Value_and_Lock(0);larRODFlags.useHighestGainAutoCorr.set_Value_and_Lock(True);from PerfMonComps.PerfMonFlags import jobproperties as pmjp;pmjp.PerfMonFlags.doPostProcessing=True;pmjp.PerfMonFlags.doSemiDetailedMonitoringFullPrint=True;' --preInclude 'HITtoRDO:Digitization/ForceUseOfPileUpTools.py,SimulationJobOptions/preInclude.PileUpBunchTrainsMC15_2015_25ns_Config1.py,RunDependentSimData/configLumi_run222525_v1.py' --skipEvents 0 | tee  __log.txt; 
	  echo $? &gt;  __exitcode ; 
	  touch __done ;
	  grep  -i "Digi_tf" jobReport.txt  | head -n1 | awk -F\" '{print $2}' &gt; __command.sh;
	  for f in ntuple*.pmon.gz; do if [ -f "$f" ]; then tar xf $f "*.pmonsd.*" ; fi; done ; 
	  export userJobId="digi_mc15_ttbar_valid_13tev_25ns_mu00_to_mu40"; 
	  export headDir="/afs/cern.ch/atlas/project/pmb/new_pmb/archive/custom";
	  export OutputDestination=${headDir}/`date +'%d/%m/%Y'`/`basename ${ATLAS_RELEASE_BASE}`/`basename $ROOTSYS`/${userJobId}; 
	  gzip *txt; 
	  mkdir -p                       ${OutputDestination} ; 
	  rsync -avz ntuple*             ${OutputDestination}/. ; 
	  rsync -avz __*                 ${OutputDestination}/. ; 
	  rsync -avz *.checkfile.txt.gz  ${OutputDestination}/. ; 
	</jobTransformCmd>
	<group>TrfRecPerf</group>
	<queue>atlasrttperf</queue>
      </jobTransform>


      <jobTransform userJobId="fullchain_mc15_ttbar_valid_13tev_25ns_mu40">
	<doc>Full chain (MC15 production setup)</doc>
	<jobTransformJobName>fullchain_mc15_ttbar_valid_13tev_25ns_mu40</jobTransformJobName>
	<jobTransformCmd>
	  export TRF_ECHO=1; xrdcp root://eosatlas//eos/atlas/atlascerngroupdisk/proj-sit/digitization/RTT/ReferenceFiles/$DigitizationTestsVersion/$CMTCONFIG/$DigitizationTestsCompFile DiffPool_Comp.pool.root; xrdcp root://eosatlas//eos/atlas/atlascerngroupdisk/proj-sit/digitization/RTT/mc15a/valid1.110401.PowhegPythia_P2012_ttbar_nonallhad.simul.HITS.e3099_s2578_tid04919495_00/HITS.04919495._001041.pool.root.1 HITS.04919495._001041.pool.root.1; LowPtMinbiasHitsFile="/eos/atlas/atlascerngroupdisk/proj-sit/digitization/RTT/mc15a/mc15_valid.361034.Pythia8EvtGen_A2MSTW2008LO_minbias_inelastic_low.merge.HITS.e3581_s2578_s2169_tid05098374_00/"; for file in `eos ls $LowPtMinbiasHitsFile`; do  xrdcp root://eosatlas/$LowPtMinbiasHitsFile/$file $file ; done; HighPtMinbiasHitsFile="/eos/atlas/atlascerngroupdisk/proj-sit/digitization/RTT/mc15a/mc15_valid.361035.Pythia8EvtGen_A2MSTW2008LO_minbias_inelastic_high.merge.HITS.e3581_s2578_s2169_tid05098387_00/"; for file in `eos ls $HighPtMinbiasHitsFile | grep 00067`; do  xrdcp root://eosatlas/$HighPtMinbiasHitsFile/$file $file ; done; Reco_tf.py --inputHITSFile HITS.04919495.*.pool.root.? --conditionsTag 'default:OFLCOND-RUN12-SDR-31' --conditionsTag 'default:OFLCOND-RUN12-SDR-31' --digiSeedOffset1 170 --digiSeedOffset2 170  --geometryVersion 'default:ATLAS-R2-2015-03-01-00'  --inputHighPtMinbiasHitsFile HITS.05098387.*.pool.root.? --inputLowPtMinbiasHitsFile HITS.05098374.*.pool.root.?  --jobNumber 1 --maxEvents 100 --numberOfCavernBkg="0" --numberOfHighPtMinBias '0.122680569785' --numberOfLowPtMinBias '39.8773194302'  --outputAODFile="myAOD.pool.root" --outputESDFile="myESD.pool.root" --outputESDFile="myRDO.pool.root"  --pileupFinalBunch '6' --postExec 'all:CfgMgr.MessageSvc().setError+=["HepMcParticleLink"]' 'HITtoRDO:job.StandardPileUpToolsAlg.PileUpTools["MergeMcEventCollTool"].OnlySaveSignalTruth=True;job.StandardPileUpToolsAlg.PileUpTools["MdtDigitizationTool"].LastXing=150' 'RDOtoRDOTrigger:from AthenaCommon.AlgSequence import AlgSequence;AlgSequence().LVL1TGCTrigger.TILEMU=True;from AthenaCommon.AppMgr import ServiceMgr;import MuonRPC_Cabling.MuonRPC_CablingConfig;ServiceMgr.MuonRPC_CablingSvc.RPCTriggerRoadsfromCool=False' --postInclude 'default:RecJobTransforms/UseFrontier.py' --preExec 'all:rec.Commissioning.set_Value_and_Lock(True);from AthenaCommon.BeamFlags import jobproperties;jobproperties.Beam.numberOfCollisions.set_Value_and_Lock(40.0);from LArROD.LArRODFlags import larRODFlags;larRODFlags.NumberOfCollisions.set_Value_and_Lock(40);larRODFlags.nSamples.set_Value_and_Lock(4);larRODFlags.doOFCPileupOptimization.set_Value_and_Lock(True);larRODFlags.firstSample.set_Value_and_Lock(0);larRODFlags.useHighestGainAutoCorr.set_Value_and_Lock(True)' 'RAWtoESD:from CaloRec.CaloCellFlags import jobproperties;jobproperties.CaloCellFlags.doLArCellEmMisCalib=False;from TriggerJobOpts.TriggerFlags import TriggerFlags;TriggerFlags.triggerMenuSetup="MC_pp_v6_tight_mc_prescale"' 'ESDtoAOD:TriggerFlags.AODEDMSet="AODSLIM"' 'HITtoRDO:userRunLumiOverride={"run":222525, "startmu":40.0, "endmu":41.0, "stepmu":1.0, "startlb":1, "timestamp": 1376703331}'  --numberOfCavernBkg '0' --preInclude 'HITtoRDO:Digitization/ForceUseOfPileUpTools.py,SimulationJobOptions/preInclude.PileUpBunchTrainsMC15_2015_25ns_Config1.py,RunDependentSimData/configLumi_muRange.py'  --mts ESD:0 --steering "RAWtoESD:in-RDO,in+RDO_TRIG,in-BS" | tee  __log.txt; 
	  echo $? &gt;  __exitcode ; 
	  touch __done ;
	  grep  -i "Digi_tf" jobReport.txt  | head -n1 | awk -F\" '{print $2}' &gt; __command.sh;
	  for f in ntuple*.pmon.gz; do if [ -f "$f" ]; then tar xf $f "*.pmonsd.*" ; fi; done ; 
	  export userJobId="fullchain_mc15_ttbar_valid_13tev_25ns_mu40"; 
	  export headDir="/afs/cern.ch/atlas/project/pmb/new_pmb/archive/custom";
	  export OutputDestination=${headDir}/`date +'%d/%m/%Y'`/`basename ${ATLAS_RELEASE_BASE}`/`basename $ROOTSYS`/${userJobId}; 
	  checkxAOD.py myRDO.pool.root &gt; myRDO.pool.root.checkfile.txt ; 
	  checkxAOD.py myESD.pool.root &gt; myESD.pool.root.checkfile.txt ; 
	  checkxAOD.py myAOD.pool.root &gt; myAOD.pool.root.checkfile.txt ;  
	  gzip *txt; 
	  mkdir -p                       ${OutputDestination} ; 
	  rsync -avz ntuple*             ${OutputDestination}/. ; 
	  rsync -avz __*                 ${OutputDestination}/. ; 
	  rsync -avz *.checkfile.txt.gz  ${OutputDestination}/. ; 
	</jobTransformCmd>
	<group>TrfRecPerf</group>
	<queue>atlasrttperf</queue>
      </jobTransform>

      <jobTransform userJobId="fullchain_mc15_ttbar_valid_13tev_25ns_mu60">
	<doc>Full chain (MC15 production setup)</doc>
	<jobTransformJobName>fullchain_mc15_ttbar_valid_13tev_25ns_mu60</jobTransformJobName>
	<jobTransformCmd>
	  export TRF_ECHO=1; xrdcp root://eosatlas//eos/atlas/atlascerngroupdisk/proj-sit/digitization/RTT/ReferenceFiles/$DigitizationTestsVersion/$CMTCONFIG/$DigitizationTestsCompFile DiffPool_Comp.pool.root; xrdcp root://eosatlas//eos/atlas/atlascerngroupdisk/proj-sit/digitization/RTT/mc15a/valid1.110401.PowhegPythia_P2012_ttbar_nonallhad.simul.HITS.e3099_s2578_tid04919495_00/HITS.04919495._001041.pool.root.1 HITS.04919495._001041.pool.root.1; LowPtMinbiasHitsFile="/eos/atlas/atlascerngroupdisk/proj-sit/digitization/RTT/mc15a/mc15_valid.361034.Pythia8EvtGen_A2MSTW2008LO_minbias_inelastic_low.merge.HITS.e3581_s2578_s2169_tid05098374_00/"; for file in `eos ls $LowPtMinbiasHitsFile`; do  xrdcp root://eosatlas/$LowPtMinbiasHitsFile/$file $file ; done; HighPtMinbiasHitsFile="/eos/atlas/atlascerngroupdisk/proj-sit/digitization/RTT/mc15a/mc15_valid.361035.Pythia8EvtGen_A2MSTW2008LO_minbias_inelastic_high.merge.HITS.e3581_s2578_s2169_tid05098387_00/"; for file in `eos ls $HighPtMinbiasHitsFile | grep 00067`; do  xrdcp root://eosatlas/$HighPtMinbiasHitsFile/$file $file ; done; Reco_tf.py --inputHITSFile HITS.04919495.*.pool.root.? --conditionsTag 'default:OFLCOND-RUN12-SDR-31' --conditionsTag 'default:OFLCOND-RUN12-SDR-31' --digiSeedOffset1 170 --digiSeedOffset2 170  --geometryVersion 'default:ATLAS-R2-2015-03-01-00'  --inputHighPtMinbiasHitsFile HITS.05098387.*.pool.root.? --inputLowPtMinbiasHitsFile HITS.05098374.*.pool.root.?  --jobNumber 1 --maxEvents 100 --numberOfCavernBkg="0" --numberOfHighPtMinBias '0.184020854678' --numberOfLowPtMinBias '59.8159791453'  --outputAODFile="myAOD.pool.root" --outputESDFile="myESD.pool.root" --outputESDFile="myRDO.pool.root"  --pileupFinalBunch '6' --postExec 'all:CfgMgr.MessageSvc().setError+=["HepMcParticleLink"]' 'HITtoRDO:job.StandardPileUpToolsAlg.PileUpTools["MergeMcEventCollTool"].OnlySaveSignalTruth=True;job.StandardPileUpToolsAlg.PileUpTools["MdtDigitizationTool"].LastXing=150' 'RDOtoRDOTrigger:from AthenaCommon.AlgSequence import AlgSequence;AlgSequence().LVL1TGCTrigger.TILEMU=True;from AthenaCommon.AppMgr import ServiceMgr;import MuonRPC_Cabling.MuonRPC_CablingConfig;ServiceMgr.MuonRPC_CablingSvc.RPCTriggerRoadsfromCool=False' --postInclude 'default:RecJobTransforms/UseFrontier.py' --preExec 'all:rec.Commissioning.set_Value_and_Lock(True);from AthenaCommon.BeamFlags import jobproperties;jobproperties.Beam.numberOfCollisions.set_Value_and_Lock(40.0);from LArROD.LArRODFlags import larRODFlags;larRODFlags.NumberOfCollisions.set_Value_and_Lock(40);larRODFlags.nSamples.set_Value_and_Lock(4);larRODFlags.doOFCPileupOptimization.set_Value_and_Lock(True);larRODFlags.firstSample.set_Value_and_Lock(0);larRODFlags.useHighestGainAutoCorr.set_Value_and_Lock(True)' 'RAWtoESD:from CaloRec.CaloCellFlags import jobproperties;jobproperties.CaloCellFlags.doLArCellEmMisCalib=False;from TriggerJobOpts.TriggerFlags import TriggerFlags;TriggerFlags.triggerMenuSetup="MC_pp_v6_tight_mc_prescale"' 'ESDtoAOD:TriggerFlags.AODEDMSet="AODSLIM"' 'HITtoRDO:userRunLumiOverride={"run":222525, "startmu":60.0, "endmu":61.0, "stepmu":1.0, "startlb":1, "timestamp": 1376703331}'  --numberOfCavernBkg '0' --preInclude 'HITtoRDO:Digitization/ForceUseOfPileUpTools.py,SimulationJobOptions/preInclude.PileUpBunchTrainsMC15_2015_25ns_Config1.py,RunDependentSimData/configLumi_muRange.py'  --mts ESD:0 --steering "RAWtoESD:in-RDO,in+RDO_TRIG,in-BS" | tee  __log.txt; 
	  echo $? &gt;  __exitcode ; 
	  touch __done ;
	  grep  -i "Digi_tf" jobReport.txt  | head -n1 | awk -F\" '{print $2}' &gt; __command.sh;
	  for f in ntuple*.pmon.gz; do if [ -f "$f" ]; then tar xf $f "*.pmonsd.*" ; fi; done ; 
	  export userJobId="fullchain_mc15_ttbar_valid_13tev_25ns_mu60"; 
	  export headDir="/afs/cern.ch/atlas/project/pmb/new_pmb/archive/custom";
	  export OutputDestination=${headDir}/`date +'%d/%m/%Y'`/`basename ${ATLAS_RELEASE_BASE}`/`basename $ROOTSYS`/${userJobId}; 
	  checkxAOD.py myRDO.pool.root &gt; myRDO.pool.root.checkfile.txt ; 
	  checkxAOD.py myESD.pool.root &gt; myESD.pool.root.checkfile.txt ; 
	  checkxAOD.py myAOD.pool.root &gt; myAOD.pool.root.checkfile.txt ;  
	  gzip *txt; 
	  mkdir -p                       ${OutputDestination} ; 
	  rsync -avz ntuple*             ${OutputDestination}/. ; 
	  rsync -avz __*                 ${OutputDestination}/. ; 
	  rsync -avz *.checkfile.txt.gz  ${OutputDestination}/. ; 
	</jobTransformCmd>
	<group>TrfRecPerf</group>
	<queue>atlasrttperf</queue>
      </jobTransform>

      <jobTransform userJobId="fullchain_mc15_ttbar_valid_13tev_25ns_mu80">
	<doc>Full chain (MC15 production setup)</doc>
	<jobTransformJobName>fullchain_mc15_ttbar_valid_13tev_25ns_mu80</jobTransformJobName>
	<jobTransformCmd>
	  export TRF_ECHO=1; xrdcp root://eosatlas//eos/atlas/atlascerngroupdisk/proj-sit/digitization/RTT/ReferenceFiles/$DigitizationTestsVersion/$CMTCONFIG/$DigitizationTestsCompFile DiffPool_Comp.pool.root; xrdcp root://eosatlas//eos/atlas/atlascerngroupdisk/proj-sit/digitization/RTT/mc15a/valid1.110401.PowhegPythia_P2012_ttbar_nonallhad.simul.HITS.e3099_s2578_tid04919495_00/HITS.04919495._001041.pool.root.1 HITS.04919495._001041.pool.root.1; LowPtMinbiasHitsFile="/eos/atlas/atlascerngroupdisk/proj-sit/digitization/RTT/mc15a/mc15_valid.361034.Pythia8EvtGen_A2MSTW2008LO_minbias_inelastic_low.merge.HITS.e3581_s2578_s2169_tid05098374_00/"; for file in `eos ls $LowPtMinbiasHitsFile`; do  xrdcp root://eosatlas/$LowPtMinbiasHitsFile/$file $file ; done; HighPtMinbiasHitsFile="/eos/atlas/atlascerngroupdisk/proj-sit/digitization/RTT/mc15a/mc15_valid.361035.Pythia8EvtGen_A2MSTW2008LO_minbias_inelastic_high.merge.HITS.e3581_s2578_s2169_tid05098387_00/"; for file in `eos ls $HighPtMinbiasHitsFile | grep 00067`; do  xrdcp root://eosatlas/$HighPtMinbiasHitsFile/$file $file ; done; Reco_tf.py --inputHITSFile HITS.04919495.*.pool.root.? --conditionsTag 'default:OFLCOND-RUN12-SDR-31' --conditionsTag 'default:OFLCOND-RUN12-SDR-31' --digiSeedOffset1 170 --digiSeedOffset2 170  --geometryVersion 'default:ATLAS-R2-2015-03-01-00'  --inputHighPtMinbiasHitsFile HITS.05098387.*.pool.root.? --inputLowPtMinbiasHitsFile HITS.05098374.*.pool.root.?  --jobNumber 1 --maxEvents 100 --numberOfCavernBkg="0" --numberOfHighPtMinBias '0.245361139571' --numberOfLowPtMinBias '79.7546388604'  --outputAODFile="myAOD.pool.root" --outputESDFile="myESD.pool.root" --outputESDFile="myRDO.pool.root"  --pileupFinalBunch '6' --postExec 'all:CfgMgr.MessageSvc().setError+=["HepMcParticleLink"]' 'HITtoRDO:job.StandardPileUpToolsAlg.PileUpTools["MergeMcEventCollTool"].OnlySaveSignalTruth=True;job.StandardPileUpToolsAlg.PileUpTools["MdtDigitizationTool"].LastXing=150' 'RDOtoRDOTrigger:from AthenaCommon.AlgSequence import AlgSequence;AlgSequence().LVL1TGCTrigger.TILEMU=True;from AthenaCommon.AppMgr import ServiceMgr;import MuonRPC_Cabling.MuonRPC_CablingConfig;ServiceMgr.MuonRPC_CablingSvc.RPCTriggerRoadsfromCool=False' --postInclude 'default:RecJobTransforms/UseFrontier.py' --preExec 'all:rec.Commissioning.set_Value_and_Lock(True);from AthenaCommon.BeamFlags import jobproperties;jobproperties.Beam.numberOfCollisions.set_Value_and_Lock(40.0);from LArROD.LArRODFlags import larRODFlags;larRODFlags.NumberOfCollisions.set_Value_and_Lock(40);larRODFlags.nSamples.set_Value_and_Lock(4);larRODFlags.doOFCPileupOptimization.set_Value_and_Lock(True);larRODFlags.firstSample.set_Value_and_Lock(0);larRODFlags.useHighestGainAutoCorr.set_Value_and_Lock(True)' 'RAWtoESD:from CaloRec.CaloCellFlags import jobproperties;jobproperties.CaloCellFlags.doLArCellEmMisCalib=False;from TriggerJobOpts.TriggerFlags import TriggerFlags;TriggerFlags.triggerMenuSetup="MC_pp_v6_tight_mc_prescale"' 'ESDtoAOD:TriggerFlags.AODEDMSet="AODSLIM"' 'HITtoRDO:userRunLumiOverride={"run":222525, "startmu":80.0, "endmu":81.0, "stepmu":1.0, "startlb":1, "timestamp": 1376703331}'  --numberOfCavernBkg '0' --preInclude 'HITtoRDO:Digitization/ForceUseOfPileUpTools.py,SimulationJobOptions/preInclude.PileUpBunchTrainsMC15_2015_25ns_Config1.py,RunDependentSimData/configLumi_muRange.py'  --mts ESD:0 --steering "RAWtoESD:in-RDO,in+RDO_TRIG,in-BS" | tee  __log.txt; 
	  echo $? &gt;  __exitcode ; 
	  touch __done ;
	  grep  -i "Digi_tf" jobReport.txt  | head -n1 | awk -F\" '{print $2}' &gt; __command.sh;
	  for f in ntuple*.pmon.gz; do if [ -f "$f" ]; then tar xf $f "*.pmonsd.*" ; fi; done ; 
	  export userJobId="fullchain_mc15_ttbar_valid_13tev_25ns_mu80"; 
	  export headDir="/afs/cern.ch/atlas/project/pmb/new_pmb/archive/custom";
	  export OutputDestination=${headDir}/`date +'%d/%m/%Y'`/`basename ${ATLAS_RELEASE_BASE}`/`basename $ROOTSYS`/${userJobId}; 
	  checkxAOD.py myRDO.pool.root &gt; myRDO.pool.root.checkfile.txt ; 
	  checkxAOD.py myESD.pool.root &gt; myESD.pool.root.checkfile.txt ; 
	  checkxAOD.py myAOD.pool.root &gt; myAOD.pool.root.checkfile.txt ;  
	  gzip *txt; 
	  mkdir -p                       ${OutputDestination} ; 
	  rsync -avz ntuple*             ${OutputDestination}/. ; 
	  rsync -avz __*                 ${OutputDestination}/. ; 
	  rsync -avz *.checkfile.txt.gz  ${OutputDestination}/. ; 
	</jobTransformCmd>
	<group>TrfRecPerf</group>
	<queue>atlasrttperf</queue>
      </jobTransform>

      <jobTransform userJobId="fullchain_mc15_ttbar_valid_13tev_25ns_mu100">
	<doc>Full chain (MC15 production setup)</doc>
	<jobTransformJobName>fullchain_mc15_ttbar_valid_13tev_25ns_mu100</jobTransformJobName>
	<jobTransformCmd>
	  export TRF_ECHO=1; xrdcp root://eosatlas//eos/atlas/atlascerngroupdisk/proj-sit/digitization/RTT/ReferenceFiles/$DigitizationTestsVersion/$CMTCONFIG/$DigitizationTestsCompFile DiffPool_Comp.pool.root; xrdcp root://eosatlas//eos/atlas/atlascerngroupdisk/proj-sit/digitization/RTT/mc15a/valid1.110401.PowhegPythia_P2012_ttbar_nonallhad.simul.HITS.e3099_s2578_tid04919495_00/HITS.04919495._001041.pool.root.1 HITS.04919495._001041.pool.root.1; LowPtMinbiasHitsFile="/eos/atlas/atlascerngroupdisk/proj-sit/digitization/RTT/mc15a/mc15_valid.361034.Pythia8EvtGen_A2MSTW2008LO_minbias_inelastic_low.merge.HITS.e3581_s2578_s2169_tid05098374_00/"; for file in `eos ls $LowPtMinbiasHitsFile`; do  xrdcp root://eosatlas/$LowPtMinbiasHitsFile/$file $file ; done; HighPtMinbiasHitsFile="/eos/atlas/atlascerngroupdisk/proj-sit/digitization/RTT/mc15a/mc15_valid.361035.Pythia8EvtGen_A2MSTW2008LO_minbias_inelastic_high.merge.HITS.e3581_s2578_s2169_tid05098387_00/"; for file in `eos ls $HighPtMinbiasHitsFile | grep 00067`; do  xrdcp root://eosatlas/$HighPtMinbiasHitsFile/$file $file ; done; Reco_tf.py --inputHITSFile HITS.04919495.*.pool.root.? --conditionsTag 'default:OFLCOND-RUN12-SDR-31' --conditionsTag 'default:OFLCOND-RUN12-SDR-31' --digiSeedOffset1 170 --digiSeedOffset2 170  --geometryVersion 'default:ATLAS-R2-2015-03-01-00'  --inputHighPtMinbiasHitsFile HITS.05098387.*.pool.root.? --inputLowPtMinbiasHitsFile HITS.05098374.*.pool.root.?  --jobNumber 1 --maxEvents 100 --numberOfCavernBkg="0" --numberOfHighPtMinBias '0.306701424463' --numberOfLowPtMinBias '99.6932985755'  --outputAODFile="myAOD.pool.root" --outputESDFile="myESD.pool.root" --outputESDFile="myRDO.pool.root"  --pileupFinalBunch '6' --postExec 'all:CfgMgr.MessageSvc().setError+=["HepMcParticleLink"]' 'HITtoRDO:job.StandardPileUpToolsAlg.PileUpTools["MergeMcEventCollTool"].OnlySaveSignalTruth=True;job.StandardPileUpToolsAlg.PileUpTools["MdtDigitizationTool"].LastXing=150' 'RDOtoRDOTrigger:from AthenaCommon.AlgSequence import AlgSequence;AlgSequence().LVL1TGCTrigger.TILEMU=True;from AthenaCommon.AppMgr import ServiceMgr;import MuonRPC_Cabling.MuonRPC_CablingConfig;ServiceMgr.MuonRPC_CablingSvc.RPCTriggerRoadsfromCool=False' --postInclude 'default:RecJobTransforms/UseFrontier.py' --preExec 'all:rec.Commissioning.set_Value_and_Lock(True);from AthenaCommon.BeamFlags import jobproperties;jobproperties.Beam.numberOfCollisions.set_Value_and_Lock(40.0);from LArROD.LArRODFlags import larRODFlags;larRODFlags.NumberOfCollisions.set_Value_and_Lock(40);larRODFlags.nSamples.set_Value_and_Lock(4);larRODFlags.doOFCPileupOptimization.set_Value_and_Lock(True);larRODFlags.firstSample.set_Value_and_Lock(0);larRODFlags.useHighestGainAutoCorr.set_Value_and_Lock(True)' 'RAWtoESD:from CaloRec.CaloCellFlags import jobproperties;jobproperties.CaloCellFlags.doLArCellEmMisCalib=False;from TriggerJobOpts.TriggerFlags import TriggerFlags;TriggerFlags.triggerMenuSetup="MC_pp_v6_tight_mc_prescale"' 'ESDtoAOD:TriggerFlags.AODEDMSet="AODSLIM"' 'HITtoRDO:userRunLumiOverride={"run":222525, "startmu":100.0, "endmu":101.0, "stepmu":1.0, "startlb":1, "timestamp": 1376703331}'  --numberOfCavernBkg '0' --preInclude 'HITtoRDO:Digitization/ForceUseOfPileUpTools.py,SimulationJobOptions/preInclude.PileUpBunchTrainsMC15_2015_25ns_Config1.py,RunDependentSimData/configLumi_muRange.py'  --mts ESD:0 --steering "RAWtoESD:in-RDO,in+RDO_TRIG,in-BS" | tee  __log.txt; 
	  echo $? &gt;  __exitcode ; 
	  touch __done ;
	  grep  -i "Digi_tf" jobReport.txt  | head -n1 | awk -F\" '{print $2}' &gt; __command.sh;
	  for f in ntuple*.pmon.gz; do if [ -f "$f" ]; then tar xf $f "*.pmonsd.*" ; fi; done ; 
	  export userJobId="fullchain_mc15_ttbar_valid_13tev_25ns_mu100"; 
	  export headDir="/afs/cern.ch/atlas/project/pmb/new_pmb/archive/custom";
	  export OutputDestination=${headDir}/`date +'%d/%m/%Y'`/`basename ${ATLAS_RELEASE_BASE}`/`basename $ROOTSYS`/${userJobId}; 
	  checkxAOD.py myRDO.pool.root &gt; myRDO.pool.root.checkfile.txt ; 
	  checkxAOD.py myESD.pool.root &gt; myESD.pool.root.checkfile.txt ; 
	  checkxAOD.py myAOD.pool.root &gt; myAOD.pool.root.checkfile.txt ;  
	  gzip *txt; 
	  mkdir -p                       ${OutputDestination} ; 
	  rsync -avz ntuple*             ${OutputDestination}/. ; 
	  rsync -avz __*                 ${OutputDestination}/. ; 
	  rsync -avz *.checkfile.txt.gz  ${OutputDestination}/. ; 
	</jobTransformCmd>
	<group>TrfRecPerf</group>
	<queue>atlasrttperf</queue>
      </jobTransform>


      <jobTransform userJobId="combined_reco_mc15_ttbar_valid_13tev_25ns_mu40">
	<doc>Reco_tf runs on 13TeV collision mc ttbar 25 ns mu40</doc>
	<jobTransformJobName>combined_reco_mc15_ttbar_valid_13tev_25ns_mu40</jobTransformJobName>
	<jobTransformCmd>
	  export TRF_ECHO=1; Reco_tf.py --inputRDOFile root://eosatlas//eos/atlas/user/a/atlaspmb/mc/mc15_13TeV.110401.PowhegPythia_P2012_ttbar_nonallhad.recon.RDO.e4032_s2608_s2183_r7011/RDO.06336725._000001.pool.root.1 --maxEvents 100 --outputESDFile myESD.pool.root --outputAODFile myAOD.pool.root --preExec='from PerfMonComps.PerfMonFlags import jobproperties as pmjp;pmjp.PerfMonFlags.doPostProcessing=True;pmjp.PerfMonFlags.doSemiDetailedMonitoringFullPrint=True;rec.doTrigger=False;'  --conditionsTag "default:OFLCOND-RUN12-SDR-31" | tee  __log.txt; 
	  echo $? &gt;  __exitcode ; 
	  touch __done ;
	  grep  -i "Reco_tf" jobReport.txt  | head -n1 | awk -F\" '{print $2}' &gt; __command.sh;
	  for f in ntuple*.pmon.gz; do if [ -f "$f" ]; then tar xf $f "*.pmonsd.*" ; fi; done ; 
	  checkxAOD.py myESD.pool.root &gt; myESD.pool.root.checkfile.txt ; 
	  checkxAOD.py myAOD.pool.root &gt; myAOD.pool.root.checkfile.txt ;  
	  export userJobId="combined_reco_mc15_ttbar_valid_13tev_25ns_mu40"; 
	  export headDir="/afs/cern.ch/atlas/project/pmb/new_pmb/archive/custom";
	  export OutputDestination=${headDir}/`date +'%d/%m/%Y'`/`basename ${ATLAS_RELEASE_BASE}`/`basename $ROOTSYS`/${userJobId}; 
	  gzip *txt; 
	  mkdir -p                       ${OutputDestination} ; 
	  rsync -avz ntuple*             ${OutputDestination}/. ; 
	  rsync -avz __*                 ${OutputDestination}/. ; 
	  rsync -avz *.checkfile.txt.gz  ${OutputDestination}/. ; 
	</jobTransformCmd>
	<group>TrfRecPerf</group>
	<queue>atlasrttperf</queue>
      </jobTransform>


      <jobTransform userJobId="combined_reco_mc15_ttbar_valid_13tev_25ns_mu60">
	<doc>Reco_tf runs on 13TeV collision mc ttbar 25 ns mu60</doc>
	<jobTransformJobName>combined_reco_mc15_ttbar_valid_13tev_25ns_mu60</jobTransformJobName>
	<jobTransformCmd>
	  export TRF_ECHO=1; Reco_tf.py --inputRDOFile root://eosatlas//eos/atlas/user/a/atlaspmb/mc/mc15_13TeV.110401.PowhegPythia_P2012_ttbar_nonallhad.recon.RDO.e4032_s2608_s2183_r7012/RDO.06336732._000003.pool.root.1 --maxEvents 100 --outputESDFile myESD.pool.root --outputAODFile myAOD.pool.root --preExec='from PerfMonComps.PerfMonFlags import jobproperties as pmjp;pmjp.PerfMonFlags.doPostProcessing=True;pmjp.PerfMonFlags.doSemiDetailedMonitoringFullPrint=True;rec.doTrigger=False;'  --conditionsTag "default:OFLCOND-RUN12-SDR-31" | tee  __log.txt; 
	  echo $? &gt;  __exitcode ; 
	  touch __done ;
	  grep  -i "Reco_tf" jobReport.txt  | head -n1 | awk -F\" '{print $2}' &gt; __command.sh;
	  for f in ntuple*.pmon.gz; do if [ -f "$f" ]; then tar xf $f "*.pmonsd.*" ; fi; done ; 
	  checkxAOD.py myESD.pool.root &gt; myESD.pool.root.checkfile.txt ; 
	  checkxAOD.py myAOD.pool.root &gt; myAOD.pool.root.checkfile.txt ;  
	  export userJobId="combined_reco_mc15_ttbar_valid_13tev_25ns_mu60"; 
	  export headDir="/afs/cern.ch/atlas/project/pmb/new_pmb/archive/custom";
	  export OutputDestination=${headDir}/`date +'%d/%m/%Y'`/`basename ${ATLAS_RELEASE_BASE}`/`basename $ROOTSYS`/${userJobId}; 
	  gzip *txt; 
	  mkdir -p                       ${OutputDestination} ; 
	  rsync -avz ntuple*             ${OutputDestination}/. ; 
	  rsync -avz __*                 ${OutputDestination}/. ; 
	  rsync -avz *.checkfile.txt.gz  ${OutputDestination}/. ; 
	</jobTransformCmd>
	<group>TrfRecPerf</group>
	<queue>atlasrttperf</queue>
      </jobTransform>


      <jobTransform userJobId="combined_reco_mc15_ttbar_valid_13tev_25ns_mu80">
	<doc>Reco_tf runs on 13TeV collision mc ttbar 25 ns mu80</doc>
	<jobTransformJobName>combined_reco_mc15_ttbar_valid_13tev_25ns_mu80</jobTransformJobName>
	<jobTransformCmd>
	  export TRF_ECHO=1; Reco_tf.py --inputRDOFile  root://eosatlas//eos/atlas/user/a/atlaspmb/mc/mc15_13TeV.110401.PowhegPythia_P2012_ttbar_nonallhad.recon.RDO.e4032_s2608_s2183_r7013/RDO.06336738._000001.pool.root.1 --maxEvents 100 --outputESDFile myESD.pool.root --outputAODFile myAOD.pool.root --preExec='from PerfMonComps.PerfMonFlags import jobproperties as pmjp;pmjp.PerfMonFlags.doPostProcessing=True;pmjp.PerfMonFlags.doSemiDetailedMonitoringFullPrint=True;rec.doTrigger=False;'  --conditionsTag "default:OFLCOND-RUN12-SDR-31" | tee  __log.txt; 
	  echo $? &gt;  __exitcode ; 
	  touch __done ;
	  grep  -i "Reco_tf" jobReport.txt  | head -n1 | awk -F\" '{print $2}' &gt; __command.sh;
	  for f in ntuple*.pmon.gz; do if [ -f "$f" ]; then tar xf $f "*.pmonsd.*" ; fi; done ; 
	  checkxAOD.py myESD.pool.root &gt; myESD.pool.root.checkfile.txt ; 
	  checkxAOD.py myAOD.pool.root &gt; myAOD.pool.root.checkfile.txt ;  
	  export userJobId="combined_reco_mc15_ttbar_valid_13tev_25ns_mu80"; 
	  export headDir="/afs/cern.ch/atlas/project/pmb/new_pmb/archive/custom";
	  export OutputDestination=${headDir}/`date +'%d/%m/%Y'`/`basename ${ATLAS_RELEASE_BASE}`/`basename $ROOTSYS`/${userJobId}; 
	  gzip *txt; 
	  mkdir -p                       ${OutputDestination} ; 
	  rsync -avz ntuple*             ${OutputDestination}/. ; 
	  rsync -avz __*                 ${OutputDestination}/. ; 
	  rsync -avz *.checkfile.txt.gz  ${OutputDestination}/. ; 
	</jobTransformCmd>
	<group>TrfRecPerf</group>
	<queue>atlasrttperf</queue>
      </jobTransform>


      <jobTransform userJobId="combined_reco_mc15_ttbar_valid_13tev_25ns_mu100">
	<doc>Reco_tf runs on 13TeV collision mc ttbar 25 ns mu100</doc>
	<jobTransformJobName>combined_reco_mc15_ttbar_valid_13tev_25ns_mu100</jobTransformJobName>
	<jobTransformCmd>
	  export TRF_ECHO=1; Reco_tf.py --inputRDOFile root://eosatlas//eos/atlas/user/a/atlaspmb/mc/mc15_13TeV.110401.PowhegPythia_P2012_ttbar_nonallhad.recon.RDO.e4032_s2608_s2183_r7014/RDO.06336745._000002.pool.root.1 --maxEvents 100 --outputESDFile myESD.pool.root --outputAODFile myAOD.pool.root --preExec='from PerfMonComps.PerfMonFlags import jobproperties as pmjp;pmjp.PerfMonFlags.doPostProcessing=True;pmjp.PerfMonFlags.doSemiDetailedMonitoringFullPrint=True;rec.doTrigger=False;'  --conditionsTag "default:OFLCOND-RUN12-SDR-31" | tee  __log.txt; 
	  echo $? &gt;  __exitcode ; 
	  touch __done ;
	  grep  -i "Reco_tf" jobReport.txt  | head -n1 | awk -F\" '{print $2}' &gt; __command.sh;
	  for f in ntuple*.pmon.gz; do if [ -f "$f" ]; then tar xf $f "*.pmonsd.*" ; fi; done ; 
	  checkxAOD.py myESD.pool.root &gt; myESD.pool.root.checkfile.txt ; 
	  checkxAOD.py myAOD.pool.root &gt; myAOD.pool.root.checkfile.txt ;  
	  export userJobId="combined_reco_mc15_ttbar_valid_13tev_25ns_mu100"; 
	  export headDir="/afs/cern.ch/atlas/project/pmb/new_pmb/archive/custom";
	  export OutputDestination=${headDir}/`date +'%d/%m/%Y'`/`basename ${ATLAS_RELEASE_BASE}`/`basename $ROOTSYS`/${userJobId}; 
	  gzip *txt; 
	  mkdir -p                       ${OutputDestination} ; 
	  rsync -avz ntuple*             ${OutputDestination}/. ; 
	  rsync -avz __*                 ${OutputDestination}/. ; 
	  rsync -avz *.checkfile.txt.gz  ${OutputDestination}/. ; 
	</jobTransformCmd>
	<group>TrfRecPerf</group>
	<queue>atlasrttperf</queue>
      </jobTransform>



    
    </jobList>

    <jobGroups>
      <jobGroup name="TrfRecPerf" parent="Transform">
	<!-- keep everything which is not huge -->
	<keepFilePattern>*.checkfile.txt</keepFilePattern>
	<keepFilePattern>*.pmon.gz</keepFilePattern>
	<keepFilePattern>*log*</keepFilePattern>
	<keepFilePattern>*exitcode*</keepFilePattern>
	<keepFilePattern>*checkfile*</keepFilePattern>
	<keepFilePattern>*.xml</keepFilePattern>
	<keepFilePattern>*.py</keepFilePattern>
	<keepFilePattern>*.pdf</keepFilePattern>
	<keepFilePattern>*.txt</keepFilePattern>
	<keepFilePattern>*.png</keepFilePattern>
	<keepFilePattern>*.out</keepFilePattern>
	<keepFilePattern>*.ascii</keepFilePattern>
	<keepFilePattern>last*</keepFilePattern>
	<keepFilePattern>*pickle</keepFilePattern>
	<keepFilePattern>jobReport*</keepFilePattern>
	<keepFilePattern>runargs*</keepFilePattern>
	<keepFilePattern>ntuple*perfmon*</keepFilePattern>
	<keepFilePattern>pmb-callgrind*log</keepFilePattern>
	<keepFilePattern>callgrind*bz2</keepFilePattern>
	<keepFilePattern>log.RAWtoESD</keepFilePattern>
	<keepFilePattern>log.ESDtoAOD</keepFilePattern>
	<keepFilePattern>log.AODtoDAOD</keepFilePattern>

      </jobGroup>
      
    </jobGroups>
    
  </rtt>
</unifiedTestConfiguration>
