<?xml version="1.0"?>
<!DOCTYPE unifiedTestConfiguration SYSTEM "http://www.hep.ucl.ac.uk/atlas/AtlasTesting/DTD/unifiedTestConfiguration.dtd">

<unifiedTestConfiguration>
  <atn>
  </atn>
  <kv>
  </kv>

  <rtt xmlns="http://www.hep.ucl.ac.uk/atlas/AtlasTesting/rtt">

    <rttContactPerson>Antonio Limosani (antonio.limosani@cern.ch)</rttContactPerson>
    <refRelease>15.5.0</refRelease>

    <jobList>

      <classification>
        <displayClass>OfflineValidation</displayClass>
        <displayProcess>Reco</displayProcess>
        <displayComponent>Det-Combined</displayComponent>
      </classification>



      <jobTransform userJobId="rtt_generation_mc15_pythia8evtgen_a14nnpdf23lo_jetjet_jz6w_13tev">
	<doc>Event generation (MC15 production setup)</doc>
	<jobTransformJobName>rtt_generation_mc15_pythia8evtgen_a14nnpdf23lo_jetjet_jz6w_13tev</jobTransformJobName>
	<jobTransformCmd>
	  export TRF_ECHO=1;
	  Generate_tf.py --jobConfig=MC15JobOptions/MC15.361026.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ6W.py --ecmEnergy=13000 --evgenJobOpts=MC15JobOpts-00-00-13_v1.tar.gz --firstEvent=1090001 --outputEVNTFile=myEVNT.pool.root --maxEvents 250 --randomSeed 1091 --runNumber=361026 --skipEvents=1090000 --preExec='from PerfMonComps.PerfMonFlags import jobproperties as pmjp;pmjp.PerfMonFlags.doPostProcessing=True;pmjp.PerfMonFlags.doSemiDetailedMonitoringFullPrint=True' | tee  __log.txt; 
	  echo $? &gt;  __exitcode ; 
	  touch __done ;
	  grep  -i "Generate_tf" jobReport.txt  | head -n1 | awk -F\" '{print $2}' &gt; __command.sh;
	  for f in ntuple*.pmon.gz; do if [ -f "$f" ]; then tar xf $f "*.pmonsd.*" ; fi; done ; 
	  checkxAOD.py myEVNT.pool.root &gt; myEVNT.pool.root.checkfile.txt ;
	  export userJobId="rtt_generation_mc15_pythia8evtgen_a14nnpdf23lo_jetjet_jz6w_13tev"; 
	  export headDir="/afs/cern.ch/atlas/project/pmb/new_pmb/archive/custom";
	  export OutputDestination=${headDir}/`date +'%d/%m/%Y'`/`basename ${ATLAS_RELEASE_BASE}`/`basename $ROOTSYS`/${userJobId}; 
	  perl -pi -e "s/leakperevt_evt11to50/leakperevt_evt11to100/g;" __log.txt
	  perl -pi -e "s/leakperevt_evt51plus/leakperevt_evt101plus/g;" __log.txt
	  gzip *txt; 
	  mkdir -p                       ${OutputDestination} ; 
	  rsync -avz ntuple*             ${OutputDestination}/. ; 
	  rsync -avz __*                 ${OutputDestination}/. ; 
	  rsync -avz *.checkfile.txt.gz  ${OutputDestination}/. ; 
	</jobTransformCmd>
	<group>TrfRecPerf</group>
	<queue>atlasrttperf</queue>
      </jobTransform>


      <jobTransform userJobId="rtt_simulation_mc_ttbarmuplusjets_7tev">
	<doc>Full Geant4 simulation (MC12 production setup)</doc>
	<jobTransformJobName>rtt_simulation_mc_ttbarmuplusjets_7tev</jobTransformJobName>
	<jobTransformCmd>
	  export TRF_ECHO=1;
 Sim_tf.py --inputEVNTFile root://eosatlas//eos/atlas/user/a/atlaspmb/mc/simulation/16.6.7.Y/ttbar_muplusjets-pythia6-7000.evgen.pool.root --maxEvents=15  --athenaopts=' --pmon=sdmonfp' --outputHITSFile myHITS.pool.root --DataRunNumber=222525 --simulator=MC12G4 --randomSeed=0 --enableLooperKiller=True --skipEvents=0 --geometryVersion='ATLAS-R2-2015-02-01-00_VALIDATION' --conditionsTag='OFLCOND-RUN12-SDR-21'  | tee  __log.txt; 
	  echo $? &gt;  __exitcode ; 
	  touch __done ;
	  grep  -i "Sim_tf" jobReport.txt  | head -n1 | awk -F\" '{print $2}' &gt; __command.sh;
	  for f in ntuple*.pmon.gz; do if [ -f "$f" ]; then tar xf $f "*.pmonsd.*" ; fi; done ; 
	  checkxAOD.py myHITS.pool.root &gt; myHITS.pool.root.checkfile.txt ;
	  export userJobId="rtt_simulation_mc_ttbarmuplusjets_7tev"; 
	  export headDir="/afs/cern.ch/atlas/project/pmb/new_pmb/archive/custom";
	  export OutputDestination=${headDir}/`date +'%d/%m/%Y'`/`basename ${ATLAS_RELEASE_BASE}`/`basename $ROOTSYS`/${userJobId}; 
	  perl -pi -e "s/leakperevt_evt11to50/leakperevt_evt11to100/g;" __log.txt
	  perl -pi -e "s/leakperevt_evt51plus/leakperevt_evt101plus/g;" __log.txt
	  gzip *txt; 
	  mkdir -p                       ${OutputDestination} ; 
	  rsync -avz ntuple*             ${OutputDestination}/. ; 
	  rsync -avz __*                 ${OutputDestination}/. ; 
	  rsync -avz *.checkfile.txt.gz  ${OutputDestination}/. ; 
	</jobTransformCmd>
	<group>TrfRecPerf</group>
	<queue>atlasrttperf</queue>
      </jobTransform>


   </jobList>

    <jobGroups>

      <jobGroup name="TrfRecPerf" parent="Transform">
	<!-- keep everything which is not huge -->
	<keepFilePattern>*.checkfile.txt</keepFilePattern>
	<keepFilePattern>*.pmon.gz</keepFilePattern>
	<keepFilePattern>*log*</keepFilePattern>
	<keepFilePattern>*exitcode*</keepFilePattern>
	<keepFilePattern>*checkfile*</keepFilePattern>
	<keepFilePattern>*.xml</keepFilePattern>
	<keepFilePattern>*.py</keepFilePattern>
	<keepFilePattern>*.pdf</keepFilePattern>
	<keepFilePattern>*.txt</keepFilePattern>
	<keepFilePattern>*.png</keepFilePattern>
	<keepFilePattern>*.out</keepFilePattern>
	<keepFilePattern>*.ascii</keepFilePattern>
	<keepFilePattern>last*</keepFilePattern>
	<keepFilePattern>*pickle</keepFilePattern>
	<keepFilePattern>jobReport*</keepFilePattern>
	<keepFilePattern>runargs*</keepFilePattern>
	<keepFilePattern>ntuple*perfmon*</keepFilePattern>
	<keepFilePattern>pmb-callgrind*log</keepFilePattern>
	<keepFilePattern>callgrind*bz2</keepFilePattern>
	<keepFilePattern>log.EVNTtoHIT</keepFilePattern>
	<keepFilePattern>log.RAWtoESD</keepFilePattern>
	<keepFilePattern>log.ESDtoAOD</keepFilePattern>
	<keepFilePattern>log.AODtoDAOD</keepFilePattern>
      </jobGroup>



    </jobGroups>

  </rtt>
</unifiedTestConfiguration>
