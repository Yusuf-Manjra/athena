#!/bin/bash

# -1. : all flags off               rec.doInDet=False;rec.doCalo=False;rec.doMuon=False;rec.doForwardDet=False;rec.doMuonCombined=False;rec.doJetMissingETTag=False;rec.doEgamma=False;rec.doTau=False;rec.doTrigger=False
#  1. : onlyIndet                   rec.doInDet=True;rec.doCalo=False;rec.doMuon=False;rec.doForwardDet=False;rec.doMuonCombined=False;rec.doJetMissingETTag=False;rec.doEgamma=False;rec.doTau=False;rec.doTrigger=False
#  2. : onlyCalo                    rec.doInDet=False;rec.doCalo=True;rec.doMuon=False;rec.doForwardDet=False;rec.doMuonCombined=False;rec.doJetMissingETTag=False;rec.doEgamma=False;rec.doTau=False;rec.doTrigger=False
#  3. : onlyMuon                    rec.doInDet=False;rec.doCalo=False;rec.doMuon=True;rec.doForwardDet=False;rec.doMuonCombined=False;rec.doJetMissingETTag=False;rec.doEgamma=False;rec.doTau=False;rec.doTrigger=False
#  4. : onlyForwarddet              rec.doInDet=False;rec.doCalo=False;rec.doMuon=False;rec.doForwardDet=True;rec.doMuonCombined=False;rec.doJetMissingETTag=False;rec.doEgamma=False;rec.doTau=False;rec.doTrigger=False
#  5. : allDet                      rec.doInDet=True;rec.doCalo=True;rec.doMuon=True;rec.doForwardDet=True;rec.doMuonCombined=False;rec.doJetMissingETTag=False;rec.doEgamma=False;rec.doTau=False;rec.doTrigger=False
#  6. : allDetMc                    rec.doInDet=True;rec.doCalo=True;rec.doMuon=True;rec.doForwardDet=True;rec.doMuonCombined=True;rec.doJetMissingETTag=False;rec.doEgamma=False;rec.doTau=False;rec.doTrigger=False
#  7. : allDetMcJmet                rec.doInDet=True;rec.doCalo=True;rec.doMuon=True;rec.doForwardDet=True;rec.doMuonCombined=True;rec.doJetMissingETTag=True;rec.doEgamma=False;rec.doTau=False;rec.doTrigger=False
#  8. : allDetMcJmetEgam            rec.doInDet=True;rec.doCalo=True;rec.doMuon=True;rec.doForwardDet=True;rec.doMuonCombined=True;rec.doJetMissingETTag=True;rec.doEgamma=True;rec.doTau=False;rec.doTrigger=False
#  9. : allDetMcJmetEgamTau         rec.doInDet=True;rec.doCalo=True;rec.doMuon=True;rec.doForwardDet=True;rec.doMuonCombined=True;rec.doJetMissingETTag=True;rec.doEgamma=True;rec.doTau=True;rec.doTrigger=False
# 10. : notrigger                   rec.doTrigger=False

# fill arrays
preExecOptions[ 1]="rec.doInDet=True;rec.doCalo=False;rec.doMuon=False;rec.doForwardDet=False;rec.doMuonCombined=False;rec.doJetMissingETTag=False;rec.doEgamma=False;rec.doTau=False;rec.doTrigger=False;rec.doPerfMon=False"
preExecOptions[ 2]="rec.doInDet=False;rec.doCalo=True;rec.doMuon=False;rec.doForwardDet=False;rec.doMuonCombined=False;rec.doJetMissingETTag=False;rec.doEgamma=False;rec.doTau=False;rec.doTrigger=False;rec.doPerfMon=False"
preExecOptions[ 3]="rec.doInDet=False;rec.doCalo=False;rec.doMuon=True;rec.doForwardDet=False;rec.doMuonCombined=False;rec.doJetMissingETTag=False;rec.doEgamma=False;rec.doTau=False;rec.doTrigger=False;rec.doPerfMon=False"
preExecOptions[ 4]="rec.doInDet=False;rec.doCalo=False;rec.doMuon=False;rec.doForwardDet=True;rec.doMuonCombined=False;rec.doJetMissingETTag=False;rec.doEgamma=False;rec.doTau=False;rec.doTrigger=False;rec.doPerfMon=False"
preExecOptions[ 5]="rec.doInDet=True;rec.doCalo=True;rec.doMuon=True;rec.doForwardDet=True;rec.doMuonCombined=False;rec.doJetMissingETTag=False;rec.doEgamma=False;rec.doTau=False;rec.doTrigger=False;rec.doPerfMon=False"
preExecOptions[ 6]="rec.doInDet=True;rec.doCalo=True;rec.doMuon=True;rec.doForwardDet=True;rec.doMuonCombined=True;rec.doJetMissingETTag=False;rec.doEgamma=False;rec.doTau=False;rec.doTrigger=False;rec.doPerfMon=False"
preExecOptions[ 7]="rec.doInDet=True;rec.doCalo=True;rec.doMuon=True;rec.doForwardDet=True;rec.doMuonCombined=True;rec.doJetMissingETTag=True;rec.doEgamma=False;rec.doTau=False;rec.doTrigger=False;rec.doPerfMon=False"
preExecOptions[ 8]="rec.doInDet=True;rec.doCalo=True;rec.doMuon=True;rec.doForwardDet=True;rec.doMuonCombined=True;rec.doJetMissingETTag=True;rec.doEgamma=True;rec.doTau=False;rec.doTrigger=False;rec.doPerfMon=False"
preExecOptions[ 9]="rec.doInDet=True;rec.doCalo=True;rec.doMuon=True;rec.doForwardDet=True;rec.doMuonCombined=True;rec.doJetMissingETTag=True;rec.doEgamma=True;rec.doTau=True;rec.doTrigger=False;rec.doPerfMon=False"
preExecOptions[10]="rec.doTrigger=False;rec.doPerfMon=False"
preExecOptions[11]="rec.doTrigger=False;rec.doPerfMon=False;rec.doMonitoring.set_Value_and_Lock(True);from@AthenaMonitoring.DQMonFlags@import@DQMonFlags"

atnTestName[ 1]="onlyIndet"
atnTestName[ 2]="onlyCalo"
atnTestName[ 3]="onlyMuon"
atnTestName[ 4]="onlyForwarddet"
atnTestName[ 5]="allDet"
atnTestName[ 6]="allDetMc"
atnTestName[ 7]="allDetMcJmet"
atnTestName[ 8]="allDetMcJmetEgam"
atnTestName[ 9]="allDetMcJmetEgamTau"
atnTestName[10]="noTrigMon"
atnTestName[11]="noTrig"

# prepare XML file
cat << EOF > new.xml
<?xml version="1.0"?>
<!DOCTYPE unifiedTestConfiguration SYSTEM "http://www.hep.ucl.ac.uk/atlas/AtlasTesting/DTD/unifiedTestConfiguration.dtd">

<unifiedTestConfiguration>

<atn>
  
EOF

for sample in q121 q122
do

# first test is run all (incl monitoring)
cat << EOF >> new.xml
  <TEST name="reco_cfg_check_all_$sample" type="script" suite="reco_cfg_all_$sample">
    <options_atn> 
      \${ATN_PACKAGE}/atn_scripts/wrapper_Reco_trf.sh AMI=$sample outputESDFile=myESD.pool.root autoConfiguration=everything append_preExec='rec.doPerfMon=False;rec.doMonitoring.set_Value_and_Lock(True);from@AthenaMonitoring.DQMonFlags@import@DQMonFlags' --athenaopts='-c os.system(\"touch myESD.pool.root\");sys.exit(0)'
    </options_atn>
    <timelimit>60</timelimit>
    <author>Rolf Seuster</author>
    <prescript>rm -f \$ATN_WORK_AREA/*</prescript>
    <expectations>
      <returnValue>0</returnValue>
    </expectations>
  </TEST>
  
EOF

echo ${#atnTestName[@]}

# for test in ${atnTestName[@]}
# do
#  echo $test
# done

refname=""
prename=""

for (( i = 1 ; i <= ${#atnTestName[@]} ; i++ ))
do
 name=`echo "${atnTestName[$i]}" | tr '[:upper:]' '[:lower:]'`
 echo ${atnTestName[$i]} $name
# echo ${preExecOptions[$i]}
 
 if (( "$i" < 6 )) ; then
     refname="all"
     prename="all"
 fi
 # if (( "$i" > 9 )) ; then
 #     refname="all"
 #     prename="all"
 # fi
cat << EOF >> new.xml
  <TEST name="reco_cfg_check_${atnTestName[$i]}_$sample" type="script" suite="reco_cfg_${atnTestName[$i]}_$sample">
    <options_atn> 
      \${ATN_PACKAGE}/atn_scripts/wrapper_Reco_trf.sh AMI=$sample outputESDFile=myESD.pool.root autoConfiguration=everything append_preExec='${preExecOptions[$i]}' --athenaopts='-c os.system(\"touch myESD.pool.root\");sys.exit(0)'
    </options_atn>
    <timelimit>60</timelimit>
    <author>Rolf Seuster</author>
    <prescript>rm -f \$ATN_WORK_AREA/*</prescript>
    <expectations>
      <returnValue>0</returnValue>
    </expectations>
  </TEST>
  
  <TEST name="cfg_check_${atnTestName[$i]}_$sample" type="script" suite="cfg_${atnTestName[$i]}_$sample">
    <options_atn>
      \${ATN_PACKAGE}/atn_scripts/wrapper_diff_cfg.sh -f \${ATN_WORK_AREA}/../recexconfigtest_testconfiguration_reco_cfg_${name}_${sample}_work/cfg_dup_report_jobo.py.pkl -r \${ATN_WORK_AREA}/../recexconfigtest_testconfiguration_reco_cfg_${refname}_${sample}_work/cfg_dup_report_jobo.py.pkl
    </options_atn>
    <timelimit>60</timelimit>
    <author>Rolf Seuster</author>
    <prerequisite>reco_cfg_${atnTestName[$i]}_$sample</prerequisite>
    <prerequisite>reco_cfg_${prename}_$sample</prerequisite>
    <prescript>rm -f \$ATN_WORK_AREA/*</prescript>
    <expectations>
      <returnValue>0</returnValue>
    </expectations>
  </TEST>

EOF

refname=$name
prename=${atnTestName[$i]}
done

done

cat << EOF >> new.xml
</atn>

</unifiedTestConfiguration>
EOF

exit 0
 
