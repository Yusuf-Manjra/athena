import AthenaPoolCnvSvc.ReadAthenaPool
from AthenaCommon.AthenaCommonFlags import athenaCommonFlags
from AthenaCommon.AppMgr import ServiceMgr
from AthenaCommon import CfgMgr

import METReconstruction.METConfig_Calo

from RecExConfig.RecFlags import rec
if rec.doTruth:
    import METReconstruction.METConfig_Truth

filelist = ["/afs/cern.ch/user/b/boliu/workdir/dataset/mc14_8TeV.117050.PowhegPythia_P2011C_ttbar.merge.AOD.e1727_s1933_s1911_r5591_r5625_tid01507243_00/AOD.01507243._011158.pool.root.1"]
ServiceMgr.EventSelector.InputCollections = filelist

# Set up default configurations
import METReconstruction.METConfig_Associator

#from METReconstruction.METRecoFlags import metFlags
from METReconstruction.METRecoConfig_Associator import getMETRecoAlg

# Get the configuration directly from METRecoFlags
# Can also provide a dict of configurations or list of RecoTools or both
metAlg = getMETRecoAlg('METReconstruction')
from AthenaCommon.AlgSequence import AlgSequence
topSequence = AlgSequence()
topSequence += metAlg

# The tools are accessible via the configurations in metFlags
from AthenaCommon.AppMgr import ToolSvc

from Valkyrie.JobOptCfg import ValgrindSvc
svcMgr += ValgrindSvc( OutputLevel = DEBUG,
                       ProfiledAlgs = ["METReconstruction"],
                       ProfiledIntervals = ["METReconstruction.execute"])

from PerfMonComps.PerfMonFlags import jobproperties as pmon_properties
pmon_properties.PerfMonFlags.doSemiDetailedMonitoring=True

write_xAOD = True
if write_xAOD:

    # The list of output containers/maps is autogenerated and stored in metFlags
    # This jO extracts them with the appropriate formatting
    from AthenaCommon.Resilience import protectedInclude
    protectedInclude("METReconstruction/METReconstructionOutputAODList_jobOptions.py")

    from OutputStreamAthenaPool.MultipleStreamManager import MSMgr
    xaodStream = MSMgr.NewPoolRootStream( "StreamAOD", "xAOD.pool.root" )
    for item in MissingETAODList:
        xaodStream.AddItem(item)

theApp.EvtMax = -1
ServiceMgr.EventSelector.SkipEvents = 0
