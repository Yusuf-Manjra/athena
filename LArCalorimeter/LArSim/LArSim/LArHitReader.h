/*
  Copyright (C) 2002-2020 CERN for the benefit of the ATLAS collaboration
*/

/* Generated by Together */

/* author : Johann Collot */

/* date of creation : 31/01/2001 */
/* modifications :                                                                              */
/*  10/06/2001 :                                                                                */
/*  13/09/2002 : corrections of comments                                                        */
/*  04/10/2002 : corrections of comments                                                        */

#ifndef LARHITREADER_H
#define LARHITREADER_H

#include <string>

#include "AthenaBaseComps/AthReentrantAlgorithm.h"
#include "LArSimEvent/LArHitContainer.h"
#include "StoreGate/ReadHandleKey.h"

class LArHitReader : public AthReentrantAlgorithm {

public:
    using AthReentrantAlgorithm::AthReentrantAlgorithm;
    /** Initialize method , executed once at the beginning <br> of the job execution by the control framework */
    virtual StatusCode initialize() override;

    /** execute() method executed for each event <br> by the LArHitMaker instance which owns <br> this producer */
    virtual StatusCode execute (const EventContext& ctx)  const override;

private:
    SG::ReadHandleKey<LArHitContainer> m_hitKey
    { this, "HitKey", "LArHitFake", "" };
    
};
#endif    //LARHITPRODUCER_H


