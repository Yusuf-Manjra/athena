package LArCalibUtils

author Sandrine Laplace <laplace@lapp.in2p3.fr>

use AtlasPolicy     AtlasPolicy-* 
use GaudiInterface  GaudiInterface-*     External
use StoreGate       StoreGate-*          Control
use AthenaKernel    AthenaKernel*        Control
use AthenaBaseComps     AthenaBaseComps-*       Control
use AtlasTBB 		AtlasTBB-* 		External

use LArRawEvent      LArRawEvent-*           LArCalorimeter 
use LArRawConditions LArRawConditions-*      LArCalorimeter
use LArCabling       LArCabling-)*        LArCalorimeter
use LArElecCalib     LArElecCalib-*       LArCalorimeter
use LArIdentifier    LArIdentifier-*      LArCalorimeter
use LArRawUtils      LArRawUtils-*        LArCalorimeter
use LArRecUtils      LArRecUtils-*        LArCalorimeter
use CaloIdentifier   CaloIdentifier-*     Calorimeter
use LArRecConditions LArRecConditions-*    LArCalorimeter

use Identifier       Identifier-*         DetectorDescription

use TBEvent          TBEvent-*            TestBeam

use AtlasROOT           AtlasROOT-*        External
use AtlasEigen       AtlasEigen-*         External

private
use AtlasCLHEP       AtlasCLHEP-*         External
use AtlasGSL            AtlasGSL-*          External
use AtlasCORAL          AtlasCORAL-*        External
use AthenaPoolUtilities  AthenaPoolUtilities-*  Database/AthenaPOOL
use xAODEventInfo       xAODEventInfo-*     Event/xAOD
use CaloDetDescr        CaloDetDescr-*      Calorimeter
use LArSimEvent         LArSimEvent-*       LArCalorimeter
use LArBadChannelTool   LArBadChannelTool-* LArCalorimeter
use LArCOOLConditions LArCOOLConditions-*      LArCalorimeter
use TrigAnalysisInterfaces TrigAnalysisInterfaces-* Trigger/TrigAnalysis

apply_tag ROOTMathLibs
apply_tag ROOTGraphicsLibs 
end_private

# Specify the required ROOT components for cmake (transparent to CMT)
apply_pattern cmake_add_command command="find_package(ROOT COMPONENTS Minuit)"

library  LArCalibUtils *.cxx components/*.cxx

apply_pattern component_library

apply_pattern declare_python_modules files="*.py"


# to be remove
#apply_pattern declare_runtime files="*.dat"
#apply_pattern dual_use_library files=*.cxx
#apply_pattern declare_joboptions files="*.txt *.py"



#private
#macro_append use_cppflags -ftemplate-depth-99

#
# uncomment to compile in debug mode
#
private
#macro cppdebugflags '$(cppdebugflags_s) -g '
#macro cppdebugflags '$(cppdebugflags_s)'
#macro_remove componentshr_linkopts "-Wl,-s"
