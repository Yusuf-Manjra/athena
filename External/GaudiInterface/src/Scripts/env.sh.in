# File:
#   GAUDI_env.sh
#
# Description:
#   GAUDI environment setup file for Bourne shell varients.
#
# Preconditions:
#   The following environment variables are expected to have been set:
#
#   ATLAS_EXTERNAL ATLAS external area (unless GAUDITOP overrides it)
#   ATLAS_SCRIPTS  ATLAS scripts area
#
# Authors:
#   Architecture Team members

s_error=
# Error handling if ATLAS_SCRIPTS isn't set
if [ "$ATLAS_SCRIPTS" = "" ]; then
    echo "GAUDI_env.sh: Error - ATLAS_SCRIPTS environment variable not set"
    s_error="error"
fi

# Error handling if OS isn't set
if [ "$OS" = "" ]; then
    echo "GAUDI_env.sh: Error - OS environment variable not set"
    s_error="error"
fi

# Error handling if SRT_CONF isn't set
if [ "$SRT_CONF" = "" ]; then
    echo "GAUDI_env.sh: Error - SRT_CONF environment variable not set"
    s_error="error"
fi

# Error handling if SITEROOT doesn't exist. Note that this environment variable
# is needed for the Python setup since that uses a Gaudi setup script.
if [ "$SITEROOT" = "" ]; then
    export SITEROOT=/afs/cern.ch
fi
if [ ! -r /afs/cern.ch ]; then
    echo "GAUDI_env.sh: Error - SITEROOT not set and default (/afs/cern.ch) non-existent"
    s_error="error"
fi

# Setup CMT platform configuration
case ${OS} in
    Solaris*)
        s_cmtconfig=sun4x_57
        s_rootconfig=sun4m_53
        s_cmttag=$s_cmtconfig
        ;;
    Linux*)
        s_cmtconfig=i386_linux22
        s_rootconfig=$s_cmtconfig
        case ${SRT_CONF} in
            egcs*)
                s_cmttag=$s_cmtconfig
                ;;
            gcc*)
                s_cmttag=Linux-2.95.2
                ;;
            *)
                echo "GAUDI_env.sh: Error - ${OS}/${SRT_CONF} is not supported"
                s_error="error"
        esac
        ;;
    *)
        echo "GAUDI_env.sh: Error - ${OS} is not supported"
        s_error="error"
esac

if [ "$GAUDITOP" = "" ]; then
    # Error handling if ATLAS_EXTERNAL isn't set
    if [ "$ATLAS_EXTERNAL" = "" ]; then
        echo "GAUDI_env.sh: Error - ATLAS_EXTERNAL environment variable not set"
        s_error="error"
    fi
    s_gauditop=$ATLAS_EXTERNAL/Gaudi/XXXGAUDI_VERSIONXXX
else
    s_gauditop=$GAUDITOP
    echo "GAUDI_env.sh: GAUDITOP overrides the default - set to $GAUDITOP"
fi
if [ "$s_error" = "" ]; then

    # No errors - setup the GAUDI libraries search path
    s_libs=$s_gauditop/Athena/XXXATHENA_PACKAGEXXX/$s_cmttag

    # Setup the ROOT libraries search path
    if [ "$ROOTTOP" = "" ]; then
        s_roottop=/afs/cern.ch/na49/library.4/ROOT/v2.25/$s_rootconfig/root/lib
    else
        s_roottop=$ROOTTOP
        echo "GAUDI_env.sh: ROOTTOP overrides the default - set to $ROOTTOP"
    fi
    s_libs=${s_libs}:${s_roottop}

    # Setup the shared library search path
    if [ "$LD_LIBRARY_PATH" = "" ]; then
        LD_LIBRARY_PATH=${s_libs}
    else
        LD_LIBRARY_PATH=${s_libs}:${LD_LIBRARY_PATH}
    fi
    export LD_LIBRARY_PATH

    # Setup the required Python search paths. Note that this requires that both
    # the CMTPATH and CMTSITE environment variables be setup appropriately.
    # In the case of CMTPATH it should be set to the location of the Gaudi
    # release (and restored to it's previous value). In the case of CMTSITE
    # it is set to the default of ATLAS if it isn't already set.
    s_oldpath=$CMTPATH
    export CMTPATH=$s_gauditop
    s_oldsite=$CMTSITE
    if [ "$CMTSITE" = "" ]; then
        export CMTSITE=ATLAS
    fi
    source $s_gauditop/SIPython/XXXSIPYTHON_PACKAGEXXX/cmt/setup.sh -tag=$s_cmttag

    # LHCXX_DIR is set in ExternalLibs and is not always correct - unset to be safe
    unset LHCXX_DIR

    CMTPATH=$s_oldpath
    CMTSITE=$s_oldsite

    # Remove duplicate entries from the library search path
    LD_LIBRARY_PATH=`$ATLAS_SCRIPTS/pathclean.pl LD_LIBRARY_PATH`
    export LD_LIBRARY_PATH
fi
