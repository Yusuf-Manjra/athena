
${dict_dir}/${CONSTITUENT}Dict.stamp :: ${dict_dir}/${CONSTITUENT}DictBegin.stamp ${dict_dir}/${dictionary}/${NAME}.xml.stamp
	@touch ${dict_dir}/${CONSTITUENT}Dict.stamp


${CONSTITUENT} ::  ${dict_dir}/${dictionary}/${NAME}.xml.stamp

${dict_dir}/${dictionary}/${NAME}.xml.stamp :: $(${NAME}_h_dependencies) $(reflex_dict${dictionary}_selection_file) ${dict_dir}/${CONSTITUENT}DictBegin.stamp
	@$(silent) echo $@ ${NAME}_gen.h
	@cat ${FULLNAME} >| ${dict_dir}/${dictionary}/${NAME}_gen.h
	@if test ! -z "${reflex_dict${dictionary}_navigables}" ; then \
	    class_list=`echo '$(reflex_dict${dictionary}_navigables)' | sed -e "s/[ ][ ]*/' '/g" -e "s/^/'/"  -e "s/$$/'/" -e "s/''//g"`; \
            echo "class_list = $${class_list}";\
	    for class_name in $${class_list} ; do  \
	        echo "  Add navigable: $${class_name} to dict header file" ; \
		TYPE=`echo $${class_name} | sed 's/[[:punct:]]/_/g'` ;	\
	        $(cmtexe) expand model "<NavigableDict.h namespace=$${TYPE} cont=$${class_name}/>" >> ${dict_dir}/${dictionary}/${NAME}_gen.h ; \
	        $(cmtexe) expand model "<ElementLinkDict.h namespace=$${TYPE} cont=$${class_name}/>" >> ${dict_dir}/${dictionary}/${NAME}_gen.h ; \
	        $(cmtexe) expand model "<DataLinkDict.h namespace=$${TYPE} cont=$${class_name}/>" >> ${dict_dir}/${dictionary}/${NAME}_gen.h ; \
	    done ; \
	fi 
	@if test ! -z "${reflex_dict${dictionary}_element_links}" ; then \
	    class_list=`echo '$(reflex_dict${dictionary}_element_links)' | sed -e "s/[ ][ ]*/' '/g" -e "s/^/'/"  -e "s/$$/'/" -e "s/''//g"`; \
	    for class_name in $${class_list} ; do  \
	        echo "  Add ElementLink & ElementLinkVector: $${class_name} to dict header file" ; \
		TYPE=`echo $${class_name} | sed 's/[[:punct:]]/_/g'` ;	\
	        $(cmtexe) expand model "<ElementLinkDict.h namespace=$${TYPE} cont=$${class_name}/>" >> ${dict_dir}/${dictionary}/${NAME}_gen.h ; \
	        $(cmtexe) expand model "<DataLinkDict.h namespace=$${TYPE} cont=$${class_name}/>" >> ${dict_dir}/${dictionary}/${NAME}_gen.h ; \
	    done ; \
	fi 
	@if test ! -z "${reflex_dict${dictionary}_data_links}" ; then \
	    class_list=`echo '$(reflex_dict${dictionary}_data_links)' | sed -e "s/[ ][ ]*/' '/g" -e "s/^/'/"  -e "s/$$/'/" -e "s/''//g"`; \
	    for class_name in $${class_list} ; do  \
	        echo "  Add DataLink: $${class_name} to dict header file" ; \
		TYPE=`echo $${class_name} | sed 's/[[:punct:]]/_/g'` ;	\
	        $(cmtexe) expand model "<DataLinkDict.h namespace=$${TYPE} cont=$${class_name}/>" >> ${dict_dir}/${dictionary}/${NAME}_gen.h ; \
	    done ; \
	fi
	@if test ! -z "$(gcc_user_flags)" ; then \
	    export  GCCXML_USER_FLAGS="$(gcc_user_flags)" ; \
	fi
        # using explicit dictionary source file name to work around root5.99 genreflex bug
	$(silent) $(genreflex_cmd) ${dict_dir}/${dictionary}/${NAME}_gen.h -o ${dict_dir}/${dictionary}/${NAME}_gen.cpp $(reflex_dict${dictionary}_options) ${munged_reflex_dict_options} ${genreflex_options} $(${dictionary}_reflex_dict_options)  $(includes) $(use_pp_cppflags) 
	@touch ${dict_dir}/${dictionary}/${NAME}.xml.stamp

