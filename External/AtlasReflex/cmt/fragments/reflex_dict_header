
${CONSTITUENT} : ${dict_dir}/${CONSTITUENT}DictEnd.stamp ;

${dict_dir}/${CONSTITUENT}DictReset.stamp : $(reflex_dict${dictionary}_selection_file) $(cmt_final_setup_${CONSTITUENT})
	$(echo) "----- RESET Dictionary selection.xml file generation for ${dictionary} -----"
	\rm -rf ${dict_dir}/${dictionary} && \rm -f ${dict_dir}/${dictionary}_selection.xml && mkdir -p ${dict_dir} && touch ${dict_dir}/${CONSTITUENT}DictReset.stamp

#Begin: create dir and first part of required files
${dict_dir}/${CONSTITUENT}DictBegin.stamp : ${dict_dir}/${CONSTITUENT}DictReset.stamp
	$(echo) "----- BEGIN Dictionary selection.xml file generation for ${dictionary} -----"
	if test ! -d ${dict_dir}/${dictionary} ; then mkdir -p ${dict_dir}/${dictionary}; fi
	$(echo) "  Copy $(reflex_dict${dictionary}_selection_file) to ${dict_dir}/${dictionary}_selection.xml "
	$(silent)grep -v "</lcgdict>" $(reflex_dict${dictionary}_selection_file) >| ${dict_dir}/${dictionary}_selection.xml
	@if test ! -z "${reflex_dict${dictionary}_navigables}" ; then \
	    class_list=`echo '$(reflex_dict${dictionary}_navigables)' | sed -e "s/[ ][ ]*/' '/g" -e "s/^/'/"  -e "s/$$/'/" -e "s/''//g"`; \
	    for class_name in $${class_list} ; do  \
	        echo "  Add navigable: $${class_name} to selection file" ; \
	        $(cmtexe) expand model "<Navigable_selection.xml class=$${class_name}/>" >> ${dict_dir}/${dictionary}_selection.xml ; \
	        $(cmtexe) expand model "<ElementLink_selection.xml class=$${class_name}/>" >> ${dict_dir}/${dictionary}_selection.xml ; \
	        $(cmtexe) expand model "<ElementLinkVector_selection.xml class=$${class_name}/>" >> ${dict_dir}/${dictionary}_selection.xml ; \
	        $(cmtexe) expand model "<DataLink_selection.xml class=$${class_name}/>" >> ${dict_dir}/${dictionary}_selection.xml ; \
	    done ; \
	fi 
	@if test ! -z "${reflex_dict${dictionary}_data_links}" ; then \
	    class_list=`echo '$(reflex_dict${dictionary}_data_links)' | sed -e "s/[ ][ ]*/' '/g" -e "s/^/'/"  -e "s/$$/'/" -e "s/''//g"`; \
	    for class_name in $${class_list} ; do  \
	        echo "  Add data link: $${class_name} to selection file" ; \
	        $(cmtexe) expand model "<DataLink_selection.xml class=$${class_name}/>" >> ${dict_dir}/${dictionary}_selection.xml ; \
	    done ; \
	fi 
	@if test ! -z "${reflex_dict${dictionary}_element_links}" ; then \
	    class_list=`echo '$(reflex_dict${dictionary}_element_links)' | sed -e "s/[ ][ ]*/' '/g" -e "s/^/'/"  -e "s/$$/'/" -e "s/''//g"`; \
	    for class_name in $${class_list} ; do  \
	        echo "  Add element link: $${class_name} to selection file" ; \
	        $(cmtexe) expand model "<ElementLink_selection.xml class=$${class_name}/>" >> ${dict_dir}/${dictionary}_selection.xml ; \
	        $(cmtexe) expand model "<ElementLinkVector_selection.xml class=$${class_name}/>" >> ${dict_dir}/${dictionary}_selection.xml ; \
	        $(cmtexe) expand model "<DataLink_selection.xml class=$${class_name}/>" >> ${dict_dir}/${dictionary}_selection.xml ; \
	    done ; \
	fi 
	@if test ! -z ${reflex_dict${dictionary}_element_link_vectors} ; then \
	    class_list=`echo '$(reflex_dict${dictionary}_element_link_vectors)' | sed -e "s/[ ][ ]*/' '/g" -e "s/^/'/"  -e "s/$$/'/" -e "s/''//g"`; \
	    for class_name in $${class_list} ; do  \
	        echo "  This is deprecated. Include the class in navigables if possible, or just use elementLinks" ; \
	        echo "  Add element link vector: $${class_name} to selection file" ; \
	        $(cmtexe) expand model "<ElementLinkVector_selection.xml class=$${class_name}/>" >> ${dict_dir}/${dictionary}_selection.xml ; \
	        $(cmtexe) expand model "<DataLink_selection.xml class=$${class_name}/>" >> ${dict_dir}/${dictionary}_selection.xml ; \
	    done ; \
	fi 
	@if test ! -z ${reflex_dict${dictionary}_extra_selection} ; then \
            package=$(reflex_dict${dictionary}_package) ; \
            sel_list="$(reflex_dict${dictionary}_extra_selection)" ; \
	    for sel_name in $${sel_list} ; do  \
                cat ../$${package}/$${sel_name} >> ${dict_dir}/${dictionary}_selection.xml ; \
	    done ; \
	fi 
	$(silent)echo "</lcgdict>" >> ${dict_dir}/${dictionary}_selection.xml 
	$(silent)touch ${dict_dir}/${CONSTITUENT}DictBegin.stamp

${dict_dir}/${CONSTITUENT}Dict.stamp :
	$(silent)touch ${dict_dir}/${CONSTITUENT}Dict.stamp

#End: create final part of required files
${dict_dir}/${CONSTITUENT}DictEnd.stamp : ${dict_dir}/${CONSTITUENT}Dict.stamp
	$(echo) "----- END Dictionary selection.xml file generation for ${dictionary} -----"
	$(silent)touch ${dict_dir}/${CONSTITUENT}DictEnd.stamp
