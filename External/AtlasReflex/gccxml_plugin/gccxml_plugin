#!/usr/bin/env python

from __future__ import print_function
import sys
import os

if len(sys.argv) < 2 or sys.argv[1] == '--print':
   print ('gccxml_plugin')
   sys.exit(0)

def pathsearch (file, path):
   for p in path.split(':'):
      pp = os.path.join (p, file)
      if os.path.exists (pp):
         return pp
   return None


# Search LD_LIBRARY_PATH for the plugin.
plugin_name = 'libgccxml_plugin'
plugin_path = pathsearch (plugin_name + '.so', os.environ['LD_LIBRARY_PATH'])
if not plugin_path:
   print ("Can't find gccxml plugin", plugin_name, "in LD_LIBRARY_PATH",
          file = sys.stderr)
   sys.exit(1)

# New Code ###################################
cxxflags = []
xml_file = ''
compiler = 'gcc'
argv     = []
is_flag  = False
is_comp  = False
for arg in sys.argv[1:]:
    if arg == '--gccxml-cxxflags':
        is_flag = True
        is_comp = False
    elif arg == '--gccxml-compiler':
        is_comp = True        
        is_flag = False
    elif is_flag and arg.startswith('-D'):
        cxxflags.append(arg)
    elif is_comp and not arg.startswith('-'):
        compiler = arg
        is_comp  = False
    elif arg.startswith('-fxml='):
        is_flag  = False
        is_comp  = False
        xml_file = arg[6:]        
    else:
        is_flag = False
        is_comp = False
        argv.append(arg)
print ("gccxml_plugin: cxxflags:", cxxflags, file = sys.stdout)
print ("gccxml_plugin: xml_file:", xml_file, file = sys.stdout)
print ("gccxml_plugin: gcc_compiler:", compiler, file = sys.stdout)
print ("gccxml_plugin: remaining args:", argv, file = sys.stdout)

if len(xml_file) == 0:
   print ("gccxml_plugin: xml_file not specified", file = sys.stderr)
   sys.exit(1)

# End of New Code ###################################

# Original Code ###################################
####cxxflags = []
####while len(sys.argv) >= 3 and sys.argv[1] == '--gccxml-cxxflags':
####   cxxflags.append (sys.argv[2])
####   del sys.argv[1:3]

####if len(sys.argv)<3 or not sys.argv[2].startswith ('-fxml='):
####   print ("Second argument should be -fxml=", file = sys.stderr)
####   sys.exit(1)
####xml_file = sys.argv[2][6:]
# End of Original Code ###################################

args = ['gcc', '-x', 'c++', '--std=c++11', '-S']
args.append ('-fplugin=' + plugin_path)
args.append ('-D__GCCXML__')
args.append ('-D__REFLEX__')
args.append ('-Wno-deprecated')
args.append ('-fplugin-arg-%s-xml=%s' % (plugin_name, xml_file))
args += cxxflags
####DRQ args.append (sys.argv[1])
####DRQ args += sys.argv[3:]
####DAQ added
args += argv
cmd = ' '.join(args)
cmd = cmd.replace ('"', '\\"')
print ("gccxml_plugin: cmd:", cmd, file = sys.stdout)
if '-v' in sys.argv:
   print(cmd)
ret = os.system (cmd)
sys.exit (ret)
