package AtlasPyFwdBwdPorts
author  Sebastien Binet <binet@cern.ch>

use AtlasPolicy 	AtlasPolicy-*
use ExternalPolicy	ExternalPolicy-*	External
use AtlasPython 	AtlasPython-*		External
use PyCmt		PyCmt-*			Tools -no_auto_imports

apply_pattern declare_scripts files="\
 -s=$(AtlasPyFwdBwdPorts_root)/bin \
 autoconf-build.py
"
### ---------------------------------------------------------------------------
### support for autoconf-based python packages
###
pattern pkg_autoconf_build \
   include_dirs $(CMTINSTALLAREA)/$(CMTCONFIG)/include ; \
   private ; \
   macro_append constituents " pkg_autoconf_build_<name>" ; \
   macro pkg_autoconf_build_<name>_dependencies "" ; \
   action pkg_autoconf_build_<name> "$(AtlasPyFwdBwdPorts_root)/bin/autoconf-build.py --name=<name> --src-dir='<src_dir>' --install-dir='$(CMTINSTALLAREA)/<install_dir>' --configure-options='<configure_options>'" ; \
   end_private

# note: this is the autoconf meaning of LDFLAGS (ie: a list of -L<lib dir>)
macro_append pkg_autoconf_ldflags "$(cpplinkflags) $(cmt_installarea_linkopts)"

# libraries to pass to the linker, e.g. -l<library>
macro pkg_autoconf_libs ""

# C compiler command
macro pkg_autoconf_cc "$(cc)"
# C compiler flags
macro pkg_autoconf_cflags "$(cflags) $(cppflags) $(cppdebugflags)"
macro_remove pkg_autoconf_cflags "-Woverloaded-virtual"
macro_remove pkg_autoconf_cflags "-Wno-deprecated"

# C++ compiler command
macro pkg_autoconf_cxx "$(cpp)"
# C++ compiler flags
macro pkg_autoconf_cxxflags "$(cppflags) $(cppdebugflags)"

# Fortran compiler command
macro pkg_autoconf_fc "$(for)"
macro pkg_autoconf_fcflags "$(fflags)"

# note: this is the autoconf meaning of CPPFLAGS (ie: a list of -I<incl dir>)
macro pkg_autoconf_cppflags "$(includes)"

### ---------------------------------------------------------------------------

private

## C-extensions are crippled w/o this flag...
macro_append cc " -fno-strict-aliasing"
macro_remove cflags "-Wno-deprecated"
macro_remove cflags "-Woverloaded-virtual"

## building the package(s) from source

apply_pattern make_pkgbuild \
 name=ordereddict \
 file=pkgbuild_ordereddict.py
macro_append make_pkgbuild_ordereddict_dependencies " make_pkgbuild_collections "

apply_pattern make_pkgbuild \
 name=nested_dict \
 file=pkgbuild_nested_dict.py
macro_append make_pkgbuild_ordereddict_dependencies " make_pkgbuild_collections "

apply_pattern make_pkgbuild \
 name=bunch \
 file=pkgbuild_bunch.py
macro_append make_pkgbuild_bunch_dependencies " make_pkgbuild_collections "
macro_append make_pkgbuild_bunch_dependencies " make_pkgbuild_distribute "

apply_pattern make_pkgbuild \
 name=distribute \
 file=pkgbuild_distribute.py
macro_append make_pkgbuild_distribute_dependencies " make_pkgbuild_collections "

# macro setuptools_version "0.6c11"
# apply_pattern make_pkgbuild \
#  name=setuptools \
#  src_dir=$(AtlasPyFwdBwdPorts_root)/src/setuptools-$(setuptools_version).tar.gz \
#  install_dir=$(tag)/lib/python$(Python_config_version_twodigit)
# macro_append make_pkgbuild_setuptools_dependencies " make_pkgbuild_collections "

apply_pattern make_pkgbuild \
 name=abc \
 file=pkgbuild_abc.py

apply_pattern make_pkgbuild \
 name=collections \
 file=pkgbuild_collections.py
macro_append make_pkgbuild_collections_dependencies " make_pkgbuild_abc "

apply_pattern make_pkgbuild \
 name=itertools \
 file=pkgbuild_itertools.py

macro iterutils_version "0.1.6"
apply_pattern make_pkgbuild \
 name=iterutils \
 file=pkgbuild_iterutils.py
macro_append make_pkgbuild_iterutils_dependencies " make_pkgbuild_collections "
macro_append make_pkgbuild_iterutils_dependencies " make_pkgbuild_distribute "
macro_append make_pkgbuild_iterutils_dependencies " make_pkgbuild_itertools "

apply_pattern make_pkgbuild \
 name=mercurial \
 file=pkgbuild_mercurial.py
macro_append make_pkgbuild_mercurial_dependencies " make_pkgbuild_collections "

apply_pattern make_pkgbuild \
 name=simplejson \
 file=pkgbuild_simplejson.py
macro_append make_pkgbuild_simplejson_dependencies " make_pkgbuild_distribute "

macro pyflakes_version "1.1.0"
apply_pattern make_pkgbuild \
 name=pyflakes \
 file=pkgbuild_pyflakes.py
macro_append make_pkgbuild_pyflakes_dependencies " make_pkgbuild_collections "

macro argparse_version "1.1"
apply_pattern make_pkgbuild \
 name=argparse \
 file=pkgbuild_argparse.py
macro_append make_pkgbuild_argparse_dependencies " make_pkgbuild_collections "
macro_append make_pkgbuild_argparse_dependencies " make_pkgbuild_distribute "

apply_pattern make_pkgbuild \
 name=grin \
 file=pkgbuild_grin.py
macro_append make_pkgbuild_grin_dependencies " make_pkgbuild_argparse "

apply_pattern make_pkgbuild \
 name=ruffus \
 file=pkgbuild_ruffus.py
macro_append make_pkgbuild_ruffus_dependencies " make_pkgbuild_simplejson "

apply_pattern make_pkgbuild \
 name=jsonpickle \
 file=pkgbuild_jsonpickle.py
macro_append make_pkgbuild_jsonpickle_dependencies " make_pkgbuild_simplejson "

macro hgsvn_version "0.1.8"
apply_pattern make_pkgbuild \
 name=hgsvn \
 file=pkgbuild_hgsvn.py
macro_append make_pkgbuild_hgsvn_dependencies " make_pkgbuild_distribute "

apply_pattern make_pkgbuild \
 name=extensions \
 file=pkgbuild_extensions.py
macro_append make_pkgbuild_extensions_dependencies " make_pkgbuild_collections "

macro affinity_version "0.1.0"
apply_pattern make_pkgbuild \
 name=affinity \
 file=pkgbuild_affinity.py
macro_append make_pkgbuild_affinity_dependencies " make_pkgbuild_distribute "

apply_pattern make_pkgbuild \
 name=keyring \
 file=pkgbuild_keyring.py
macro_append make_pkgbuild_keyring_dependencies " make_pkgbuild_distribute "

apply_pattern make_pkgbuild \
 name=pyinotify \
 file=pkgbuild_pyinotify.py
macro_append make_pkgbuild_pyinotify_dependencies " make_pkgbuild_distribute "

apply_pattern make_pkgbuild \
 name=pyyaml \
 file=pkgbuild_pyyaml.py
macro_append make_pkgbuild_pyyaml_dependencies " make_pkgbuild_distribute "

apply_pattern make_pkgbuild \
 name=pycrypto \
 file=pkgbuild_pycrypto.py
macro_append make_pkgbuild_pycrypto_dependencies " make_pkgbuild_distribute "

apply_pattern make_pkgbuild \
 name=paramiko \
 file=pkgbuild_paramiko.py
macro_append make_pkgbuild_paramiko_dependencies " make_pkgbuild_pycrypto "


apply_pattern make_pkgbuild \
 name=beaker \
 file=pkgbuild_beaker.py
macro_append make_pkgbuild_beaker_dependencies " make_pkgbuild_distribute "

apply_pattern make_pkgbuild \
 name=pip \
 file=pkgbuild_pip.py
macro_append make_pkgbuild_pip_dependencies " make_pkgbuild_distribute "

apply_pattern make_pkgbuild \
 name=virtualenv \
 file=pkgbuild_virtualenv.py
macro_append make_pkgbuild_virtualenv_dependencies " make_pkgbuild_pip "

apply_pattern make_pkgbuild \
 name=futures \
 file=pkgbuild_futures.py
macro_append make_pkgbuild_futures_dependencies " make_pkgbuild_distribute "

apply_pattern make_pkgbuild \
 name=datadiff \
 file=pkgbuild_datadiff.py
macro_append make_pkgbuild_datadiff_dependencies " make_pkgbuild_distribute "

end_private

# simple alias for grin
alias grin 'python -m grin'

# aliases for hgsvn
alias hgimportsvn 'python -m hgsvn.run.hgimportsvn'
alias hgpullsvn 'python -m hgsvn.run.hgpullsvn'

private
## for ATN tests
use TestPolicy TestPolicy-* 
end_private
