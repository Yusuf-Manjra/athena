
                             2 July 2003  RDS

This is a brief how-to which explains how to generate the pool
converters for a data package. (See the corresponding how-to in the
AtlasSEAL package)

We take as an example the EventInfo package. The basic procedure is to
use the cmt pattern "poocnv" to generate the converters for a package
with data objects. This creates a component library which with the
converters in it.

Note that a corresponding pattern, lcgdict, which today is in the
AtlasSEAL package, is used to generate the LCG dictionary loader. This
is described in the how-to of the AtlasSEAL package.

The procedure:

1) Look at EventInfo's req file (below the poolcnv pattern is
   commented out):

package EventInfo

author	  P Calafiura <pcalafiura@lbl.gov>
author	  RD Schaffer <R.D.Schaffer@cern.ch>

use AtlasPolicy AtlasPolicy-01-*
use CLIDSvc     CLIDSvc-*        Control

# The following uses are to get the lcgdict and poolcnv patterns, resply.
# They are "hidden" behind "private" and "no_auto_imports" to keep 
# clients of EventInfo from seeing excess dependenciesprivate
use AtlasSEAL	AtlasSEAL-00-*	 External -no_auto_imports
use AtlasPOOL	AtlasPOOL-00-*	 External -no_auto_imports
public

# Normal lib for the data classes
library EventInfo EventID.cxx EventType.cxx EventInfo.cxx PileUpEventInfo.cxx
apply_pattern installed_library

# Pattern to build the dict lib. User should create a single header
# file: <package>Dict.h which includes all other .h files. See EventInfoDict
apply_pattern lcgdict dict=EventInfo  headerfiles="../EventInfo/EventInfoDict.h"

# Pattern to generate pool converters for the two data object classes:
# (Currently commented out)
#apply_pattern poolcnv files="-s=../EventInfo EventInfo.h PileUpEventInfo.h"

# A selection file must be created by hand. This file lists the
# classes to be added to the dictionary, and which fields are
# transient 
private
macro_append  lcgdict_options " --select=../EventInfo/selection.xml "


2) Follow the instructions for creating the dictionary in the how-to
   in the AtlasSEAL package.

3) Uncomment the "apply_pattern poolcnv" and add in the .h files for
   each to the data object ONLY. I.e. not for all .h's, just the ones
   with a CLID/CLASS_DEF macro.

4) Build the package and follow the instructions on running pool


