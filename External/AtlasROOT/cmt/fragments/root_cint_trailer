# Trailer for root_cint fragment:
#
# This fragment runs root cint.
#
# See root_cint_header for more complete documentation
#

# Dependency on ${OBJS} - the full list of $(dict)${NAME}.h, is needed
# for parallel build
$(dict)${CONSTITUENT}.cxx :: ${OBJS} #$(dict)${CONSTITUENT}.stamp 
	cd $(bin); $(rootcint) -f $(dict)${CONSTITUENT}.cxx ${rootmap_opts} -c ${root_cint_includes} `cat ${OBJS}`  



#===========================
#MN:  install the PCM file (named $pcmFN) generated by ROOT during dictionary creation (see rule above)

pcmFN := ${CONSTITUENT}_rdict.pcm


${CONSTITUENT}.pcm :  ${installDir}${pcmFN}
	@echo ${pcmFN} installed


${installDir}${pcmFN} : ${dict}${pcmFN} ${installDir}
	@echo "Installing PCM  ${pcmFN}"
#	$(symlink_command) $< $@   # MN: need to get the correct dest path that is good for a symlink ($bin is relative)
	$(atlas_install_command)  $<  $@ 

${dict}${pcmFN} :  $(dict)${CONSTITUENT}.cxx

# cleanup:
clean :: ${CONSTITUENT}clean
	@cd .
	@echo "${CONSTITUENT}clean  done"

${CONSTITUENT}clean :: 
	$(cleanup_echo) ROOT dictionary
	-$(cleanup_silent) rm -fr $(dict)
	-rm -f ${installDir}${pcmFN}


