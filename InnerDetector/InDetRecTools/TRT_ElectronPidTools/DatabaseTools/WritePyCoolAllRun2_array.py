#!/bin/env python

# Copyright (C) 2002-2017 CERN for the benefit of the ATLAS collaboration
import sys
from PyCool import cool,coral
import array
from struct import *


TYPE="MC"
#TYPE="Data"



if TYPE=="MC":
    dbfile="mycool_MC_4ByteBlob.db"
    dbname="OFLP200" 
    TagHT  = "TRTCalibPID-Col-MC-Run2-dev-00-00-00"
else:
    dbfile="mycool_Data.db"
    dbname="COMP200" 
    TagHT  = "TRTCalibPID-Col-Run2-dev-00-00-00"
    

def main():
    # remove the old db file so that we can write the new one
    try:
        import os
        os.remove(dbfile)
    except:
        pass
    # ----------------------------------------------------------------------- #
    # get database service and open database
    # ----------------------------------------------------------------------- #
    dbSvc=cool.DatabaseSvcFactory.databaseService()
    # database accessed via physical name
    dbstring="sqlite://;schema=%s;dbname=%s" % (dbfile,dbname)
    try:
        db=dbSvc.createDatabase(dbstring)
    except Exception,e:
        print 'Problem creating database',e
        sys.exit(-1)
    print "Created database",dbstring
    
    # ----------------------------------------------------------------------- #
    # setup a folder for ToT
    # ----------------------------------------------------------------------- #
    specHT=cool.RecordSpecification()
    
    specHT.extend("TRT",cool.StorageType.Blob64k)    
    #specHT.extend("TRT",cool.StorageType.Blob16M)
    
    # folder meta-data - note for Athena this has a special meaning
    descHT='<timeStamp>run-event</timeStamp><addrHeader><address_header service_type="71" clid="40774348" /></addrHeader><typeName>AthenaAttributeList</typeName>'
    
    # create the folder - single version
    # last argument is createParents - if true, automatically creates parent folders if needed
    # note this will not work if the database already exists - delete mycool.db first
    HTfolder=db.createFolder('/TRT/Calib/PIDver_New',specHT,descHT,cool.FolderVersioning.MULTI_VERSION,True)
        
    # ----------------------------------------------------------------------- #
    # now fill in some data - create a record and fill it
    # ----------------------------------------------------------------------- #
    data_HT=cool.Record(specHT)
    
    # get a reference to the blob
    HTblob=data_HT["TRT"]
    
    # set the size (in bytes)
    HTblob.resize(len(dataBytesHT))

    #outputArray = array.array('L')
    outputArray = array.array('f')
    print outputArray.itemsize
    print  sys.float_info
    if outputArray.itemsize != 4:
         print 'Wrong integer size, please use old software release'
         exit(1)


    print "Length data HT",len(dataBytesHT)
    for i in xrange(0,len(dataBytesHT)):
        iiii = dataBytesHT[i]
        outputArray.append(iiii)

    Checksum = 0
    for x in  dataBytesHT:
                    Checksum += sys.getsizeof( int (round (100000 * x )) )

    print 'Checksum: %i' % (Checksum)
    tempFile = open("tempFileTRTCOnverting.dat", "w+b")
#    print outputArray
    outputArray.tofile(tempFile)
    tempFile.close()

    tempFile = open("tempFileTRTCOnverting.dat", "rb")
    byteBuffer = tempFile.read()
    HTblob.resize(len(byteBuffer))
    i = 0
    for cByte in byteBuffer:
         HTblob[i] = cByte
         i += 1
    print i
    tempFile.close()

    print "Will store this object",data_HT #data_barrel,data_endcap
    print "len: ",len(HTblob) 
    # store object with IOV valid from 0-10, channel 1
    HTfolder.storeObject(0,cool.ValidityKeyMax,data_HT,0,TagHT)
    print "Stored objects"
    db.closeDatabase()




    # Just to check that this is fine:
    if (1):
      tempFile = open("tempFileTRTCOnverting.dat", "rb")
      byte = tempFile.read(4)
      count = 0 
      while byte != "": 
          print unpack('f', byte)[0]
          byte = tempFile.read(4)
          count += 1
      print "Objects read: ",count
      os.system('rm tempFileTRTCOnverting.dat')

#for MC:
if TYPE=="MC":
    dataBytesHT = []
   
	## HEADER: 
    # Version: 
    dataBytesHT.append(5.0)
    # Day: 
    dataBytesHT.append(25.0)
    # Month: 
    dataBytesHT.append(2.0)
    # year: 
    dataBytesHT.append(15.0)


      ## BARREL
    pars = [1.5000, 3.8822, 0.0744, 0.1551, 3.2011, 0.2236]

    pars_B_Zee_SL  	= [ 0.654, 0.889, 0.957, 1.025, 1.036, 0.988, 1.107, 1.053, 1.058, 0.948, 0.910, 1.006, 0.953, 0.978, 0.991, 0.947, 1.018, 0.987, 1.001, 0.832, 0.949, 0.967, 0.996, 0.996, 1.016, 0.957, 1.049, 1.001, 1.029, 1.017, 0.970, 1.060, 1.017, 1.034, 1.033, 0.979, 1.053, 1.017, 1.029, 1.049, 0.988, 1.051, 1.024, 0.831, 1.009, 0.973, 1.043, 1.024, 0.965, 1.068, 1.016, 1.046, 1.039, 0.987, 1.072, 1.025, 1.049, 1.043, 0.991, 1.073, 1.021, 1.040, 1.045, 0.982, 1.073, 1.046, 1.035, 1.043, 0.977, 1.065, 1.030, 1.024, 1.044];
    pars_B_Zmm_SL	= [ 1.068, 1.130, 1.150, 1.180, 1.129, 1.116, 1.146, 1.102, 1.073, 1.102, 1.083, 1.095, 1.071, 1.058, 1.075, 1.071, 1.068, 1.026, 1.026, 1.020, 1.030, 1.051, 1.067, 1.050, 1.049, 1.037, 1.052, 1.028, 1.027, 1.028, 1.007, 1.043, 1.024, 1.013, 1.005, 0.994, 1.004, 0.986, 0.982, 0.995, 0.978, 0.972, 0.954, 0.940, 0.976, 0.984, 0.997, 0.987, 0.957, 0.982, 0.984, 0.975, 0.981, 0.960, 0.981, 0.952, 0.965, 0.951, 0.941, 0.952, 0.928, 0.936, 0.936, 0.917, 0.933, 0.932, 0.896, 0.900, 0.892, 0.898, 0.885, 0.880, 0.874];
	
    pars_B_Zee_ZRpos 	= [ 0.877, 0.909, 0.915, 0.922, 0.927, 0.932, 0.933, 0.937, 0.939, 0.945, 0.953, 0.916, 0.929, 0.966, 0.974, 0.991, 0.992, 1.003, 1.013, 1.006, 0.992, 1.007, 1.017, 0.990, 1.039, 1.069, 1.090, 1.107, 1.126, 1.144, 1.156, 1.183, 1.193, 1.210, 1.206, 1.029];
    pars_B_Zmm_ZRpos	= [ 0.884, 0.902, 0.906, 0.911, 0.902, 0.908, 0.922, 0.912, 0.914, 0.922, 0.922, 0.921, 0.933, 0.952, 0.957, 0.959, 0.971, 0.980, 0.992, 0.994, 1.003, 1.014, 1.017, 1.024, 1.055, 1.064, 1.086, 1.116, 1.134, 1.156, 1.186, 1.197, 1.217, 1.251, 1.249, 1.042];

    pars_B_Zee_Rtrk	= [ 1.294, 1.331, 1.341, 1.334, 1.326, 1.317, 1.299, 1.276, 1.242, 1.203, 1.166, 1.121, 1.071, 1.013, 0.944, 0.868, 0.775, 0.674, 0.577, 0.536, 0.622, 0.689];
    pars_B_Zmm_Rtrk 	= [ 1.143, 1.133, 1.143, 1.152, 1.157, 1.151, 1.138, 1.139, 1.119, 1.094, 1.067, 1.034, 1.002, 0.953, 0.899, 0.841, 0.787, 0.734, 0.727, 0.882, 1.336, 1.434];

    pars_B_Zee_PU	= [ 1.004, 1.004, 1.004, 1.004, 1.004, 1.003, 1.003, 1.003, 1.003, 1.003, 1.003, 1.002, 1.002, 1.002, 1.002, 1.002, 1.002, 1.001, 1.001, 1.001, 1.001, 1.001, 1.001, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.998, 0.998, 0.998, 0.998];
    pars_B_Zmm_PU	= [ 0.761, 0.773, 0.786, 0.798, 0.810, 0.822, 0.834, 0.846, 0.859, 0.871, 0.883, 0.895, 0.907, 0.919, 0.932, 0.944, 0.956, 0.968, 0.980, 0.992, 1.005, 1.017, 1.029, 1.041, 1.053, 1.065, 1.078, 1.090, 1.102, 1.114, 1.126, 1.138, 1.151, 1.163, 1.175, 1.187, 1.199, 1.211, 1.224, 1.236];

    pars_B_Zee_Occ      = [ 0.917, 0.919, 0.922, 0.925, 0.928, 0.930, 0.933, 0.936, 0.939, 0.942, 0.944, 0.947, 0.950, 0.953, 0.956, 0.958, 0.961, 0.964, 0.967, 0.970, 0.972, 0.975, 0.978, 0.981, 0.983, 0.986, 0.989, 0.992, 0.995, 0.997, 1.000, 1.003, 1.006, 1.009, 1.011, 1.014, 1.017, 1.020, 1.023, 1.025, 1.028, 1.031, 1.034, 1.036, 1.039, 1.042, 1.045, 1.048, 1.050, 1.053, 1.056, 1.059, 1.062, 1.064, 1.067, 1.070, 1.073, 1.076, 1.078, 1.081];
    pars_B_Zmm_Occ	= [ 0.633, 0.648, 0.663, 0.678, 0.693, 0.709, 0.724, 0.739, 0.754, 0.769, 0.785, 0.800, 0.815, 0.830, 0.845, 0.860, 0.876, 0.891, 0.906, 0.921, 0.936, 0.952, 0.967, 0.982, 0.997, 1.012, 1.028, 1.043, 1.058, 1.073, 1.088, 1.103, 1.119, 1.134, 1.149, 1.164, 1.179, 1.195, 1.210, 1.225, 1.240, 1.255, 1.270, 1.286, 1.301, 1.316, 1.331, 1.346, 1.362, 1.377, 1.392, 1.407, 1.422, 1.437, 1.453, 1.468, 1.483, 1.498, 1.513, 1.529];


    print "Len before Barrel ", len(dataBytesHT)
    dataBytesHT += pars
    dataBytesHT += (pars_B_Zee_SL)
    dataBytesHT += (pars_B_Zmm_SL)
    dataBytesHT += (pars_B_Zee_ZRpos)
    dataBytesHT += (pars_B_Zmm_ZRpos)
    dataBytesHT += (pars_B_Zee_Rtrk)
    dataBytesHT += (pars_B_Zmm_Rtrk)
    dataBytesHT += (pars_B_Zee_PU)
    dataBytesHT += (pars_B_Zmm_PU)
    dataBytesHT += (pars_B_Zee_Occ)
    dataBytesHT += (pars_B_Zmm_Occ)


    print "After barrel" ,  len(dataBytesHT)

      ## Endcap A wheels: 
    pars =  [-1.5000, 3.9137, 0.0702, 0.1654, 3.3043, 0.2093]

    pars_EA_Zee_SL	= [ 0.854, 0.926, 0.966, 0.979, 1.011, 1.025, 1.021, 1.023, 1.037, 1.032, 1.033, 1.022, 1.036, 1.046, 1.032, 1.034]; 
    pars_EA_Zmm_SL	= [ 0.966, 0.969, 0.979, 0.969, 0.986, 1.005, 0.997, 1.023, 1.020, 1.002, 1.018, 1.002, 1.013, 1.054, 1.013, 1.013]; 

    pars_EA_Zee_ZRpos	= [ 0.472, 0.608, 0.688, 0.722, 0.779, 0.807, 0.844, 0.874, 0.882, 0.915, 0.956, 0.973, 0.984, 1.002, 0.998, 1.008, 1.019, 1.030, 1.014, 1.026, 1.039, 1.042, 1.040, 1.049, 1.055, 1.059, 1.069, 1.076, 1.082, 1.078, 1.084, 1.101, 1.105, 1.106, 1.101, 1.098, 1.101, 1.107, 1.104, 1.080, 1.092, 1.081, 1.060, 1.041, 1.021, 0.988, 0.965, 0.939, 0.871, 0.740]; 
    pars_EA_Zmm_ZRpos	= [ 0.680, 0.756, 0.809, 0.808, 0.864, 0.872, 0.888, 0.907, 0.923, 0.938, 0.932, 0.960, 0.980, 0.972, 0.984, 0.979, 0.986, 0.980, 0.998, 0.999, 0.996, 1.014, 1.009, 1.005, 1.025, 1.020, 1.030, 1.020, 1.048, 1.049, 1.050, 1.045, 1.044, 1.049, 1.059, 1.064, 1.047, 1.065, 1.076, 1.069, 1.073, 1.076, 1.066, 1.080, 1.080, 1.070, 1.066, 1.038, 1.088, 1.012]; 

    pars_EA_Zee_Rtrk	= [ 1.315, 1.347, 1.351, 1.358, 1.350, 1.343, 1.322, 1.309, 1.281, 1.250, 1.216, 1.168, 1.118, 1.058, 0.982, 0.887, 0.783, 0.671, 0.557, 0.495, 0.539, 0.718]; 
    pars_EA_Zmm_Rtrk	= [ 1.236, 1.235, 1.260, 1.274, 1.266, 1.270, 1.260, 1.253, 1.225, 1.201, 1.154, 1.113, 1.045, 0.993, 0.905, 0.809, 0.716, 0.626, 0.582, 0.666, 1.048, 1.083]; 


    pars_EA_Zee_PU	= [ 1.064, 1.061, 1.059, 1.056, 1.054, 1.052, 1.049, 1.047, 1.044, 1.042, 1.039, 1.037, 1.034, 1.032, 1.029, 1.027, 1.024, 1.022, 1.019, 1.017, 1.014, 1.012, 1.009, 1.007, 1.004, 1.002, 1.000, 0.997, 0.995, 0.992, 0.990, 0.987, 0.985, 0.982, 0.980, 0.977, 0.975, 0.972, 0.970, 0.967]; 
    pars_EA_Zmm_PU= [ 0.894, 0.899, 0.905, 0.910, 0.915, 0.921, 0.926, 0.931, 0.937, 0.942, 0.947, 0.953, 0.958, 0.963, 0.969, 0.974, 0.979, 0.985, 0.990, 0.995, 1.001, 1.006, 1.011, 1.016, 1.022, 1.027, 1.032, 1.038, 1.043, 1.048, 1.054, 1.059, 1.064, 1.070, 1.075, 1.080, 1.086, 1.091, 1.096, 1.102]; 


    pars_EA_Zee_Occ	= [ 0.980, 0.981, 0.981, 0.982, 0.983, 0.984, 0.984, 0.985, 0.986, 0.986, 0.987, 0.988, 0.989, 0.989, 0.990, 0.991, 0.991, 0.992, 0.993, 0.994, 0.994, 0.995, 0.996, 0.996, 0.997, 0.998, 0.999, 0.999, 1.000, 1.001, 1.001, 1.002, 1.003, 1.004, 1.004, 1.005, 1.006, 1.006, 1.007, 1.008, 1.009, 1.009, 1.010, 1.011, 1.011, 1.012, 1.013, 1.014, 1.014, 1.015, 1.016, 1.016, 1.017, 1.018, 1.019, 1.019, 1.020, 1.021, 1.021, 1.022]; 
    pars_EA_Zmm_Occ	= [ 0.807, 0.815, 0.824, 0.832, 0.841, 0.849, 0.858, 0.866, 0.875, 0.883, 0.892, 0.900, 0.909, 0.917, 0.926, 0.934, 0.943, 0.951, 0.960, 0.968, 0.977, 0.985, 0.994, 1.002, 1.011, 1.019, 1.028, 1.036, 1.045, 1.053, 1.062, 1.070, 1.079, 1.087, 1.096, 1.104, 1.113, 1.121, 1.130, 1.138, 1.147, 1.155, 1.164, 1.172, 1.181, 1.189, 1.198, 1.206, 1.215, 1.223, 1.232, 1.240, 1.249, 1.257, 1.266, 1.274, 1.283, 1.291, 1.300, 1.308];



    dataBytesHT += pars
    dataBytesHT += (pars_EA_Zee_SL)
    dataBytesHT += (pars_EA_Zmm_SL)
    dataBytesHT += (pars_EA_Zee_ZRpos)
    dataBytesHT += (pars_EA_Zmm_ZRpos)
    dataBytesHT += (pars_EA_Zee_Rtrk)
    dataBytesHT += (pars_EA_Zmm_Rtrk)
    dataBytesHT += (pars_EA_Zee_PU)
    dataBytesHT += (pars_EA_Zmm_PU)
    dataBytesHT += (pars_EA_Zee_Occ)
    dataBytesHT += (pars_EA_Zmm_Occ)

    print "After A WHEELS ", len(dataBytesHT)





      ## Endcap B wheels: 
    pars = [-1.5000, 3.5856, 0.0736, 0.1827, 3.1540, 0.1683]

    pars_EB_Zee_SL	= [ 0.833, 0.956, 1.022, 1.046, 1.026, 1.059, 1.065, 1.077]; 
    pars_EB_Zmm_SL	= [ 0.926, 0.995, 1.026, 1.028, 0.997, 1.005, 1.013, 1.038]; 

    pars_EB_Zee_ZRpos	= [ 0.500, 0.654, 0.863, 0.907, 0.944, 0.972, 0.974, 0.986, 1.005, 1.033, 1.050, 1.059, 1.055, 1.061, 1.050, 1.068, 1.063, 1.066, 1.052, 1.082, 1.057, 1.061, 1.049, 1.055, 1.060, 1.055, 1.046, 1.058, 1.056, 1.067, 1.086, 1.060, 1.056, 1.051, 1.040, 0.993, 0.961, 0.935, 0.919, 0.892, 0.882, 0.846, 0.849, 0.796, 0.784, 0.719, 0.623, 0.471, 0.275, 0.331]; 
    pars_EB_Zmm_ZRpos	= [ 0.500, 0.673, 1.117, 0.988, 0.813, 1.029, 0.845, 0.912, 0.963, 0.867, 1.083, 0.955, 0.953, 1.051, 1.089, 0.963, 0.976, 0.908, 1.090, 1.033, 1.034, 1.074, 1.004, 1.004, 1.055, 1.062, 1.003, 1.003, 1.028, 1.043, 1.014, 1.000, 1.012, 1.018, 1.037, 1.064, 1.024, 0.990, 0.971, 0.981, 1.022, 0.974, 0.936, 0.916, 0.984, 0.900, 0.933, 0.858, 0.687, 0.907]; 



    pars_EB_Zee_Rtrk	= [ 1.272, 1.302, 1.312, 1.317, 1.293, 1.305, 1.290, 1.269, 1.256, 1.226, 1.201, 1.165, 1.116, 1.060, 0.997, 0.909, 0.809, 0.722, 0.611, 0.530, 0.498, 0.594]; 
    pars_EB_Zmm_Rtrk 	= [ 1.159, 1.208, 1.297, 1.188, 1.248, 1.228, 1.181, 1.205, 1.201, 1.149, 1.128, 1.089, 1.038, 0.942, 0.884, 0.843, 0.781, 0.666, 0.653, 0.672, 0.979, 0.888]; 



    pars_EB_Zee_PU	= [ 1.061, 1.058, 1.056, 1.054, 1.051, 1.049, 1.047, 1.044, 1.042, 1.040, 1.037, 1.035, 1.033, 1.030, 1.028, 1.025, 1.023, 1.021, 1.018, 1.016, 1.014, 1.011, 1.009, 1.007, 1.004, 1.002, 1.000, 0.997, 0.995, 0.993, 0.990, 0.988, 0.985, 0.983, 0.981, 0.978, 0.976, 0.974, 0.971, 0.969]; 
    pars_EB_Zmm_PU	= [ 0.828, 0.837, 0.845, 0.854, 0.862, 0.871, 0.880, 0.888, 0.897, 0.905, 0.914, 0.922, 0.931, 0.940, 0.948, 0.957, 0.965, 0.974, 0.982, 0.991, 0.999, 1.008, 1.017, 1.025, 1.034, 1.042, 1.051, 1.059, 1.068, 1.077, 1.085, 1.094, 1.102, 1.111, 1.119, 1.128, 1.136, 1.145, 1.154, 1.162]; 


    pars_EB_Zee_Occ	= [ 0.984, 0.985, 0.985, 0.986, 0.986, 0.987, 0.988, 0.988, 0.989, 0.989, 0.990, 0.990, 0.991, 0.992, 0.992, 0.993, 0.993, 0.994, 0.994, 0.995, 0.995, 0.996, 0.997, 0.997, 0.998, 0.998, 0.999, 0.999, 1.000, 1.001, 1.001, 1.002, 1.002, 1.003, 1.003, 1.004, 1.004, 1.005, 1.006, 1.006, 1.007, 1.007, 1.008, 1.008, 1.009, 1.010, 1.010, 1.011, 1.011, 1.012, 1.012, 1.013, 1.014, 1.014, 1.015, 1.015, 1.016, 1.016, 1.017, 1.017]; 
    pars_EB_Zmm_Occ	= [ 0.733, 0.744, 0.756, 0.767, 0.779, 0.791, 0.802, 0.814, 0.825, 0.837, 0.849, 0.860, 0.872, 0.883, 0.895, 0.906, 0.918, 0.930, 0.941, 0.953, 0.964, 0.976, 0.987, 0.999, 1.011, 1.022, 1.034, 1.045, 1.057, 1.069, 1.080, 1.092, 1.103, 1.115, 1.126, 1.138, 1.150, 1.161, 1.173, 1.184, 1.196, 1.207, 1.219, 1.231, 1.242, 1.254, 1.265, 1.277, 1.289, 1.300, 1.312, 1.323, 1.335, 1.346, 1.358, 1.370, 1.381, 1.393, 1.404, 1.416]; 


    dataBytesHT += (pars)
    dataBytesHT += (pars_EB_Zee_SL)
    dataBytesHT += (pars_EB_Zmm_SL)
    dataBytesHT += (pars_EB_Zee_ZRpos)
    dataBytesHT += (pars_EB_Zmm_ZRpos)
    dataBytesHT += (pars_EB_Zee_Rtrk)
    dataBytesHT += (pars_EB_Zmm_Rtrk)
    dataBytesHT += (pars_EB_Zee_PU)
    dataBytesHT += (pars_EB_Zmm_PU)
    dataBytesHT += (pars_EB_Zee_Occ)
    dataBytesHT += (pars_EB_Zmm_Occ)


    print "After B WHEELS ", len(dataBytesHT)
    print dataBytesHT	



else:
#for Data:
    dataBytesHT = []

if __name__=="__main__":
    main()
