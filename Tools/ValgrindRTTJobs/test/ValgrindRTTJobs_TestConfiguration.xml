<?xml version="1.0"?>
<!DOCTYPE unifiedTestConfiguration SYSTEM "http://www.hep.ucl.ac.uk/atlas/AtlasTesting/DTD/unifiedTestConfiguration.dtd">

<unifiedTestConfiguration>

<atn/>

<kv/>                

<rtt xmlns="http://www.hep.ucl.ac.uk/atlas/AtlasTesting/rtt">
  <!-- AUTHORS: Antonio Limosani (antonio.limosani AT cern.ch) -->
  <rttContactPerson>Antonio.Limosani AT cern.ch</rttContactPerson>
  <mailto>Antonio.Limosani@cern.ch</mailto>
  <refRelease>15.0.0</refRelease>
  
  <jobList>
    <classification>
      <displayClass>OfflineValidation</displayClass>
      <displayProcess>Reco</displayProcess>
      <displayComponent>Athena-Core</displayComponent>
    </classification>

    <jobTransform userJobId="RAWtoESD_MC_NoTrigger">
      <doc>Short Testjob</doc>
      <jobTransformJobName>RAWtoESD_MC_NoTrigger</jobTransformJobName>
      <jobTransformCmd>
	cp ${ROOTSYS}/etc/valgrind-root.supp valgrind-root.supp; get_files newSuppressions.supp; get_files oracleDB.supp; get_files root.supp; get_files valgrindRTT.supp; get_files Gaudi.supp; get_files valgrind-python.supp ; Reco_tf.py --inputRDOFile=root://eosatlas//eos/atlas/user/a/atlaspmb/mc/valid1.117050.PowhegPythia_P2011C_ttbar.recon.RDO.e2658_s1967_s1964_r5787_tid01572821_00/RDO.01572821._000019.pool.root.1 --outputESDFile=myESD.pool.root --preInclude=RecExCommon/ValgrindTweaks.py --maxEvents=7 --preExec='rec.doTrigger=False;rec.doMonitoring=True' --execOnly  --athenaopts='--config-only=rec.pkl --stdcmalloc'; valgrind --tool=memcheck --leak-check=full --suppressions=root.supp --suppressions=valgrind-root.supp --suppressions=newSuppressions.supp --suppressions=oracleDB.supp --suppressions=valgrindRTT.supp --suppressions=Gaudi.supp --suppressions=valgrind-python.supp --num-callers=30 --track-origins=yes `which python` `which athena.py` rec.pkl  
      </jobTransformCmd>
      <group>Valgrind_JobTransforms</group>
      <queue>long</queue>
    </jobTransform>
 
   <jobTransform userJobId="ESDtoAOD_MC_NoTrigger">
      <doc>Short Testjob</doc>
      <jobTransformJobName>ESDtoAOD_MC_NoTrigger</jobTransformJobName>
      <jobTransformCmd>
	cp ${ROOTSYS}/etc/valgrind-root.supp valgrind-root.supp; get_files newSuppressions.supp; get_files oracleDB.supp; get_files root.supp; get_files valgrindRTT.supp; get_files Gaudi.supp; get_files valgrind-python.supp ; Reco_tf.py --inputRDOFile=root://eosatlas//eos/atlas/user/a/atlaspmb/mc/valid1.117050.PowhegPythia_P2011C_ttbar.recon.RDO.e2658_s1967_s1964_r5787_tid01572821_00/RDO.01572821._000019.pool.root.1 --outputESDFile=myESD.pool.root --maxEvents=7 --preExec='rec.doTrigger=False;rec.doMonitoring=True'; Reco_tf.py --inputESDFile=myESD.pool.root --outputAODFile=myAOD.pool.root --preInclude=RecExCommon/ValgrindTweaks.py --maxEvents=7 --preExec='rec.doTrigger=False;rec.doMonitoring=True' --execOnly  --athenaopts='--config-only=rec.pkl --stdcmalloc'; valgrind --tool=memcheck --leak-check=full --suppressions=root.supp --suppressions=valgrind-root.supp --suppressions=newSuppressions.supp --suppressions=oracleDB.supp --suppressions=valgrindRTT.supp --suppressions=Gaudi.supp --suppressions=valgrind-python.supp --num-callers=30 --track-origins=yes `which python` `which athena.py` rec.pkl  
      </jobTransformCmd>
      <group>Valgrind_JobTransforms</group>
      <queue>long</queue>
    </jobTransform>

    <jobTransform userJobId="RAWtoESD_MC_NoTrigger_cachegrind">
      <doc>Short Testjob</doc>
      <jobTransformJobName>RAWtoESD_MC_NoTrigger</jobTransformJobName>
      <jobTransformCmd>
	cp ${ROOTSYS}/etc/valgrind-root.supp valgrind-root.supp; get_files newSuppressions.supp; get_files oracleDB.supp; get_files root.supp; get_files valgrindRTT.supp; get_files Gaudi.supp; get_files valgrind-python.supp ; Reco_tf.py --inputRDOFile=root://eosatlas//eos/atlas/user/a/atlaspmb/mc/valid1.117050.PowhegPythia_P2011C_ttbar.recon.RDO.e2658_s1967_s1964_r5787_tid01572821_00/RDO.01572821._000019.pool.root.1,root://eosatlas//eos/atlas/user/a/atlaspmb/mc/valid1.117050.PowhegPythia_P2011C_ttbar.recon.RDO.e2658_s1967_s1964_r5787_tid01572821_00/RDO.01572821._000127.pool.root.1 --outputESDFile=myESD.pool.root --preInclude=RecExCommon/ValgrindTweaks.py --maxEvents=100 --preExec='rec.doTrigger=False;rec.doMonitoring=True' --execOnly  --athenaopts='--config-only=rec.pkl --stdcmalloc'; valgrind --tool=cachegrind `which python` `which athena.py` rec.pkl  
      </jobTransformCmd>
      <group>Valgrind_JobTransforms</group>
      <queue>long</queue>
    </jobTransform>
 
   <jobTransform userJobId="ESDtoAOD_MC_NoTrigger_cachegrind">
      <doc>Short Testjob</doc>
      <jobTransformJobName>ESDtoAOD_MC_NoTrigger_cachegrind</jobTransformJobName>
      <jobTransformCmd>
	cp ${ROOTSYS}/etc/valgrind-root.supp valgrind-root.supp; get_files newSuppressions.supp; get_files oracleDB.supp; get_files root.supp; get_files valgrindRTT.supp; get_files Gaudi.supp; get_files valgrind-python.supp ; Reco_tf.py --inputRDOFile=root://eosatlas//eos/atlas/user/a/atlaspmb/mc/valid1.117050.PowhegPythia_P2011C_ttbar.recon.RDO.e2658_s1967_s1964_r5787_tid01572821_00/RDO.01572821._000019.pool.root.1,root://eosatlas//eos/atlas/user/a/atlaspmb/mc/valid1.117050.PowhegPythia_P2011C_ttbar.recon.RDO.e2658_s1967_s1964_r5787_tid01572821_00/RDO.01572821._000127.pool.root.1 --outputESDFile=myESD.pool.root --maxEvents=100 --preExec='rec.doTrigger=False;rec.doMonitoring=True'; Reco_tf.py --inputESDFile=myESD.pool.root --outputAODFile=myAOD.pool.root --preInclude=RecExCommon/ValgrindTweaks.py --maxEvents=100 --preExec='rec.doTrigger=False;rec.doMonitoring=True' --execOnly  --athenaopts='--config-only=rec.pkl --stdcmalloc'; valgrind --tool=cachegrind `which python` `which athena.py` rec.pkl  
      </jobTransformCmd>
      <group>Valgrind_JobTransforms</group>
      <queue>long</queue>
    </jobTransform>

    <jobTransform userJobId="RAWtoESD_MC_SystemOnlyTrigger">
      <doc>Short Testjob</doc>
      <jobTransformJobName>RAWtoESD_MC_SystemOnlyTrigger</jobTransformJobName>
      <jobTransformCmd>
	cp ${ROOTSYS}/etc/valgrind-root.supp valgrind-root.supp; get_files newSuppressions.supp; get_files oracleDB.supp; get_files root.supp; get_files valgrindRTT.supp; get_files Gaudi.supp; get_files valgrind-python.supp ; Reco_tf.py --inputRDOFile=root://eosatlas//eos/atlas/user/a/atlaspmb/mc/valid1.117050.PowhegPythia_P2011C_ttbar.recon.RDO.e2658_s1967_s1964_r5787_tid01572821_00/RDO.01572821._000019.pool.root.1 --outputESDFile=myESD.pool.root --preInclude=RecExCommon/ValgrindTweaks.py --maxEvents=10 --preExec='rec.doTrigger=True;rec.doForwardDet=False;rec.doInDet=True;rec.doMuon=True;rec.doCalo=True;rec.doEgamma=False;rec.doMuonCombined=False;rec.doJetMissingETTag=False;rec.doTau=False;from RecExConfig.RecAlgsFlags import recAlgs;recAlgs.doMuonSpShower=False;rec.doBTagging=False;recAlgs.doEFlow=False;recAlgs.doEFlowJet=False;recAlgs.doMissingET=False;recAlgs.doMissingETSig=False; from JetRec.JetRecFlags import jetFlags;jetFlags.Enabled=False;' --execOnly  --athenaopts='--config-only=rec.pkl --stdcmalloc'; valgrind --tool=memcheck --leak-check=full --suppressions=root.supp --suppressions=valgrind-root.supp --suppressions=newSuppressions.supp --suppressions=oracleDB.supp --suppressions=valgrindRTT.supp --suppressions=Gaudi.supp --suppressions=valgrind-python.supp --num-callers=30 --track-origins=yes `which python` `which athena.py` rec.pkl  
      </jobTransformCmd>
      <group>Valgrind_JobTransforms</group>
      <queue>long</queue>
    </jobTransform>

    <jobTransform userJobId="RAWtoESD_MC_SystemOnlyTrigger_massif">
      <doc>Short Testjob</doc>
      <jobTransformJobName>RAWtoESD_MC_SystemOnlyTrigger_massif</jobTransformJobName>
      <jobTransformCmd>
	cp ${ROOTSYS}/etc/valgrind-root.supp valgrind-root.supp; get_files newSuppressions.supp; get_files oracleDB.supp; get_files root.supp; get_files valgrindRTT.supp; get_files Gaudi.supp; get_files valgrind-python.supp ; Reco_tf.py --inputRDOFile=root://eosatlas//eos/atlas/user/a/atlaspmb/mc/valid1.117050.PowhegPythia_P2011C_ttbar.recon.RDO.e2658_s1967_s1964_r5787_tid01572821_00/RDO.01572821._000019.pool.root.1,root://eosatlas//eos/atlas/user/a/atlaspmb/mc/valid1.117050.PowhegPythia_P2011C_ttbar.recon.RDO.e2658_s1967_s1964_r5787_tid01572821_00/RDO.01572821._000127.pool.root.1 --outputESDFile=myESD.pool.root --preInclude=RecExCommon/ValgrindTweaks.py --maxEvents=100 --preExec='rec.doTrigger=True;rec.doForwardDet=False;rec.doInDet=True;rec.doMuon=True;rec.doCalo=True;rec.doEgamma=False;rec.doMuonCombined=False;rec.doJetMissingETTag=False;rec.doTau=False;from RecExConfig.RecAlgsFlags import recAlgs;recAlgs.doMuonSpShower=False;rec.doBTagging=False;recAlgs.doEFlow=False;recAlgs.doEFlowJet=False;recAlgs.doMissingET=False;recAlgs.doMissingETSig=False; from JetRec.JetRecFlags import jetFlags;jetFlags.Enabled=False;' --execOnly  --athenaopts='--config-only=rec.pkl --stdcmalloc'; valgrind --tool=massif `which python` `which athena.py` rec.pkl  
      </jobTransformCmd>
      <group>Valgrind_JobTransforms</group>
      <queue>long</queue>
    </jobTransform>

    <jobTransform userJobId="RAWtoESD_MC_SystemOnlyTrigger_massif_pages">
      <doc>Short Testjob</doc>
      <jobTransformJobName>RAWtoESD_MC_SystemOnlyTrigger_massif_pages</jobTransformJobName>
      <jobTransformCmd>
	cp ${ROOTSYS}/etc/valgrind-root.supp valgrind-root.supp; get_files newSuppressions.supp; get_files oracleDB.supp; get_files root.supp; get_files valgrindRTT.supp; get_files Gaudi.supp; get_files valgrind-python.supp ; Reco_tf.py --inputRDOFile=root://eosatlas//eos/atlas/user/a/atlaspmb/mc/valid1.117050.PowhegPythia_P2011C_ttbar.recon.RDO.e2658_s1967_s1964_r5787_tid01572821_00/RDO.01572821._000019.pool.root.1,root://eosatlas//eos/atlas/user/a/atlaspmb/mc/valid1.117050.PowhegPythia_P2011C_ttbar.recon.RDO.e2658_s1967_s1964_r5787_tid01572821_00/RDO.01572821._000127.pool.root.1 --outputESDFile=myESD.pool.root --preInclude=RecExCommon/ValgrindTweaks.py --maxEvents=100 --preExec='rec.doTrigger=True;rec.doForwardDet=False;rec.doInDet=True;rec.doMuon=True;rec.doCalo=True;rec.doEgamma=False;rec.doMuonCombined=False;rec.doJetMissingETTag=False;rec.doTau=False;from RecExConfig.RecAlgsFlags import recAlgs;recAlgs.doMuonSpShower=False;rec.doBTagging=False;recAlgs.doEFlow=False;recAlgs.doEFlowJet=False;recAlgs.doMissingET=False;recAlgs.doMissingETSig=False; from JetRec.JetRecFlags import jetFlags;jetFlags.Enabled=False;' --execOnly  --athenaopts='--config-only=rec.pkl --stdcmalloc'; valgrind --tool=massif --pages-as-heap=yes `which python` `which athena.py` rec.pkl  
      </jobTransformCmd>
      <group>Valgrind_JobTransforms</group>
      <queue>long</queue>
    </jobTransform>

    <jobTransform userJobId="RAWtoESD_MC_NoTrigger_massif">
      <doc>Short Testjob</doc>
      <jobTransformJobName>RAWtoESD_MC_NoTrigger_massif</jobTransformJobName>
      <jobTransformCmd>
	cp ${ROOTSYS}/etc/valgrind-root.supp valgrind-root.supp; get_files newSuppressions.supp; get_files oracleDB.supp; get_files root.supp; get_files valgrindRTT.supp; get_files Gaudi.supp; get_files valgrind-python.supp ; Reco_tf.py --inputRDOFile=root://eosatlas//eos/atlas/user/a/atlaspmb/mc/valid1.117050.PowhegPythia_P2011C_ttbar.recon.RDO.e2658_s1967_s1964_r5787_tid01572821_00/RDO.01572821._000019.pool.root.1,,root://eosatlas//eos/atlas/user/a/atlaspmb/mc/valid1.117050.PowhegPythia_P2011C_ttbar.recon.RDO.e2658_s1967_s1964_r5787_tid01572821_00/RDO.01572821._000127.pool.root.1 --outputESDFile=myESD.pool.root --maxEvents=100 --preExec='rec.doTrigger=False;rec.doMonitoring=True' --execOnly  --athenaopts='--config-only=rec.pkl --stdcmalloc'; valgrind --tool=massif  `which python` `which athena.py` rec.pkl  
      </jobTransformCmd>
      <group>Valgrind_JobTransforms</group>
      <queue>long</queue>
    </jobTransform>

    <jobTransform userJobId="RAWtoESD_MC_NoTrigger_massif_pages">
      <doc>Short Testjob</doc>
      <jobTransformJobName>RAWtoESD_MC_NoTrigger_massif_pages</jobTransformJobName>
      <jobTransformCmd>
	cp ${ROOTSYS}/etc/valgrind-root.supp valgrind-root.supp; get_files newSuppressions.supp; get_files oracleDB.supp; get_files root.supp; get_files valgrindRTT.supp; get_files Gaudi.supp; get_files valgrind-python.supp ; Reco_tf.py --inputRDOFile=root://eosatlas//eos/atlas/user/a/atlaspmb/mc/valid1.117050.PowhegPythia_P2011C_ttbar.recon.RDO.e2658_s1967_s1964_r5787_tid01572821_00/RDO.01572821._000019.pool.root.1,root://eosatlas//eos/atlas/user/a/atlaspmb/mc/valid1.117050.PowhegPythia_P2011C_ttbar.recon.RDO.e2658_s1967_s1964_r5787_tid01572821_00/RDO.01572821._000127.pool.root.1 --outputESDFile=myESD.pool.root --maxEvents=100 --preExec='rec.doTrigger=False;rec.doMonitoring=True' --execOnly  --athenaopts='--config-only=rec.pkl --stdcmalloc'; valgrind --tool=massif --pages-as-heap=yes `which python` `which athena.py` rec.pkl  
      </jobTransformCmd>
      <group>Valgrind_JobTransforms</group>
      <queue>long</queue>
    </jobTransform>

    <jobTransform userJobId="RAWtoESD_MC_NoTrigger_callgrind">
      <doc>Short Testjob</doc>
      <jobTransformJobName>RAWtoESD_MC_NoTrigger_callgrind</jobTransformJobName>
      <jobTransformCmd>
	cp ${ROOTSYS}/etc/valgrind-root.supp valgrind-root.supp; get_files newSuppressions.supp; get_files oracleDB.supp; get_files root.supp; get_files valgrindRTT.supp; get_files Gaudi.supp; get_files valgrind-python.supp ; Reco_tf.py --inputRDOFile=root://eosatlas//eos/atlas/user/a/atlaspmb/mc/valid1.117050.PowhegPythia_P2011C_ttbar.recon.RDO.e2658_s1967_s1964_r5787_tid01572821_00/RDO.01572821._000019.pool.root.1,root://eosatlas//eos/atlas/user/a/atlaspmb/mc/valid1.117050.PowhegPythia_P2011C_ttbar.recon.RDO.e2658_s1967_s1964_r5787_tid01572821_00/RDO.01572821._000127.pool.root.1 --outputESDFile=myESD.pool.root --preInclude=RecExCommon/ValgrindTweaks.py --maxEvents=100 --preExec='rec.doTrigger=False;rec.doMonitoring=True' --execOnly  --athenaopts='--config-only=rec.pkl --stdcmalloc'; valgrind --tool=callgrind --num-callers=100  `which python` `which athena.py` rec.pkl  
      </jobTransformCmd>
      <group>Valgrind_JobTransforms</group>
      <queue>long</queue>
    </jobTransform>


    <!-- ENDE -->
  </jobList>
  
  <jobGroups>
    <jobGroup name="Valgrind_JobTransforms" parent="Top">
      <keepFilePattern>*.root</keepFilePattern>
      <keepFilePattern>*.log</keepFilePattern>
      <keepFilePattern>*.log.gz</keepFilePattern>
      <keepFilePattern>*.txt</keepFilePattern>
      <keepFilePattern>*.py</keepFilePattern>
      <keepFilePattern>*.eps</keepFilePattern>
      <keepFilePattern>*.jpg</keepFilePattern>
      <keepFilePattern>*.html</keepFilePattern>
      <keepFilePattern>html/*.html</keepFilePattern>
      <keepFilePattern>processed/*.eps</keepFilePattern>
      <keepFilePattern>valgrind.out.process.*</keepFilePattern>
      <keepFilePattern>callgrind.out.process.*</keepFilePattern>
      <keepFilePattern>massif.out.process.*</keepFilePattern>
      <keepFilePattern displayColor="blue">processed/*.htm</keepFilePattern>
      <keepFilePattern displayColor="green" info="The main report">Report.html</keepFilePattern>
      <keepFilePattern>processed/*.gif</keepFilePattern>
      <keepFilePattern>rec.pkg.pkl</keepFilePattern>
      <auxFilePattern>memConsumption.C</auxFilePattern>
      <auxFilePattern>historyNightlies.C</auxFilePattern>
      <auxFilePattern>processValgrindOutput.sh</auxFilePattern>
      <auxFilePattern>dhat-postprocess.pl</auxFilePattern>

      
      <test position="1" runInAtlasEnv="yes">
        <modulename>PostProcessValgrind</modulename>
        <testname>PostProcessValgrind</testname>
      </test>

      <testToRemove>
        <jobGroupName>Top</jobGroupName>
        <testidentifier>CheckFileRunner0</testidentifier>
      </testToRemove>
    </jobGroup>
    
  </jobGroups>
  
</rtt>

</unifiedTestConfiguration>
