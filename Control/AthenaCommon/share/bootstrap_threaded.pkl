ccollections
defaultdict
p1
(c__builtin__
dict
p2
tRp3
S'StoreGateSvc'
p4
(dp5
S'IncidentSvc'
p6
S'IncidentSvc'
p7
sS'ProxyProviderSvc'
p8
S'ProxyProviderSvc'
p9
ssS'ChronoStatSvc'
p10
(dp11
S'HiveWhiteBoardSvc'
p12
S'EventDataSvc'
p13
ssS'EventDataSvc'
p14
(dp15
S'HiveStoreSvc'
p16
S'StoreGateSvc'
p17
sS'NSlots'
p18
S'1'
ssS'AthBeginSeq'
p19
(dp20
S'ExtraOutputs'
p21
S'[]'
p22
sS'EvtStore'
p23
S'StoreGateSvc'
p24
sS'ExtraInputs'
p25
S'[]'
p26
sS'Sequential'
p27
S'True'
p28
sS'Members'
p29
S"['AthIncFirerAlg/BeginIncFiringAlg', 'IncidentProcAlg/IncidentProcAlg1']"
p30
sS'NeededResources'
p31
S'[]'
p32
sS'DetStore'
p33
S'StoreGateSvc/DetectorStore'
p34
ssS'TimelineSvc'
p35
(dp36
S'Partial'
p37
S'False'
p38
sS'RecordTimeline'
p39
S'True'
p40
ssS'AvalancheSchedulerSvc'
p41
(dp42
S'ThreadPoolSize'
p43
S'1'
sS'OutputLevel'
p44
S'3'
sS'DataLoaderAlg'
p45
S'SGInputLoader'
p46
sS'ShowControlFlow'
p47
S'False'
p48
sS'CheckDependencies'
p49
S'True'
p50
sS'ShowDataDependencies'
p51
S'False'
p52
ssS'SGInputLoader'
p53
(dp54
S'ExtraOutputs'
p55
S'[]'
p56
sS'Load'
p57
S'[]'
p58
sS'FailIfNoProxy'
p59
S'False'
p60
sS'EvtStore'
p61
S'StoreGateSvc'
p62
sS'ExtraInputs'
p63
S'[]'
p64
sS'NeededResources'
p65
S'[]'
p66
sS'DetStore'
p67
S'StoreGateSvc/DetectorStore'
p68
ssS'CoreDumpSvc'
p69
(dp70
S'Signals'
p71
S'[11, 7, 4, 8]'
p72
sS'FatalHandler'
p73
S'-1'
p74
ssS'AuditorSvc'
p75
(dp76
S'Auditors'
p77
S"['AlgContextAuditor/AlgContextAuditor', 'SGCommitAuditor/SGCommitAuditor']"
p78
ssS'ClassIDSvc'
p79
(dp80
S'CLIDDBFiles'
p81
S"['clid.db', 'Gaudi_clid.db']"
p82
ssS'AthOutSeq'
p83
(dp84
S'ExtraOutputs'
p85
S'[]'
p86
sS'EvtStore'
p87
S'StoreGateSvc'
p88
sS'ExtraInputs'
p89
S'[]'
p90
sS'StopOverride'
p91
S'True'
p92
sS'Members'
p93
S'[]'
p94
sS'NeededResources'
p95
S'[]'
p96
sS'DetStore'
p97
S'StoreGateSvc/DetectorStore'
p98
ssS'BeginIncFiringAlg'
p99
(dp100
S'ExtraOutputs'
p101
S'[]'
p102
sS'EvtStore'
p103
S'StoreGateSvc'
p104
sS'ExtraInputs'
p105
S'[]'
p106
sS'FireSerial'
p107
S'False'
p108
sS'Incidents'
p109
S"['BeginEvent']"
p110
sS'NeededResources'
p111
S'[]'
p112
sS'DetStore'
p113
S'StoreGateSvc/DetectorStore'
p114
ssS'AthCondSeq'
p115
(dp116
S'ExtraOutputs'
p117
S'[]'
p118
sS'EvtStore'
p119
S'StoreGateSvc'
p120
sS'ExtraInputs'
p121
S'[]'
p122
sS'StopOverride'
p123
S'True'
p124
sS'Members'
p125
S'[]'
p126
sS'NeededResources'
p127
S'[]'
p128
sS'DetStore'
p129
S'StoreGateSvc/DetectorStore'
p130
ssS'StatusCodeSvc'
p131
(dp132
S'Filter'
p133
S"['Reflex::NewDelFunctionsT<StatusCode>::delete_T(void*)', 'ROOT::Reflex::NewDelFunctionsT<StatusCode>::delete_T(void*)']"
p134
sS'OutputLevel'
p135
S'3'
sS'AbortOnError'
p136
S'False'
p137
ssS'AthMasterSeq'
p138
(dp139
S'ExtraOutputs'
p140
S'[]'
p141
sS'EvtStore'
p142
S'StoreGateSvc'
p143
sS'ExtraInputs'
p144
S'[]'
p145
sS'Sequential'
p146
S'True'
p147
sS'Members'
p148
S"['AthSequencer/AthAlgEvtSeq', 'AthSequencer/AthOutSeq', 'AthSequencer/AthRegSeq']"
p149
sS'NeededResources'
p150
S'[]'
p151
sS'DetStore'
p152
S'StoreGateSvc/DetectorStore'
p153
ssS'AthAlgEvtSeq'
p154
(dp155
S'ExtraOutputs'
p156
S'[]'
p157
sS'EvtStore'
p158
S'StoreGateSvc'
p159
sS'ExtraInputs'
p160
S'[]'
p161
sS'Sequential'
p162
S'True'
p163
sS'StopOverride'
p164
S'True'
p165
sS'Members'
p166
S"['AthSequencer/AthBeginSeq', 'AthSequencer/AthAllAlgSeq', 'AthSequencer/AthEndSeq']"
p167
sS'NeededResources'
p168
S'[]'
p169
sS'DetStore'
p170
S'StoreGateSvc/DetectorStore'
p171
ssS'AthEndSeq'
p172
(dp173
S'ExtraOutputs'
p174
S'[]'
p175
sS'EvtStore'
p176
S'StoreGateSvc'
p177
sS'ExtraInputs'
p178
S'[]'
p179
sS'Sequential'
p180
S'True'
p181
sS'Members'
p182
S"['AthIncFirerAlg/EndIncFiringAlg', 'IncidentProcAlg/IncidentProcAlg2']"
p183
sS'NeededResources'
p184
S'[]'
p185
sS'DetStore'
p186
S'StoreGateSvc/DetectorStore'
p187
ssS'AlgResourcePool'
p188
(dp189
S'OutputLevel'
p190
S'3'
sS'TopAlg'
p191
S"['AthMasterSeq']"
p192
ssS'AthRegSeq'
p193
(dp194
S'ExtraOutputs'
p195
S'[]'
p196
sS'EvtStore'
p197
S'StoreGateSvc'
p198
sS'ExtraInputs'
p199
S'[]'
p200
sS'StopOverride'
p201
S'True'
p202
sS'Members'
p203
S'[]'
p204
sS'NeededResources'
p205
S'[]'
p206
sS'DetStore'
p207
S'StoreGateSvc/DetectorStore'
p208
ssS'EndIncFiringAlg'
p209
(dp210
S'ExtraOutputs'
p211
S'[]'
p212
sS'EvtStore'
p213
S'StoreGateSvc'
p214
sS'ExtraInputs'
p215
S'[]'
p216
sS'FireSerial'
p217
S'False'
p218
sS'Incidents'
p219
S"['EndEvent']"
p220
sS'NeededResources'
p221
S'[]'
p222
sS'DetStore'
p223
S'StoreGateSvc/DetectorStore'
p224
ssS'Streams'
p225
(dp226
S'ExtraOutputs'
p227
S'[]'
p228
sS'EvtStore'
p229
S'StoreGateSvc'
p230
sS'ExtraInputs'
p231
S'[]'
p232
sS'Members'
p233
S'[]'
p234
sS'NeededResources'
p235
S'[]'
p236
sS'DetStore'
p237
S'StoreGateSvc/DetectorStore'
p238
ssS'NTupleSvc'
p239
(dp240
S'InhibitPathes'
p241
S'[]'
p242
sS'Input'
p243
S'[]'
p244
sS'Output'
p245
S'[]'
p246
ssS'EventPersistencySvc'
p247
(dp248
S'CnvServices'
p249
S'[]'
p250
ssS'AthAlgSeq'
p251
(dp252
S'ExtraOutputs'
p253
S'[]'
p254
sS'IgnoreFilterPassed'
p255
S'True'
p256
sS'EvtStore'
p257
S'StoreGateSvc'
p258
sS'ExtraInputs'
p259
S'[]'
p260
sS'StopOverride'
p261
S'True'
p262
sS'Members'
p263
S"['SGInputLoader/SGInputLoader']"
p264
sS'NeededResources'
p265
S'[]'
p266
sS'DetStore'
p267
S'StoreGateSvc/DetectorStore'
p268
ssS'AthAllAlgSeq'
p269
(dp270
S'ExtraOutputs'
p271
S'[]'
p272
sS'EvtStore'
p273
S'StoreGateSvc'
p274
sS'ExtraInputs'
p275
S'[]'
p276
sS'StopOverride'
p277
S'True'
p278
sS'Members'
p279
S"['AthSequencer/AthAlgSeq', 'AthSequencer/AthCondSeq']"
p280
sS'NeededResources'
p281
S'[]'
p282
sS'DetStore'
p283
S'StoreGateSvc/DetectorStore'
p284
ssS'AthenaSealSvc'
p285
(dp286
S'DictNames'
p287
S'[]'
p288
sS'IgnoreDicts'
p289
S"['libSealCLHEPDict']"
p290
sS'IgnoreNames'
p291
S"['Gaudi', 'GaudiPython::Interface', 'GaudiPython::Helper', 'FactoryTable', 'IInterface', 'IFactory', 'IAlgFactory', 'ISvcFactory', 'IToolFactory', 'InterfaceID', 'StatusCode', 'IAppMgrUI', 'IProperty', 'Property', 'std::vector<Property*>', 'std::vector<const Property*>', 'std::list<IAlgorithm*>', 'std::list<IService*>', 'std::list<const IFactory*>', 'std::vector<IRegistry*>', 'SimpleProperty', 'SimplePropertyRef', 'IService', 'IAlgorithm', 'ISvcManager', 'IAlgManager', 'IJobOptionsSvc', 'ISvcLocator', 'IEventProcessor', 'IDataProviderSvc', 'IDataManagerSvc', 'IRegistry', 'ContainedObject', 'std::vector<const ContainedObject*>', 'DataObject', 'IHistogramSvc', 'AIDA::I', 'Algorithm', 'Service', 'GaudiPython::PyAlgorithm', 'GaudiPython::PyAlgorithmWrap', 'IParticlePropertySvc', 'ParticleProperty', 'StoreGateSvc', 'IStoragePolicy', 'CharDbArray', 'DoubleDbArray', 'FloatDbArray', 'IntDbArray', 'LongDbArray', 'ShortDbArray', 'AthenaEventLoopMgr', 'MinimalEventLoopMgr', 'PyAthenaEventLoopMgr', 'NTuple::Directory', 'NTuple::File ', 'NTuple::Tuple', 'INTuple', 'NTuple::Tuple', 'greater<int>', 'allocator<', 'string']"
p292
ssS'IncidentProcAlg2'
p293
(dp294
S'ExtraOutputs'
p295
S'[]'
p296
sS'NeededResources'
p297
S'[]'
p298
sS'ExtraInputs'
p299
S'[]'
p300
ssS'DetectorStore'
p301
(dp302
S'IncidentSvc'
p303
S'IncidentSvc'
p304
sS'ProxyProviderSvc'
p305
S'ProxyProviderSvc'
p306
ssS'ConditionStore'
p307
(dp308
S'IncidentSvc'
p309
S'IncidentSvc'
p310
sS'ProxyProviderSvc'
p311
S'ProxyProviderSvc'
p312
ssS'IncidentProcAlg1'
p313
(dp314
S'ExtraOutputs'
p315
S'[]'
p316
sS'NeededResources'
p317
S'[]'
p318
sS'ExtraInputs'
p319
S'[]'
p320
ssS'HistogramDataSvc'
p321
(dp322
S'Input'
p323
S'[]'
p324
sS'InhibitPathes'
p325
S'[]'
p326
ssS'HistoryStore'
p327
(dp328
S'IncidentSvc'
p329
S'IncidentSvc'
p330
sS'ProxyProviderSvc'
p331
S'ProxyProviderSvc'
p332
ss.ccollections
defaultdict
p1
(c__builtin__
dict
p2
tRp3
S'AthenaSealSvc'
p4
(dp5
S'DictNames'
p6
S'[]'
p7
sS'IgnoreDicts'
p8
S"['libSealCLHEPDict']"
p9
sS'IgnoreNames'
p10
S"['Gaudi', 'GaudiPython::Interface', 'GaudiPython::Helper', 'FactoryTable', 'IInterface', 'IFactory', 'IAlgFactory', 'ISvcFactory', 'IToolFactory', 'InterfaceID', 'StatusCode', 'IAppMgrUI', 'IProperty', 'Property', 'std::vector<Property*>', 'std::vector<const Property*>', 'std::list<IAlgorithm*>', 'std::list<IService*>', 'std::list<const IFactory*>', 'std::vector<IRegistry*>', 'SimpleProperty', 'SimplePropertyRef', 'IService', 'IAlgorithm', 'ISvcManager', 'IAlgManager', 'IJobOptionsSvc', 'ISvcLocator', 'IEventProcessor', 'IDataProviderSvc', 'IDataManagerSvc', 'IRegistry', 'ContainedObject', 'std::vector<const ContainedObject*>', 'DataObject', 'IHistogramSvc', 'AIDA::I', 'Algorithm', 'Service', 'GaudiPython::PyAlgorithm', 'GaudiPython::PyAlgorithmWrap', 'IParticlePropertySvc', 'ParticleProperty', 'StoreGateSvc', 'IStoragePolicy', 'CharDbArray', 'DoubleDbArray', 'FloatDbArray', 'IntDbArray', 'LongDbArray', 'ShortDbArray', 'AthenaEventLoopMgr', 'MinimalEventLoopMgr', 'PyAthenaEventLoopMgr', 'NTuple::Directory', 'NTuple::File ', 'NTuple::Tuple', 'INTuple', 'NTuple::Tuple', 'greater<int>', 'allocator<', 'string']"
p11
ssS'AthenaHiveEventLoopMgr'
p12
(dp13
S'TopAlg'
p14
S'[]'
p15
sS'OutStream'
p16
S'[]'
p17
sS'EventStore'
p18
S'StoreGateSvc'
p19
sS'SchedulerSvc'
p20
S'AvalancheSchedulerSvc'
p21
sS'WhiteboardSvc'
p22
S'EventDataSvc'
p23
sS'PreSelectTools'
p24
S'[]'
p25
ssS'CoreDumpSvc'
p26
(dp27
S'Signals'
p28
S'[11, 7, 4, 8]'
p29
sS'FatalHandler'
p30
S'-1'
p31
ssS'ApplicationMgr'
p32
(dp33
S'Runable'
p34
S'AppMgrRunable'
p35
sS'ReturnCode'
p36
S'0'
sS'TopAlg'
p37
S"['AthSequencer/AthMasterSeq']"
p38
sS'PrintAlgsSequence'
p39
S'False'
p40
sS'EventLoop'
p41
S'AthenaHiveEventLoopMgr'
p42
sS'ExtSvcCreates'
p43
g40
sS'Environment'
p44
S'{}'
p45
sS'JobOptionsPath'
p46
S''
sS'Dlls'
p47
S'[]'
p48
sS'SvcMapping'
p49
S"['EvtDataSvc/EventDataSvc', 'DetDataSvc/DetectorDataSvc', 'HistogramSvc/HistogramDataSvc', 'HbookCnv::PersSvc/HbookHistSvc', 'RootHistCnv::PersSvc/RootHistSvc', 'EvtPersistencySvc/EventPersistencySvc', 'DetPersistencySvc/DetectorPersistencySvc', 'HistogramPersistencySvc/HistogramPersistencySvc']"
p50
sS'AppName'
p51
S'ApplicationMgr'
p52
sS'AuditServices'
p53
g40
sS'OutStream'
p54
S'[]'
p55
sS'ActivateHistory'
p56
g40
sS'StalledEventMonitoring'
p57
g40
sS'InitializationLoopCheck'
p58
g40
sS'JobOptionsSvcType'
p59
S'JobOptionsSvc'
p60
sS'JobOptionsPreAction'
p61
S''
sS'StatusCodeCheck'
p62
g40
sS'AuditTools'
p63
g40
sS'AlgTypeAliases'
p64
S'{}'
p65
sS'EvtSel'
p66
S''
sS'PluginDebugLevel'
p67
S'0'
sS'OutputLevel'
p68
S'3'
sS'AppVersion'
p69
S''
sS'EvtMax'
p70
S'-1'
p71
sS'SvcOptMapping'
p72
S'[]'
p73
sS'CreateSvc'
p74
S"['ToolSvc/ToolSvc', 'AthDictLoaderSvc/AthDictLoaderSvc', 'AthenaSealSvc/AthenaSealSvc', 'CoreDumpSvc/CoreDumpSvc']"
p75
sS'PropertiesPrint'
p76
g40
sS'JobOptionsType'
p77
S'NONE'
p78
sS'OutStreamType'
p79
S'AthenaOutputStream'
p80
sS'StopOnSignal'
p81
g40
sS'ExtSvc'
p82
S"['ToolSvc/ToolSvc', 'AuditorSvc/AuditorSvc', 'MessageSvc/MessageSvc', 'IncidentSvc/IncidentSvc', 'EvtPersistencySvc/EventPersistencySvc', 'HistogramSvc/HistogramDataSvc', 'NTupleSvc/NTupleSvc', 'RndmGenSvc/RndmGenSvc', 'ChronoStatSvc/ChronoStatSvc', 'StatusCodeSvc/StatusCodeSvc', 'StoreGateSvc/StoreGateSvc', 'StoreGateSvc/DetectorStore', 'StoreGateSvc/HistoryStore', 'StoreGateSvc/ConditionStore', 'ClassIDSvc/ClassIDSvc', 'AthDictLoaderSvc/AthDictLoaderSvc', 'AthenaSealSvc/AthenaSealSvc', 'CoreDumpSvc/CoreDumpSvc', 'SG::HiveMgrSvc/EventDataSvc', 'AlgResourcePool/AlgResourcePool', 'AvalancheSchedulerSvc/AvalancheSchedulerSvc', 'AthenaHiveEventLoopMgr/AthenaHiveEventLoopMgr', 'TimelineSvc/TimelineSvc', 'JobOptionsSvc/JobOptionsSvc']"
p83
sS'AuditAlgorithms'
p84
S'True'
p85
sS'HistogramPersistency'
p86
S'NONE'
p87
sS'MessageSvcType'
p88
S'InertMessageSvc'
p89
sS'JobOptionsPostAction'
p90
S''
ssS'MessageSvc'
p91
(dp92
S'verboseColorCode'
p93
S'[]'
p94
sS'alwaysColorCode'
p95
S'[]'
p96
sS'setInfo'
p97
S'[]'
p98
sS'tracedInactiveSources'
p99
S'[]'
p100
sS'setAlways'
p101
S'[]'
p102
sS'Format'
p103
S'% F%40W%S%4W%e%s%7W%R%T %0W%M'
p104
sS'defaultLimit'
p105
S'0'
sS'enableSuppression'
p106
g85
sS'OutputLevel'
p107
S'3'
sS'warningColorCode'
p108
S"['yellow']"
p109
sS'errorColorCode'
p110
S"['white', 'red']"
p111
sS'setVerbose'
p112
S'[]'
p113
sS'debugColorCode'
p114
S'[]'
p115
sS'infoColorCode'
p116
S'[]'
p117
sS'setDebug'
p118
S'[]'
p119
sS'setFatal'
p120
S'[]'
p121
sS'setError'
p122
S'[]'
p123
sS'fatalColorCode'
p124
S"['blue', 'red']"
p125
sS'setWarning'
p126
S'[]'
p127
ss.(lp1
.